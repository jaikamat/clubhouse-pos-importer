{"version":3,"sources":["Header/logos/magic-ball.png","utils/api_resources.ts","utils/makeAuthHeader.ts","context/loginQuery.ts","context/AuthProvider.tsx","Header/Header.tsx","common/autocompleteQuery.ts","common/SearchBar.tsx","common/QohLabels.tsx","utils/parseQoh.ts","common/createToast.js","common/CardImage.tsx","common/MarketPrice.tsx","common/Language.js","utils/dropdownOptions.ts","utils/checkCardFinish.ts","utils/ScryfallCard.ts","context/InventoryContext.tsx","ManageInventory/ManageInventoryListItem.js","ManageInventory/ManageInventoryList.js","ManageInventory/AllLocationInventory.js","ManageInventory/ManageInventory.js","context/SaleContext.js","utils/sortSaleList.ts","NewSale/BrowseCardItem.js","NewSale/BrowseCardList.js","common/Price.tsx","common/TooltipImage.js","NewSale/SaleLineItem.js","NewSale/SalePriceTotal.js","NewSale/FinishSale.js","NewSale/CustomerSaleList.js","NewSale/PrintList.js","NewSale/SuspendedSale.js","common/TotalCardsLabel.js","NewSale/Sale.js","BrowseSales/SalesListItem.js","BrowseSales/SalesList.js","BrowseSales/BrowseSales.js","PublicInventory/PublicCardItem.js","PublicInventory/PublicCardList.js","PublicInventory/PublicInventory.js","DeckboxClone/DeckboxCloneForm.js","DeckboxClone/DeckboxCloneRow.js","DeckboxClone/DeckboxClone.js","Login/Login.js","Logout/Logout.js","context/ReceivingContext.js","Receiving/ReceivingSearchItem.js","Receiving/ReceivingSearchList.js","Receiving/DefaultPlaceholder.js","Receiving/ReceivingListItem.js","Receiving/CashReport.js","Receiving/printCashReport.js","Receiving/ReceivingListModal.js","Receiving/ReceivingListTotals.js","Receiving/ReceivingList.js","Receiving/Receiving.js","LandingPage/Card.js","LandingPage/clubhouse_products.png","LandingPage/core_2021_draft_booster.png","LandingPage/core_2021_collector.jpg","LandingPage/double_masters.png","LandingPage/zen_meme.jpg","LandingPage/kaldheim.png","LandingPage/LandingPage.js","App.tsx","serviceWorker.js","index.js"],"names":["REACT_APP_ENVIRONMENT","process","env","getPrefix","FINISH_SALE","GET_CARD_FROM_ALL_LOCATIONS","ADD_CARD_TO_INVENTORY","RECEIVE_CARDS","GET_CARDS_BY_FILTER","GET_SET_NAMES","SUSPEND_SALE","LOGIN","GET_SALES_BY_TITLE","GET_CARDS_WITH_INFO_PUBLIC","GET_CARDS_WITH_INFO","GET_LIVE_PRICE","makeAuthHeader","Authorization","localStorage","getItem","loginQuery","username","password","currentLocation","a","axios","post","toLowerCase","headers","data","AuthContext","React","createContext","loggedIn","currentUser","AuthProvider","children","useState","setLoggedIn","setCurrentLocation","setCurrentUser","handleLogin","token","setItem","console","log","Provider","value","handleLogout","removeItem","style","background","boxShadow","Header","location","useContext","pathname","useLocation","Menu","inverted","fixed","Item","as","Link","replace","to","src","ballLogo","marginRight","alt","position","active","Dropdown","item","icon","Icon","name","color","Divider","autocompleteQuery","cardName","get","SearchBar","handleSearchSelect","onBlur","loading","setLoading","results","setResults","handleResultSelect","_","result","setTimeout","$","select","title","Search","onSearchChange","debounce","length","formattedResults","map","el","slice","leading","trailing","onResultSelect","placeholder","selectFirstResult","id","onFocus","e","target","createInventoryLineItems","inventoryQty","matchStrings","matches","finishCondition","quantity","FOIL_NM","FOIL_LP","FOIL_MP","FOIL_HP","NONFOIL_NM","NONFOIL_LP","NONFOIL_MP","NONFOIL_HP","prettyLabel","filter","m","LabelWithPopup","label","popupLineItems","Popup","content","msg","trigger","Label","undefined","image","Detail","QohLabels","parseQoh","foilQuantity","nonfoilQuantity","foilLineItems","nonfoilLineItems","ToastContainer","styled","Message","createToast","header","message","duration","toaster","notify","compact","zIndex","transition","CardImage","image_uris","card_faces","hover","hovered","setHovered","mouseOver","mouseOut","Image","size","transform","onMouseOver","onMouseOut","normal","LabelStyle","props","foil","displayPrice","price","toFixed","MarketPrice","finish","round","showMid","market","setMarket","median","setMedian","isFoil","useEffect","_isMounted","params","scryfallId","marketPrices","medianPrices","Number","n","loader","Math","ceil","LANG_CODES","en","es","fr","de","it","pt","ja","ko","ru","zhs","zht","he","la","grc","ar","sa","px","Language","languageCode","finishes","key","text","cardConditions","checkCardFinish","nonfoil","selectedFinish","finishDisabled","InventoryCard","card","_qoh","qtyToSell","qoh","this","quantities","printed_name","set","set_name","rarity","colors","type_line","frame_effects","lang","border_color","display_name","cardImage","color_identity","_createDisplayName","_getCardImage","toUpperCase","includes","myImage","InventoryContext","searchResults","changeCardQuantity","InventoryProvider","setSearchResults","term","matchInStock","modeledData","c","copiedState","targetIndex","findIndex","ManageInventoryListItem","setSelectedFinish","onSubmit","selectedCondition","resetForm","parseInt","cardInfo","focus","Segment","Group","divided","Content","className","fontSize","String","Description","initialValues","validate","errors","isInteger","initialErrors","values","handleSubmit","setFieldValue","isSubmitting","isValid","Form","Field","control","Input","type","onChange","Select","options","disabled","Button","primary","onClick","ManageInventoryList","cards","StyledContainer","display","FlexContainer","alignItems","marginLeft","QohLabel","AllLocationInventory","ch1","foilQty","nonfoilQty","ch2","setQuantities","Loader","inline","sub","HeaderContainer","justifyContent","ManageInventory","SaleContext","SaleProvider","saleListCards","setSaleListCards","_id","notes","list","suspendedSale","setSuspendedSale","restoreSale","response","suspendSale","customerName","delete","saleList","resetSaleState","ops","deleteSuspendedSale","finalizeSale","saleID","sale_data","Sale","addToSaleList","newCard","oldState","modeledCard","idx","splice","push","sortedCards","ORDER","helpSort","arrayConst","colorsLength","cardFace","sort","b","localeCompare","indexOf","sortSaleList","removeFromSaleList","newState","reject","createConditionOptions","removeZeroedQuantites","pickBy","p","Object","entries","d","conditionFinish","qty","split","join","createInitialSelectedFinish","keysMapped","keys","k","uniq","BrowseCardItem","selectedFinishCondition","setSelectedFinishCondition","selectedFinishConditionQty","setSelectedFinishConditionQty","quantityToSell","setQuantityToSell","setPrice","conditionOptions","setConditionOptions","selection","numVal","isNaN","step","BrowseCardList","Price","num","TooltipImage","image_uri","posX","left","width","height","borderRadius","BoldHelp","SaleLineItem","mouseInside","setMouseInside","mousePos","setMousePos","Table","Row","Cell","onMouseEnter","rect","getBoundingClientRect","X","clientX","x","onMouseMove","onMouseLeave","singleLine","circular","SalePriceTotal","total","reduce","acc","val","FinishSale","submit","setSubmit","showModal","setShowModal","handleFinalizeSale","modalTrigger","floated","Modal","basic","open","Actions","CustomerSaleList","Fragment","Body","clearing","PrintList","state","printClicked","print","setState","window","Component","div","ClearMargin","CharLimit","SuspendedSale","saleListLength","sales","setSales","setSaleID","modalOpen","setModalOpen","setCustomerName","setNotes","setDisabled","suspendBtn","restoreBtn","deleteBtn","loadingBtn","setLoadingBtn","getSales","clearFields","submitSuspendSale","submitRestoreSale","submitDeleteSale","Grid","columns","stackable","relaxed","Column","substring","TextArea","fluid","s","info","TotalCardsLabel","listLength","displayStr","findSaleCardsQty","curr","ButtonContainer","searchTerm","setSearchTerm","SalesListItem","saleData","quantitySold","cardList","pre","moment","createTime","format","SalesList","celled","unstackable","HeaderCell","card_list","BrowseSales","salesList","Wrapper","InventoryWrapper","InventoryRow","ImageWrapper","PublicCardItem","qohParsed","displayFoil","displayNonfoil","gridStyle","flexWrap","alignContent","PublicCardList","initialState","selectedLocation","locationOptions","PublicInventory","fetchCards","isSubmitted","paddingTop","Subheader","formatDropdownOptions","priceFilterDropdownOptions","finishDropdownOptions","sortByDropdownOptions","sortByDirectionDropdownOptions","sortByColorDropdownOptions","colorSpecificityDropdownOptions","typeLineOptions","frameOptions","setName","priceNum","priceFilter","sortBy","colorsArray","sortByDirection","colorSpecificity","typeLine","setNames","frame","DeckboxCloneForm","editionDropdownOptions","handleSearchBlur","handleChange","handleDropdownChange","setNameOptions","concatWithBlankOption","concat","widths","search","multiple","defaultValue","labelPosition","conditionMap","NM","LP","MP","HP","DeckboxCloneRow","mouseX","mouseY","mouseEnter","offsetLeft","clientY","offsetTop","mouseLeave","mouseMove","inventory","condition","cursor","v","DeckboxClone","count","currentPage","numPages","pageArray","isLoading","cachedFilters","showPages","searchTouched","fetchData","filters","page","pages","range","handlePage","showLeftPageButtons","showRightPageButtons","Container","Dimmer","marginTop","secondary","striped","colSpan","Footer","LoginContainer","FormContainer","Login","raised","Logout","TRADE_TYPES","CASH","CREDIT","LineItem","cardProps","cashPrice","marketPrice","creditPrice","uuid_key","uuid","tradeType","ReceivingContext","ReceivingProvider","receivingList","setReceivingList","commitToInventory","cardsToCommit","addToList","times","removeFromList","remove","activeTradeType","previousState","find","selectAll","selectType","forEach","arr","selectedPrice","resetSearchResults","ReceivingSearchItem","setQuantity","setCashPrice","setCreditPrice","setSelectedCondition","setMarketPrice","handlePriceChange","handleFocus","validateQty","validateTradeTypes","submitDisabled","ReceivingCardList","DefaultPlaceholder","TRADE_TYPE","ReceivingListItem","whiteSpace","CashReport","countByPriceAndID","closeCashModal","chain","temp_uuid","groupBy","mapValues","mergedWithQty","uniqBy","tradeQty","totalCashOut","sumBy","ReceivingListModal","cashTotal","creditTotal","submitToInventory","closeOnDimmerClick","onClose","FlexRow","FlexCol","StatisticColor","Statistic","ReceivingListTotals","showCashModal","setShowCashModal","Or","divToPrint","document","getElementById","popup","write","innerHTML","close","printCashReport","Value","ReceivingList","Receiving","Text","img","Card","imageSrc","date","BaseContent","ContentContainer","clubhouse_products","Image2","ImageMask","ImageMask2","FlexRowResponsive","SpanStyle","span","FlexColumn","Slogan","h1","button","IconStyled","FooterIcon","BodyText","align","Spacer","FooterStyle","SocialMedia","ServiceCard","InfoCard","LandingPage","href","rel","link","role","aria-label","kaldheim","zen_meme","double_masters","core_2021_collector","core_2021_draft_booster","BackgroundColor","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0596944a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/magic-ball.85c86bd8.png\";","// Maps all GCF and Scryfall API endpoints for code re-use\nconst { REACT_APP_ENVIRONMENT } = process.env;\n\n/**\n * Check the environment for dev - if dev, we reach out\n * to all endpoints appended by `_test` instead of production\n */\nconst env = REACT_APP_ENVIRONMENT === 'development' ? '_test' : '';\n\n/**\n * Asserts the development env and returns the proper path prefix for resources\n */\nconst getPrefix = () => {\n    return REACT_APP_ENVIRONMENT === 'development'\n        ? 'http://localhost:7331'\n        : 'https://clubhouse-collection.appspot.com';\n};\n\nexport const FINISH_SALE = `${getPrefix()}/auth/finishSale`;\nexport const GET_CARD_FROM_ALL_LOCATIONS = `${getPrefix()}/getCardFromAllLocations`;\nexport const ADD_CARD_TO_INVENTORY = `${getPrefix()}/auth/addCardToInventory`;\nexport const RECEIVE_CARDS = `${getPrefix()}/auth/receiveCards`;\nexport const GET_CARDS_BY_FILTER = `${getPrefix()}/auth/getCardsByFilter`;\nexport const GET_SET_NAMES = `${getPrefix()}/auth/getDistinctSetNames`;\nexport const SUSPEND_SALE = `${getPrefix()}/auth/suspendSale`;\nexport const LOGIN = `${getPrefix()}/jwt`;\nexport const GET_SALES_BY_TITLE = `${getPrefix()}/auth/getSaleByTitle`;\nexport const GET_ALL_SALES = `${getPrefix()}/auth/allSales`;\nexport const GET_CARDS_WITH_INFO_PUBLIC = `${getPrefix()}/getCardsWithInfo`;\nexport const GET_CARDS_WITH_INFO = `${getPrefix()}/auth/getCardsWithInfo`;\nexport const SCRYFALL_SEARCH = 'https://api.scryfall.com/cards/search';\nexport const GET_LIVE_PRICE = `https://us-central1-clubhouse-collection.cloudfunctions.net/getPriceFromTcg${env}`;\nexport const SCRYFALL_AUTOCOMPLETE =\n    'https://api.scryfall.com/cards/autocomplete';\n","/**\n * This function is a helper for Axios, it yields an object for Axios params\n */\nexport default function makeAuthHeader() {\n    const header = {\n        Authorization: `Bearer ${localStorage.getItem('clubhouse_JWT')}`,\n    };\n    return header;\n}\n","import axios from 'axios';\nimport { LOGIN } from '../utils/api_resources';\nimport makeAuthHeader from '../utils/makeAuthHeader';\n\ntype ClubhouseLocation = 'ch1' | 'ch2';\n\ninterface Response {\n    data: { token: string };\n}\n\nconst loginQuery = async (\n    username: string,\n    password: string,\n    currentLocation: ClubhouseLocation\n) => {\n    try {\n        const { data }: Response = await axios.post(\n            LOGIN,\n            {\n                username: username.toLowerCase(),\n                password,\n                currentLocation,\n            },\n            { headers: makeAuthHeader() }\n        );\n\n        return data;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport default loginQuery;\n","import React, { FC, useState } from 'react';\nimport loginQuery from './loginQuery';\n\ninterface Props {}\n\nexport type ClubhouseLocation = 'ch1' | 'ch2';\n\ninterface Context {\n    loggedIn: boolean;\n    handleLogin?: (\n        username: string,\n        password: string,\n        currentLocation: ClubhouseLocation\n    ) => Promise<any>;\n    handleLogout?: () => void;\n    currentLocation: ClubhouseLocation | null;\n    currentUser: string | null;\n}\n\nexport const AuthContext = React.createContext<Context>({\n    loggedIn: false,\n    currentLocation: null,\n    currentUser: null,\n});\n\nconst AuthProvider: FC<Props> = ({ children }) => {\n    const [loggedIn, setLoggedIn] = useState(\n        !!localStorage.getItem('clubhouse_JWT')\n    );\n\n    const [\n        currentLocation,\n        setCurrentLocation,\n    ] = useState<ClubhouseLocation | null>(\n        localStorage.getItem('currentLocation') as ClubhouseLocation\n    );\n\n    const [currentUser, setCurrentUser] = useState<string | null>(\n        localStorage.getItem('currentUser')\n    );\n\n    const handleLogin = async (\n        username: string,\n        password: string,\n        currentLocation: ClubhouseLocation\n    ) => {\n        try {\n            const data = await loginQuery(username, password, currentLocation);\n\n            if (data.token) {\n                localStorage.setItem('clubhouse_JWT', data.token);\n                setLoggedIn(!!localStorage.getItem('clubhouse_JWT'));\n\n                localStorage.setItem('currentLocation', currentLocation);\n                setCurrentLocation(currentLocation);\n\n                localStorage.setItem('currentUser', username);\n                setCurrentUser(username);\n            }\n\n            return data;\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('clubhouse_JWT');\n        setLoggedIn(!!localStorage.getItem('clubhouse_JWT'));\n\n        localStorage.removeItem('currentLocation');\n        setCurrentLocation(null);\n\n        localStorage.removeItem('currentUser');\n        setCurrentUser(null);\n    };\n\n    return (\n        <AuthContext.Provider\n            value={{\n                loggedIn,\n                currentLocation,\n                currentUser,\n                handleLogin,\n                handleLogout,\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthProvider;\n","import React, { FC, useContext } from 'react';\nimport ballLogo from './logos/magic-ball.png';\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { AuthContext, ClubhouseLocation } from '../context/AuthProvider';\n\nconst style = {\n    background: 'linear-gradient(#2185d0, #206ac6)',\n    boxShadow: '0 3px 5px 0 rgba(0,0,0,.25)',\n};\n\nconst getClubhouseLocationName = (location: ClubhouseLocation | null) => {\n    if (location === 'ch1') return 'Beaverton';\n    if (location === 'ch2') return 'Hillsboro';\n    return '';\n};\n\ninterface Props {}\n\nconst Header: FC<Props> = () => {\n    const { loggedIn, currentLocation, currentUser } = useContext(AuthContext);\n    const { pathname } = useLocation();\n\n    return (\n        <Menu inverted fixed=\"top\" style={style}>\n            <Menu.Item as={Link} replace to=\"/\">\n                <img src={ballLogo} style={{ marginRight: '7px' }} alt=\"logo\" />\n                <span>\n                    <h3>\n                        Clubhouse Collection{' '}\n                        {getClubhouseLocationName(currentLocation)}\n                    </h3>\n                </span>\n            </Menu.Item>\n            {currentUser && (\n                <Menu.Item>\n                    <span>\n                        Currently logged in as <b>{currentUser}</b>\n                    </span>\n                </Menu.Item>\n            )}\n            <Menu.Menu position=\"right\">\n                <Menu.Item\n                    active={pathname === '/public-inventory'}\n                    position=\"right\"\n                    as={Link}\n                    replace\n                    to=\"/public-inventory\"\n                >\n                    Search\n                </Menu.Item>\n                {loggedIn && (\n                    <Dropdown item icon=\"bars\">\n                        <Dropdown.Menu>\n                            <Dropdown.Item\n                                active={pathname === '/manage-inventory'}\n                                as={Link}\n                                replace\n                                to=\"/manage-inventory\"\n                            >\n                                <Icon name=\"plus\" color=\"blue\" />\n                                Manage Inventory\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                                active={pathname === '/new-sale'}\n                                as={Link}\n                                replace\n                                to=\"/new-sale\"\n                            >\n                                <Icon name=\"dollar sign\" color=\"blue\" />\n                                New Sale\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                                active={pathname === '/receiving'}\n                                as={Link}\n                                replace\n                                to=\"/receiving\"\n                            >\n                                <Icon\n                                    name=\"list alternate outline\"\n                                    color=\"blue\"\n                                />\n                                Receiving\n                            </Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item\n                                active={pathname === '/browse-inventory'}\n                                as={Link}\n                                replace\n                                to=\"/browse-inventory\"\n                            >\n                                <Icon name=\"box\" color=\"blue\" />\n                                Browse Inventory\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                                active={pathname === '/browse-sales'}\n                                as={Link}\n                                replace\n                                to=\"/browse-sales\"\n                            >\n                                <Icon name=\"eye\" color=\"blue\" />\n                                Browse Sales\n                            </Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item\n                                active={pathname === '/logout'}\n                                as={Link}\n                                replace\n                                to=\"/logout\"\n                            >\n                                <Icon name=\"log out\" color=\"blue\" />\n                                Log out\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                )}\n            </Menu.Menu>\n        </Menu>\n    );\n};\n\nexport default Header;\n","import axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { SCRYFALL_AUTOCOMPLETE } from '../utils/api_resources';\n\ninterface Response {\n    data: {\n        data: string[];\n        object: string;\n        total_values: 1;\n    };\n}\n\nconst autocompleteQuery = async (cardName: string) => {\n    try {\n        const { data }: Response = await axios.get(\n            `${SCRYFALL_AUTOCOMPLETE}?q=${cardName}`,\n            {\n                headers: makeAuthHeader(),\n            }\n        );\n\n        return data;\n    } catch (err) {\n        throw err;\n    }\n};\n\nexport default autocompleteQuery;\n","import React, { FC, SyntheticEvent, useState } from 'react';\nimport { Search, SearchProps, SearchResultData } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport autocompleteQuery from './autocompleteQuery';\n\ninterface Props {\n    handleSearchSelect: (result: string) => void;\n    onBlur?: (event: SyntheticEvent, data: SearchProps) => void;\n}\n\nconst SearchBar: FC<Props> = ({ handleSearchSelect, onBlur }) => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [results, setResults] = useState<{ title: string }[]>([]);\n\n    // `value` is the search input string\n    const handleSearchChange = (_: SyntheticEvent, { value }: SearchProps) => {\n        if (!value) return;\n\n        if (value.length < 1) {\n            setLoading(false);\n            setResults([]);\n            return;\n        }\n\n        if (value.length < 3) return; // Don't search if only 2 letters in input\n\n        setLoading(true);\n\n        setTimeout(async () => {\n            const data = await autocompleteQuery(value);\n\n            const formattedResults = data.data\n                .map((el) => ({ title: el }))\n                .slice(0, 7);\n\n            setResults(formattedResults);\n            setLoading(false);\n        }, 100);\n    };\n\n    const handleResultSelect = async (\n        _: SyntheticEvent,\n        { result }: SearchResultData\n    ) => {\n        // This line is a hacky way to get around the fact that if we just select(), then\n        // when the user manually clicks the first (or any) result in the resultlist, it does not select,\n        // presumably because there is some collision between selecting the resultList element and focusing the input\n        setTimeout(() => $('#searchBar').select(), 10);\n        try {\n            setLoading(true);\n            await handleSearchSelect(result.title);\n            setLoading(false);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <Search\n            onSearchChange={_.debounce(handleSearchChange, 500, {\n                leading: false,\n                trailing: true,\n            })}\n            onResultSelect={handleResultSelect}\n            loading={loading}\n            results={results}\n            placeholder=\"Enter a card title\"\n            selectFirstResult={true}\n            id=\"searchBar\"\n            onFocus={(e) => (e.target as HTMLInputElement).select()}\n            onBlur={onBlur} // Used to clear state in the Browse Inventory feature\n        />\n    );\n};\n\nexport default SearchBar;\n","import React, { FC } from 'react';\nimport { Label, Popup } from 'semantic-ui-react';\nimport parseQoh from '../utils/parseQoh';\nimport { QOH } from '../utils/ScryfallCard';\n\ntype FinishConditionLabels = Record<keyof QOH, string>;\n\nconst prettyLabel = (finishCondition: keyof QOH) => {\n    const finishConditionLabels: FinishConditionLabels = {\n        FOIL_NM: 'Foil (NM)',\n        FOIL_LP: 'Foil (LP)',\n        FOIL_MP: 'Foil (MP)',\n        FOIL_HP: 'Foil (HP)',\n        NONFOIL_NM: 'Nonfoil (NM)',\n        NONFOIL_LP: 'Nonfoil (LP)',\n        NONFOIL_MP: 'Nonfoil (MP)',\n        NONFOIL_HP: 'Nonfoil (HP)',\n    };\n\n    return finishConditionLabels[finishCondition];\n};\n\nexport const createInventoryLineItems = (\n    inventoryQty: Partial<QOH>,\n    matchStrings: (keyof QOH)[]\n): string[] => {\n    const matches = matchStrings\n        .map((finishCondition) => {\n            const quantity = inventoryQty[finishCondition];\n            if (quantity && quantity > 0)\n                return `${prettyLabel(finishCondition)}: ${quantity}`;\n        })\n        .filter((m): m is string => !!m);\n\n    if (matches.length === 0) return ['None in stock'];\n    return matches;\n};\n\ninterface Props {\n    inventoryQty: Partial<QOH>;\n}\n\ninterface LabelWithPopupProps {\n    quantity: number;\n    label: string;\n    popupLineItems: string[];\n}\n\nconst LabelWithPopup: FC<LabelWithPopupProps> = ({\n    quantity,\n    label,\n    popupLineItems,\n}) => (\n    <Popup\n        content={popupLineItems.map((msg) => (\n            <div>{msg}</div>\n        ))}\n        trigger={\n            <Label color={quantity > 0 ? 'blue' : undefined} image>\n                {label}\n                <Label.Detail>{quantity}</Label.Detail>\n            </Label>\n        }\n    />\n);\n\n// This component parses the `qoh` object from mongo into something more presentable\nconst QohLabels: FC<Props> = ({ inventoryQty }) => {\n    const [foilQuantity, nonfoilQuantity] = parseQoh(inventoryQty);\n\n    const foilLineItems = createInventoryLineItems(inventoryQty, [\n        'FOIL_NM',\n        'FOIL_LP',\n        'FOIL_MP',\n        'FOIL_HP',\n    ]);\n\n    const nonfoilLineItems = createInventoryLineItems(inventoryQty, [\n        'NONFOIL_NM',\n        'NONFOIL_LP',\n        'NONFOIL_MP',\n        'NONFOIL_HP',\n    ]);\n\n    return (\n        <>\n            <LabelWithPopup\n                label=\"Foil\"\n                quantity={foilQuantity}\n                popupLineItems={foilLineItems}\n            />\n            <LabelWithPopup\n                label=\"Nonfoil\"\n                quantity={nonfoilQuantity}\n                popupLineItems={nonfoilLineItems}\n            />\n        </>\n    );\n};\n\nexport default QohLabels;\n","import { QOH } from './ScryfallCard';\n\nexport default function parseQoh(inventoryQty: Partial<QOH>): [number, number] {\n    let foilQty = 0;\n    let nonfoilQty = 0;\n\n    foilQty =\n        (inventoryQty.FOIL_NM || 0) +\n        (inventoryQty.FOIL_LP || 0) +\n        (inventoryQty.FOIL_MP || 0) +\n        (inventoryQty.FOIL_HP || 0);\n\n    nonfoilQty =\n        (inventoryQty.NONFOIL_NM || 0) +\n        (inventoryQty.NONFOIL_LP || 0) +\n        (inventoryQty.NONFOIL_MP || 0) +\n        (inventoryQty.NONFOIL_HP || 0);\n\n    return [foilQty, nonfoilQty];\n}\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport toaster from 'toasted-notes';\nimport styled from 'styled-components';\n\nconst ToastContainer = styled(Message)`\n    position: relative;\n    right: 10px;\n    bottom: 10px;\n`;\n\nconst createToast = ({ color, header, message, duration = 2000 }) => {\n    return toaster.notify(\n        () => (\n            <ToastContainer color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </ToastContainer>\n        ),\n        {\n            position: 'bottom-right',\n            duration: duration\n        }\n    );\n}\n\nexport default createToast;","import React, { FC, useState } from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { ImageURIs, CardFace } from '../utils/ScryfallCard';\n\nconst style = {\n    boxShadow: '2px 2px 5px 0 rgba(0,0,0,.25)',\n    zIndex: '10',\n    transition: 'all .2s ease-in-out',\n};\n\ninterface Props {\n    image_uris: ImageURIs;\n    card_faces: CardFace[];\n    image: string;\n    hover: boolean;\n}\n\nconst CardImage: FC<Props> = ({\n    image_uris,\n    card_faces,\n    image,\n    hover = true,\n}) => {\n    const [hovered, setHovered] = useState<boolean>(false);\n\n    const mouseOver = () => setHovered(true);\n    const mouseOut = () => setHovered(false);\n\n    if (image) {\n        return (\n            <Image\n                src={image}\n                size=\"tiny\"\n                style={{\n                    ...style,\n                    transform: `${hovered ? 'scale(1.75)' : 'scale(1)'}`,\n                }}\n                onMouseOver={hover ? mouseOver : null}\n                onMouseOut={hover ? mouseOut : null}\n            />\n        );\n    }\n\n    // TODO: This is obsolete logic that should be refactored out once all components ingest the ScryfallCard class,\n    // which manages the correct image URL itself\n    try {\n        // If normal prop `image_uris.normal` doesn't exist, move to catch block for flip card faces\n        return (\n            <Image\n                src={image_uris.normal}\n                size=\"tiny\"\n                style={{\n                    ...style,\n                    transform: `${hovered ? 'scale(1.75)' : 'scale(1)'}`,\n                }}\n                onMouseOver={hover ? mouseOver : null}\n                onMouseOut={hover ? mouseOut : null}\n            />\n        );\n    } catch (e) {\n        return (\n            <Image\n                src={card_faces[0].image_uris.normal}\n                size=\"tiny\"\n                style={{\n                    ...style,\n                    transform: `${hovered ? 'scale(1.75)' : 'scale(1)'}`,\n                }}\n                onMouseOver={hover ? mouseOver : null}\n                onMouseOut={hover ? mouseOut : null}\n            />\n        );\n    }\n};\n\nexport default CardImage;\n","import React, { useState, useEffect, FC } from 'react';\nimport axios from 'axios';\nimport { GET_LIVE_PRICE } from '../utils/api_resources';\nimport { Label, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst LabelStyle = styled(Label)`\n    background-color: ${(props) =>\n        !!props.foil ? '#ffcfdf' : null} !important;\n    background-image: ${(props) =>\n        !!props.foil\n            ? 'linear-gradient(90deg, #ffcfdf 0%, #b0f3f1 74%)'\n            : null} !important;\n`;\n\ninterface Response {\n    data: {\n        marketPrices: { foil: number; normal: number };\n        medianPrices: { foil: number; normal: number };\n    };\n}\n\ninterface Props {\n    id: string;\n    finish: 'FOIL' | 'NONFOIL';\n    round: boolean;\n    showMid: boolean;\n}\n\n// Rounds the passed number to the nearest fifty cents\nconst roundNearestStep = (n: number) => Math.ceil(n * 2) / 2;\n\nconst displayPrice = (price: number | null) =>\n    !!price ? `$${price.toFixed(2)}` : 'N/A';\n\nconst MarketPrice: FC<Props> = ({ id, finish, round, showMid = true }) => {\n    const [market, setMarket] = useState<number | null>(null);\n    const [median, setMedian] = useState<number | null>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const isFoil = finish === 'FOIL';\n\n    useEffect(() => {\n        (async function fetchData() {\n            let _isMounted = true;\n            setLoading(true);\n\n            const { data }: Response = await axios.get(GET_LIVE_PRICE, {\n                params: { scryfallId: id },\n            });\n            const { marketPrices, medianPrices } = data;\n\n            if (_isMounted) {\n                if (isFoil) {\n                    setMarket(Number(marketPrices.foil));\n                    setMedian(Number(medianPrices.foil));\n                } else {\n                    setMarket(Number(marketPrices.normal));\n                    setMedian(Number(medianPrices.normal));\n                }\n\n                setLoading(false);\n            }\n\n            return () => (_isMounted = false);\n        })();\n    }, [id, finish]);\n\n    const loader = (\n        <span>\n            Loading <Icon loading name=\"spinner\" />\n        </span>\n    );\n\n    return (\n        <>\n            <LabelStyle foil={isFoil}>\n                {loading ? (\n                    loader\n                ) : (\n                    <span>\n                        Mkt.{' '}\n                        {round\n                            ? displayPrice(\n                                  market ? roundNearestStep(market) : null\n                              )\n                            : displayPrice(market)}\n                    </span>\n                )}\n            </LabelStyle>\n            {showMid && (\n                <LabelStyle foil={isFoil}>\n                    {loading ? (\n                        loader\n                    ) : (\n                        <span>Mid. {displayPrice(median)}</span>\n                    )}\n                </LabelStyle>\n            )}\n        </>\n    );\n};\n\nexport default MarketPrice;\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\n// Language codes from Scryfall. See https://scryfall.com/docs/api/languages for reference.\nconst LANG_CODES = {\n    en: 'English',\n    es: 'Spanish',\n    fr: 'French',\n    de: 'German',\n    it: 'Italian',\n    pt: 'Portuguese',\n    ja: 'Japanese',\n    ko: 'Korean',\n    ru: 'Russian',\n    zhs: 'Simplified Chinese',\n    zht: 'Traditional Chinese',\n    he: 'Hebrew',\n    la: 'Latin',\n    grc: 'Ancient Greek',\n    ar: 'Arabic',\n    sa: 'Sanskrit',\n    px: 'Phyrexian'\n}\n\nexport default function Language({ languageCode }) {\n    return <Label image color=\"grey\">{LANG_CODES[languageCode]}</Label>\n}","export const finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' },\n];\n\nexport const cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' },\n];\n","/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil` properties\n *\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nexport default function checkCardFinish(nonfoil: boolean, foil: boolean) {\n    if (!nonfoil && foil) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoil && !foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoil && foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n","export interface QOH {\n    FOIL_NM: number;\n    FOIL_LP: number;\n    FOIL_MP: number;\n    FOIL_HP: number;\n    NONFOIL_NM: number;\n    NONFOIL_LP: number;\n    NONFOIL_MP: number;\n    NONFOIL_HP: number;\n}\n\nexport interface ImageURIs {\n    normal: string;\n}\n\nexport interface CardFace {\n    colors: string[];\n    type_line: string;\n    color_identity: string[];\n    image_uris: ImageURIs;\n}\n\nexport interface ScryfallApiCard {\n    id: string;\n    name: string;\n    printed_name: string;\n    set: string;\n    set_name: string;\n    rarity: string;\n    image_uris: ImageURIs;\n    card_faces: CardFace[];\n    nonfoil: boolean;\n    foil: boolean;\n    colors: string[];\n    type_line: string;\n    frame_effects: string[];\n    lang: string;\n    border_color: string;\n    display_name: string;\n    cardImage: string;\n    color_identity: string[];\n    qoh?: Partial<QOH>;\n    quantity?: number;\n    qtyToSell?: number;\n    finishCondition?: string;\n    price?: number;\n}\n\n/**\n * This class wraps the Scryfall API request data and models it to something we can control.\n * Also acts as a safeguard for any future updates to Scryfall's API data model and makes\n * the code easier to maintain and debug.\n */\nexport class ScryfallCard {\n    public id: string;\n    public name: string;\n    public printed_name: string | null;\n    public set: string;\n    public set_name: string;\n    public rarity: string;\n    public image_uris: { normal: string };\n    public card_faces: CardFace[];\n    public nonfoil: boolean;\n    public foil: boolean;\n    public colors: string[];\n    public type_line: string;\n    public frame_effects: string[];\n    public lang: string;\n    public border_color: string;\n    public display_name: string;\n    public cardImage: string;\n    public color_identity: string[];\n\n    public constructor(card: ScryfallApiCard) {\n        this.id = card.id;\n        this.name = card.name;\n        this.printed_name = card.printed_name || null;\n        this.set = card.set;\n        this.set_name = card.set_name;\n        this.rarity = card.rarity;\n        this.image_uris = card.image_uris || null;\n        this.card_faces = card.card_faces || null;\n        this.nonfoil = card.nonfoil;\n        this.foil = card.foil;\n        this.colors = card.colors;\n        this.type_line = card.type_line;\n        this.frame_effects = card.frame_effects || [];\n        this.lang = card.lang || '';\n        this.border_color = card.border_color;\n        this.display_name = this._createDisplayName();\n        this.cardImage = this._getCardImage();\n        this.color_identity = card.color_identity || null;\n    }\n\n    // Computes the proper displayName for a card, depending on its properties\n    _createDisplayName() {\n        const { name, printed_name, frame_effects, border_color, lang } = this;\n\n        if (lang !== 'en') return `${name} (${lang.toUpperCase()})`;\n\n        if (name !== printed_name && printed_name) {\n            // Covers cards like Godzilla series\n            return `${name} (IP series)`;\n        } else if (\n            frame_effects.length === 0 &&\n            border_color === 'borderless'\n        ) {\n            // Covers cards like comic-art Vivien, Monsters' Advocate\n            return `${name} (Borderless)`;\n        } else if (frame_effects.includes('showcase')) {\n            // Covers showcase cards like comic-art Illuna, Apex of Wishes\n            return `${name} (Showcase)`;\n        } else if (frame_effects.includes('extendedart')) {\n            // Covers cards with extended left and roght border art\n            return `${name} (Extended art)`;\n        } else {\n            return name;\n        }\n    }\n\n    _getCardImage() {\n        let myImage: string;\n\n        try {\n            // If normal prop doesn't exist, move to catch block for flip card faces\n            myImage = this.image_uris.normal;\n        } catch (e) {\n            myImage = this.card_faces[0].image_uris.normal;\n        }\n\n        return myImage;\n    }\n}\n\n/**\n * Extends the Scryfall card object and adds properties we know exist in our database.\n * Models the data and makes writing cards to Mongo a more confident process.\n */\nexport class InventoryCard extends ScryfallCard {\n    private _qoh: Partial<QOH>;\n    public quantity: number | null;\n    public qtyToSell: number | null;\n    public finishCondition: string | null;\n    public price: number | null;\n\n    public constructor(card: ScryfallApiCard) {\n        super(card);\n        this._qoh = card.qoh ? card.qoh : {};\n        // `quantity` and `qtyToSell` are redundant transaction props, unify them down the line\n        this.quantity = card.quantity || null;\n        this.qtyToSell = card.qtyToSell || null;\n        this.finishCondition = card.finishCondition || null;\n        this.price = card.price && card.price >= 0 ? card.price : null;\n    }\n\n    get qohParsed() {\n        const foilQty =\n            (this._qoh.FOIL_NM || 0) +\n            (this._qoh.FOIL_LP || 0) +\n            (this._qoh.FOIL_MP || 0) +\n            (this._qoh.FOIL_HP || 0);\n\n        const nonfoilQty =\n            (this._qoh.NONFOIL_NM || 0) +\n            (this._qoh.NONFOIL_LP || 0) +\n            (this._qoh.NONFOIL_MP || 0) +\n            (this._qoh.NONFOIL_HP || 0);\n\n        return [foilQty, nonfoilQty];\n    }\n\n    get qoh() {\n        return this._qoh;\n    }\n\n    set qoh(quantities) {\n        this._qoh = quantities ? quantities : {};\n    }\n}\n","import axios from 'axios';\nimport React, { createContext, FC, useState } from 'react';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { InventoryCard, QOH, ScryfallApiCard } from '../utils/ScryfallCard';\nimport { GET_CARDS_WITH_INFO } from '../utils/api_resources';\n\ninterface Props {}\n\ninterface Context {\n    searchResults: InventoryCard[];\n    changeCardQuantity: (id: string, qoh: QOH) => void;\n    handleSearchSelect: (term: string) => void;\n}\n\nexport const InventoryContext = createContext<Context>({\n    searchResults: [],\n    changeCardQuantity: () => null,\n    handleSearchSelect: () => null,\n});\n\nconst InventoryProvider: FC<Props> = ({ children }) => {\n    const [searchResults, setSearchResults] = useState<InventoryCard[]>([]);\n\n    const handleSearchSelect = async (term: string) => {\n        try {\n            const { data }: { data: ScryfallApiCard[] } = await axios.get(\n                GET_CARDS_WITH_INFO,\n                {\n                    params: { title: term, matchInStock: false },\n                    headers: makeAuthHeader(),\n                }\n            );\n\n            const modeledData = data.map((c) => new InventoryCard(c));\n\n            setSearchResults(modeledData);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const changeCardQuantity = (id: string, qoh: QOH) => {\n        const copiedState = [...searchResults];\n        const targetIndex = copiedState.findIndex((e) => e.id === id);\n        copiedState[targetIndex].qoh = qoh;\n        setSearchResults(copiedState);\n    };\n\n    return (\n        <InventoryContext.Provider\n            value={{ searchResults, changeCardQuantity, handleSearchSelect }}\n        >\n            {children}\n        </InventoryContext.Provider>\n    );\n};\n\nexport default InventoryProvider;\n","import React, { useContext, useState } from 'react';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Item,\n} from 'semantic-ui-react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { Formik } from 'formik';\nimport QohLabels from '../common/QohLabels';\nimport createToast from '../common/createToast';\nimport CardImage from '../common/CardImage';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport MarketPrice from '../common/MarketPrice';\nimport { ADD_CARD_TO_INVENTORY } from '../utils/api_resources';\nimport Language from '../common/Language';\nimport { finishes, cardConditions } from '../utils/dropdownOptions';\nimport checkCardFinish from '../utils/checkCardFinish';\nimport { InventoryContext } from '../context/InventoryContext';\n\nexport default function ManageInventoryListItem({\n    qoh,\n    foil,\n    nonfoil,\n    name,\n    set_name,\n    set,\n    rarity,\n    id,\n    cardImage,\n    lang,\n}) {\n    const [selectedFinish, setSelectedFinish] = useState(\n        checkCardFinish(nonfoil, foil).selectedFinish\n    );\n\n    const { changeCardQuantity } = useContext(InventoryContext);\n\n    const validate = ({ quantity }) => {\n        const errors = {};\n\n        if (\n            !Number(quantity) ||\n            !Number.isInteger(+quantity) ||\n            +quantity > 100\n        )\n            errors.quantity = 'error';\n\n        return errors;\n    };\n\n    const onSubmit = async (\n        { quantity, selectedFinish, selectedCondition },\n        { resetForm }\n    ) => {\n        try {\n            const { data } = await axios.post(\n                ADD_CARD_TO_INVENTORY,\n                {\n                    quantity: parseInt(quantity, 10),\n                    finishCondition: `${selectedFinish}_${selectedCondition}`,\n                    cardInfo: { id, name, set_name, set },\n                },\n                { headers: makeAuthHeader() }\n            );\n\n            // Imperatively reset the form using Formik actions\n            resetForm();\n\n            changeCardQuantity(id, data.qoh);\n\n            createToast({\n                color: 'green',\n                header: `${quantity}x ${name} ${\n                    quantity > 0 ? 'added' : 'removed'\n                }!`,\n                duration: 2000,\n            });\n\n            // Highlight the input after successful card add\n            $('#searchBar').focus().select();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"tiny\">\n                        <CardImage image={cardImage} />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as=\"h3\">\n                            {name}{' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                            </Label>\n                            <QohLabels inventoryQty={qoh} />{' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                            <Language languageCode={lang} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Formik\n                                initialValues={{\n                                    selectedFinish: checkCardFinish(\n                                        nonfoil,\n                                        foil\n                                    ).selectedFinish,\n                                    selectedCondition: 'NM',\n                                    quantity: 0,\n                                }}\n                                validate={validate}\n                                onSubmit={onSubmit}\n                                initialErrors={{ quantity: 'error' }}\n                            >\n                                {({\n                                    values,\n                                    handleSubmit,\n                                    setFieldValue,\n                                    isSubmitting,\n                                    isValid,\n                                }) => (\n                                    <Form>\n                                        <Form.Group>\n                                            <Form.Field\n                                                control={Input}\n                                                type=\"number\"\n                                                label=\"Quantity\"\n                                                value={values.quantity}\n                                                onChange={(_, { value }) =>\n                                                    setFieldValue(\n                                                        'quantity',\n                                                        value\n                                                    )\n                                                }\n                                                onFocus={() => {\n                                                    if (\n                                                        +values.quantity === 0\n                                                    ) {\n                                                        setFieldValue(\n                                                            'quantity',\n                                                            ''\n                                                        );\n                                                    }\n                                                }}\n                                            />\n                                            <Form.Field\n                                                label=\"Finish\"\n                                                control={Select}\n                                                value={values.selectedFinish}\n                                                options={finishes}\n                                                disabled={\n                                                    checkCardFinish(\n                                                        nonfoil,\n                                                        foil\n                                                    ).finishDisabled\n                                                }\n                                                onChange={(_, { value }) => {\n                                                    setSelectedFinish(value);\n                                                    setFieldValue(\n                                                        'selectedFinish',\n                                                        value\n                                                    );\n                                                }}\n                                            />\n                                            <Form.Field\n                                                label=\"Condition\"\n                                                control={Select}\n                                                value={values.selectedCondition}\n                                                options={cardConditions}\n                                                onChange={(_, { value }) =>\n                                                    setFieldValue(\n                                                        'selectedCondition',\n                                                        value\n                                                    )\n                                                }\n                                            />\n                                            <Form.Button\n                                                label=\"Add to Inventory?\"\n                                                control={Button}\n                                                primary\n                                                disabled={\n                                                    !isValid || isSubmitting\n                                                }\n                                                onClick={handleSubmit}\n                                                loading={isSubmitting}\n                                            >\n                                                Submit\n                                            </Form.Button>\n                                        </Form.Group>\n                                    </Form>\n                                )}\n                            </Formik>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React from 'react';\nimport ManageInventoryListItem from './ManageInventoryListItem';\n\nexport default function ManageInventoryList(props) {\n    return props.cards.map((card) => {\n        return (\n            <ManageInventoryListItem key={card.id} {...card} qoh={card.qoh} />\n        );\n    });\n}\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Header, Label, Loader } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { GET_CARD_FROM_ALL_LOCATIONS } from '../utils/api_resources';\n\nconst StyledContainer = styled('div')({\n    display: 'inline',\n});\n\nconst FlexContainer = styled('div')({\n    display: 'flex',\n    alignItems: 'center',\n    '& > *': {\n        marginLeft: '10px',\n    },\n});\n\nconst QohLabel = ({ label, value }) => (\n    <Label {...(value > 0 && { color: 'blue' })} image>\n        {label}\n        <Label.Detail>{value}</Label.Detail>\n    </Label>\n);\n\n// TODO: refetch on result set change\nexport default function AllLocationInventory({ title, searchResults }) {\n    const [quantities, setQuantities] = useState({\n        ch1: { foilQty: 0, nonfoilQty: 0 },\n        ch2: { foilQty: 0, nonfoilQty: 0 },\n    });\n\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                setLoading(true);\n                const { data } = await axios.get(GET_CARD_FROM_ALL_LOCATIONS, {\n                    params: { title },\n                });\n\n                setQuantities(data);\n                setLoading(false);\n            } catch (err) {\n                console.log(err);\n            }\n        })();\n    }, [title, searchResults]);\n\n    return loading ? (\n        <FlexContainer>\n            <span>Loading totals for all locations</span>\n            <div>\n                <Loader active inline size=\"small\" />\n            </div>\n        </FlexContainer>\n    ) : (\n        <FlexContainer>\n            <div>\n                <Header sub>Beaverton totals:</Header>\n                <StyledContainer>\n                    <QohLabel label=\"Foil\" value={quantities.ch1.foilQty} />\n                    <QohLabel\n                        label=\"Nonfoil\"\n                        value={quantities.ch1.nonfoilQty}\n                    />\n                </StyledContainer>\n            </div>\n            <div>\n                <Header sub>Hillsboro totals:</Header>\n                <StyledContainer>\n                    <QohLabel label=\"Foil\" value={quantities.ch2.foilQty} />\n                    <QohLabel\n                        label=\"Nonfoil\"\n                        value={quantities.ch2.nonfoilQty}\n                    />\n                </StyledContainer>\n            </div>\n        </FlexContainer>\n    );\n}\n","import React, { useContext } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport ManageInventoryList from './ManageInventoryList';\nimport { Segment, Header, Icon, Divider } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport AllLocationInventory from './AllLocationInventory';\nimport { InventoryContext } from '../context/InventoryContext';\n\nconst HeaderContainer = styled('div')({\n    display: 'flex',\n    justifyContent: 'space-between',\n});\n\nexport default function ManageInventory() {\n    const { searchResults, handleSearchSelect } = useContext(InventoryContext);\n\n    return (\n        <>\n            <SearchBar handleSearchSelect={handleSearchSelect} />\n            <br />\n            <HeaderContainer>\n                <Header as=\"h2\">Manage Inventory</Header>\n                {searchResults.length > 0 && (\n                    <div>\n                        <AllLocationInventory\n                            searchResults={searchResults}\n                            title={searchResults[0].name}\n                        />\n                    </div>\n                )}\n            </HeaderContainer>\n            <Divider />\n            {!searchResults.length && (\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        <em>\n                            \"For the first time in his life, Grakk felt a little\n                            warm and fuzzy inside.\"\n                        </em>\n                    </Header>\n                </Segment>\n            )}\n            <ManageInventoryList cards={searchResults} />\n        </>\n    );\n}\n","import React, { useState, createContext } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { SUSPEND_SALE, FINISH_SALE } from '../utils/api_resources';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport sortSaleList from '../utils/sortSaleList';\nimport createToast from '../common/createToast';\nimport makeAuthHeader from '../utils/makeAuthHeader';\n\nexport const SaleContext = createContext();\n\nexport const SaleProvider = (props) => {\n    const [saleListCards, setSaleListCards] = useState([]);\n    const [suspendedSale, setSuspendedSale] = useState({\n        _id: '',\n        name: '',\n        notes: '',\n        list: [],\n    });\n\n    /**\n     * Adds product to the sale list\n     */\n    const addToSaleList = (card, finishCondition, qtyToSell, price) => {\n        const newCard = { ...card, finishCondition, qtyToSell, price };\n        const oldState = [...saleListCards];\n        const modeledCard = new InventoryCard(newCard);\n\n        // Need to make sure same ID's with differing conditions are separate line-items\n        const idx = oldState.findIndex((el) => {\n            return (\n                el.id === newCard.id && el.finishCondition === finishCondition\n            );\n        });\n\n        if (idx !== -1) {\n            oldState.splice(idx, 1, modeledCard);\n        } else {\n            oldState.push(modeledCard);\n        }\n\n        // Sorting the saleList cards here, on add\n        const sortedCards = sortSaleList(oldState);\n\n        setSaleListCards(sortedCards);\n    };\n\n    /**\n     * Removes product from the sale list\n     */\n    const removeFromSaleList = (id, finishCondition) => {\n        const newState = _.reject([...saleListCards], (el) => {\n            return el.id === id && el.finishCondition === finishCondition;\n        });\n\n        setSaleListCards(newState);\n    };\n\n    /**\n     * Restores a sale (assigns a saleList to state) from a suspended sale from the db\n     */\n    const restoreSale = async (id) => {\n        try {\n            const { data } = await axios.get(`${SUSPEND_SALE}/${id}`, {\n                headers: makeAuthHeader(),\n            });\n            const modeledData = data.list.map((c) => new InventoryCard(c));\n\n            setSaleListCards(modeledData);\n            setSuspendedSale(data);\n\n            createToast({\n                color: 'green',\n                header: `You are viewing ${data.name}'s sale`,\n            });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    };\n\n    /**\n     * Suspends a sale (persists it to mongo) via the SuspendedSale component and API\n     */\n    const suspendSale = async ({ customerName, notes }) => {\n        const { _id } = suspendedSale;\n\n        try {\n            if (!!_id)\n                await axios.delete(`${SUSPEND_SALE}/${_id}`, {\n                    headers: makeAuthHeader(),\n                }); // If we're suspended, delete the previous to replace\n\n            const { data } = await axios.post(\n                SUSPEND_SALE,\n                {\n                    customerName: customerName,\n                    notes: notes,\n                    saleList: saleListCards,\n                },\n                { headers: makeAuthHeader() }\n            );\n\n            resetSaleState();\n\n            createToast({\n                color: 'green',\n                header: `${data.ops[0].name}'s sale was suspended`,\n            });\n        } catch (e) {\n            console.log(e.response);\n            createToast({\n                color: 'red',\n                header: `Error`,\n                message: `${e.response.data}`,\n            });\n        }\n    };\n\n    const deleteSuspendedSale = async () => {\n        try {\n            const { _id, name } = suspendedSale;\n            await axios.delete(`${SUSPEND_SALE}/${_id}`, {\n                headers: makeAuthHeader(),\n            });\n\n            resetSaleState();\n\n            createToast({\n                color: 'green',\n                header: `${name}'s sale was deleted`,\n            });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    };\n\n    /**\n     * Extracts the saleList state and uses it to complete sale\n     */\n    const finalizeSale = async () => {\n        const { _id } = suspendedSale;\n\n        try {\n            // Must delete currently suspended sale to faithfully restore inventory prior to sale\n            if (!!_id)\n                await axios.delete(`${SUSPEND_SALE}/${_id}`, {\n                    headers: makeAuthHeader(),\n                });\n\n            const { data } = await axios.post(\n                FINISH_SALE,\n                { cards: saleListCards },\n                { headers: makeAuthHeader() }\n            );\n\n            const saleID = data.sale_data.Sale.saleID;\n\n            createToast({\n                color: 'green',\n                header: 'Sale created in Lightspeed!',\n                message: `The id number is #${saleID}`,\n            });\n\n            resetSaleState();\n        } catch (e) {\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Sale was not created`,\n            });\n\n            resetSaleState();\n            console.log(e.response);\n        }\n    };\n\n    const resetSaleState = () => {\n        setSaleListCards([]);\n        setSuspendedSale({\n            _id: '',\n            name: '',\n            notes: '',\n            list: [],\n        });\n    };\n\n    return (\n        <SaleContext.Provider\n            value={{\n                saleListCards,\n                suspendedSale,\n                addToSaleList,\n                removeFromSaleList,\n                restoreSale,\n                suspendSale,\n                deleteSuspendedSale,\n                finalizeSale,\n                resetSaleState,\n            }}\n        >\n            {props.children}\n        </SaleContext.Provider>\n    );\n};\n","import { InventoryCard } from './ScryfallCard';\n\n/**\n * Takes in an unordered group of cards and sorts them according to The Clubhouse's specs:\n * WUBRG, then multicolor, then colorless, then land, alphabetically within each color/category\n */\nexport default function sortSaleList(cards: InventoryCard[]) {\n    const ORDER = ['W', 'U', 'B', 'R', 'G', 'MULTI', 'COLORLESS', 'LAND'];\n\n    /**\n     * Main helper function that manages sort order\n     * @param {Object} card\n     */\n    function helpSort(card: InventoryCard) {\n        let arrayConst = null;\n\n        let colorsLength = null;\n        let cardFace = null;\n\n        try {\n            // If colors don't exist, it's a flip card or storybook frame\n            colorsLength = card.colors.length;\n            cardFace = card;\n        } catch (e) {\n            try {\n                // Storybook frames from Eldraine may throw error\n                colorsLength = card.card_faces[0].colors.length;\n                cardFace = card.card_faces[0];\n            } catch (e) {\n                colorsLength = card.colors.length;\n                cardFace = card;\n            }\n        }\n\n        // Apply logic to return correct constant enum\n        if (colorsLength === 0) {\n            arrayConst = 'COLORLESS';\n        } else if (colorsLength === 1) {\n            arrayConst = cardFace.colors[0];\n        } else if (colorsLength > 1) {\n            arrayConst = 'MULTI';\n        }\n\n        // Drill into colorless cards, if they are lands or not\n        if (arrayConst === 'COLORLESS') {\n            if (cardFace.color_identity) {\n                if (cardFace.color_identity.length === 1) {\n                    arrayConst = cardFace.color_identity[0];\n                }\n                if (cardFace.color_identity.length > 1) {\n                    arrayConst = 'MULTI';\n                }\n            }\n            if (cardFace.type_line.includes('Land')) {\n                arrayConst = 'LAND';\n            }\n        }\n\n        // Final check to guard against a null arrayConst\n        if (!arrayConst) {\n            arrayConst = 'LAND';\n        }\n\n        return arrayConst;\n    }\n\n    const alphaSort = cards.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n    });\n\n    const sorted = alphaSort.sort((a, b) => {\n        return ORDER.indexOf(helpSort(a)) - ORDER.indexOf(helpSort(b));\n    });\n\n    return sorted;\n}\n","import React, { useState, useContext } from 'react';\nimport {\n    Segment,\n    Label,\n    Form,\n    Input,\n    Dropdown,\n    Button,\n    Item,\n} from 'semantic-ui-react';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport CardImage from '../common/CardImage';\nimport MarketPrice from '../common/MarketPrice';\nimport QohLabels from '../common/QohLabels';\nimport Language from '../common/Language';\nimport { SaleContext } from '../context/SaleContext';\n\n/**\n * Creates a list of conditions for the dropdown menu from the `qoh`\n * Note: Is this not needed if we default select initially?\n * @param {Object} qoh\n * @param {String} id\n */\nfunction createConditionOptions(qoh, id) {\n    const removeZeroedQuantites = _.pickBy(qoh, (p) => p > 0); // Quantites of zero not included\n\n    return Object.entries(removeZeroedQuantites).map((d) => {\n        const [conditionFinish, qty] = d;\n\n        return {\n            text: `${conditionFinish.split('_').join(' | ')} | Qty: ${qty}`,\n            value: conditionFinish,\n            key: `${id}${conditionFinish}`,\n        };\n    });\n}\n\n/**\n * Creates initial selectedFinish value, used for the MarketPrice component\n * Returns FOIL or NONFOIL depending on what's in current inventory (qoh)\n * @param {Object} qoh\n */\nfunction createInitialSelectedFinish(qoh) {\n    const removeZeroedQuantites = _.pickBy(qoh, (p) => p > 0);\n    // Isolate only the FOIL or NONFOIL values with mapping\n    const keysMapped = _.keys(removeZeroedQuantites).map(\n        (k) => k.split('_')[0]\n    );\n    const uniqueValues = _.uniq(keysMapped);\n    return uniqueValues.indexOf('NONFOIL') > -1 ? 'NONFOIL' : 'FOIL';\n}\n\nexport default function BrowseCardItem(props) {\n    const [selectedFinishCondition, setSelectedFinishCondition] = useState('');\n    const [\n        selectedFinishConditionQty,\n        setSelectedFinishConditionQty,\n    ] = useState(0);\n    const [quantityToSell, setQuantityToSell] = useState(0);\n    const [price, setPrice] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(\n        createInitialSelectedFinish(props.qoh)\n    );\n    const [conditionOptions, setConditionOptions] = useState(\n        createConditionOptions(props.qoh, props.id)\n    );\n    const { addToSaleList } = useContext(SaleContext);\n\n    const handleQuantityChange = (e, { value }) => {\n        if (value === '') {\n            setQuantityToSell('');\n            return;\n        }\n\n        let numVal = parseInt(value);\n\n        if (numVal > selectedFinishConditionQty)\n            numVal = selectedFinishConditionQty;\n\n        if (isNaN(numVal) || numVal < 0) numVal = 0;\n\n        setQuantityToSell(numVal);\n    };\n\n    const handleSelectedFinishCondition = (e, { value }) => {\n        setSelectedFinish(value.split('_')[0]);\n        setSelectedFinishCondition(value);\n        setSelectedFinishConditionQty(props.qoh[value]);\n        setQuantityToSell(0);\n    };\n\n    const handlePriceChange = (e, { value }) => {\n        if (value === '') {\n            setPrice('');\n            return;\n        }\n\n        let numVal = Number(value);\n\n        if (isNaN(numVal) || numVal < 0) {\n            numVal = 0;\n        }\n\n        setPrice(numVal);\n    };\n\n    const handleAddToSale = () => {\n        const { qoh, id } = props;\n\n        addToSaleList(\n            { ...props },\n            selectedFinishCondition,\n            quantityToSell,\n            price\n        );\n\n        // Reset state\n        setSelectedFinishCondition('');\n        setSelectedFinishConditionQty(0);\n        setQuantityToSell(0);\n        setPrice(0);\n        setConditionOptions(createConditionOptions(qoh, id));\n        setSelectedFinish(createInitialSelectedFinish(qoh));\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"tiny\">\n                        <CardImage\n                            image_uris={props.image_uris}\n                            card_faces={props.card_faces}\n                        />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as=\"h3\">\n                            {props.name}{' '}\n                            <i\n                                className={`ss ss-fw ss-${props.set} ss-${props.rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {props.set_name} (\n                                {String(props.set).toUpperCase()})\n                            </Label>\n                            <QohLabels inventoryQty={props.qoh} />{' '}\n                            <MarketPrice\n                                id={props.id}\n                                finish={selectedFinish}\n                                round\n                            />\n                            <Language languageCode={props.lang} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group>\n                                    <Form.Field\n                                        className=\"finish-condition\"\n                                        control={Dropdown}\n                                        selection\n                                        placeholder=\"Select inventory\"\n                                        options={conditionOptions}\n                                        value={selectedFinishCondition}\n                                        label=\"Select finish/condition\"\n                                        onChange={handleSelectedFinishCondition}\n                                    />\n                                    <Form.Field\n                                        className=\"sale-qty\"\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity to sell\"\n                                        value={quantityToSell}\n                                        onChange={handleQuantityChange}\n                                        disabled={!selectedFinishConditionQty}\n                                        onFocus={(e) => e.target.select()}\n                                    />\n                                    <Form.Field\n                                        className=\"sale-price\"\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Price\"\n                                        value={price}\n                                        onChange={handlePriceChange}\n                                        disabled={!selectedFinishConditionQty}\n                                        onFocus={(e) => e.target.select()}\n                                        step={0.5}\n                                    />\n                                    <Form.Button\n                                        className=\"add-to-sale\"\n                                        label=\"Add to sale?\"\n                                        control={Button}\n                                        primary\n                                        onClick={handleAddToSale}\n                                        disabled={!quantityToSell}\n                                    >\n                                        Sell\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React from 'react';\nimport BrowseCardItem from './BrowseCardItem';\nimport { Segment, Header, Icon } from 'semantic-ui-react';\n\nexport default function BrowseCardList({ term, cards }) {\n    // Creates text to notify the user of zero-result searches\n    const searchNotification = () => {\n        if (term && !cards.length) {\n            // Check to make sure the user has searched and no results\n            return (\n                <p>\n                    Zero results for <em>{term}</em>\n                </p>\n            );\n        }\n        return (\n            <p>\n                <em>\"Don't give the people what they want\"</em>\n            </p>\n        );\n    };\n\n    if (cards.length === 0) {\n        return (\n            <Segment placeholder>\n                <Header icon>\n                    <Icon name=\"search\" />\n                    <span>{searchNotification()}</span>\n                </Header>\n            </Segment>\n        );\n    }\n\n    return cards.map((card) => {\n        return <BrowseCardItem key={card.id} {...card} qoh={card.qoh} />;\n    });\n}\n","import React, { FC } from 'react';\n\ninterface Props {\n    num: number | string;\n}\n\nconst Price: FC<Props> = ({ num }) => {\n    let price: number = typeof num === 'string' ? Number(num) : num;\n\n    if (isNaN(price)) return <span>$0.00</span>;\n    return <span>${price.toFixed(2)}</span>;\n};\n\nexport default Price;\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nexport default function TooltipImage({ image_uri, posX = 0 }) {\n    return (\n        <div style={{ // We use the style prop over styled-components because it renders much faster!\n            position: 'absolute',\n            left: `${posX}px`,\n            width: '150px', // Width of the image when size=\"small\"\n            height: '209px', // Height of the image when size=\"small\"\n            borderRadius: '7px 7px 7px 7px',\n            boxShadow: '2px 2px 5px 0 rgba(0, 0, 0, 0.25)',\n            background: 'repeating-linear-gradient(45deg, #bfbfbf, #bfbfbf 10px, #b0b0b0 10px, #b0b0b0 20px)',\n            zIndex: '5000'\n        }}>\n            <Image\n                style={{ borderRadius: '7px 7px 7px 7px' }}\n                size=\"small\"\n                src={image_uri}\n            />\n        </div>\n    )\n}","import React, { useState, useContext } from 'react';\nimport { Button, Label, Table } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { SaleContext } from '../context/SaleContext';\nimport Price from '../common/Price';\nimport TooltipImage from '../common/TooltipImage';\n\nconst BoldHelp = styled.b`\n    cursor: help;\n`;\n\nexport default function SaleLineItem({ display_name, set, finishCondition, qtyToSell, price, rarity, id, cardImage }) {\n    const [hovered, setHovered] = useState(false);\n    const [mouseInside, setMouseInside] = useState(false);\n    const [mousePos, setMousePos] = useState({});\n    const { removeFromSaleList } = useContext(SaleContext);\n\n    const mouseEnter = e => {\n        const rect = e.target.getBoundingClientRect();\n        const X = Math.round(e.clientX - rect.x) + 30;\n        setMouseInside(true);\n        setMousePos({ X });\n    }\n\n    const mouseMove = e => {\n        const rect = e.target.getBoundingClientRect();\n        const X = Math.round(e.clientX - rect.x) + 30;\n        setMousePos({ X });\n    }\n\n    const mouseLeave = e => setMouseInside(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell><h4 className=\"line-item-title\">\n                <BoldHelp\n                    onMouseEnter={mouseEnter}\n                    onMouseMove={mouseMove}\n                    onMouseLeave={mouseLeave}\n                >\n                    {display_name}\n                    {mouseInside && <TooltipImage image_uri={cardImage} posX={mousePos.X} />}\n                </BoldHelp>\n            </h4></Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                <div className=\"line-item-price\">\n                    {qtyToSell}x @ <Price num={price} /> | {finishCondition}\n                </div>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => removeFromSaleList(id, finishCondition)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n","import React from 'react';\nimport Price from '../common/Price';\n\nconst SalePriceTotal = ({ saleList }) => {\n    const total = saleList.length\n        ? saleList.reduce(\n            (acc, val) => acc + parseInt(val.qtyToSell) * Number(val.price),\n            0\n        )\n        : 0;\n\n    return <div id=\"sale-price-total\"><Price num={total} /></div>\n};\n\nexport default SalePriceTotal;\n","import React, { useState, useContext } from 'react';\nimport { Modal, Button, Header, Icon } from 'semantic-ui-react';\nimport { SaleContext } from '../context/SaleContext';\n\nexport default function FinishSale() {\n    const [submit, setSubmit] = useState({ loading: false, disabled: false });\n    const [showModal, setShowModal] = useState(false);\n    const { finalizeSale } = useContext(SaleContext);\n\n    const handleFinalizeSale = async () => {\n        setSubmit({ loading: true, disabled: true });\n        await finalizeSale();\n    }\n\n    const modalTrigger = <Button floated=\"right\" primary\n        onClick={() => setShowModal(true)}>\n        Finalize sale\n        </Button>\n\n    return <Modal\n        basic\n        open={showModal}\n        trigger={modalTrigger}>\n        <Modal.Content>\n            <Header inverted as=\"h2\">\n                Finalize this sale?\n             </Header>\n            <p>\n                Click 'Yes' to create a sale\n                in Lightspeed. Ensure that\n                you have all cards pulled and double-checked\n                the customer list. Undoing this action will require manual data entry!\n             </p>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button\n                basic\n                color=\"red\"\n                inverted\n                onClick={() => setShowModal(false)}>\n                <Icon name=\"remove\" /> No\n             </Button>\n            <Button\n                color=\"green\"\n                inverted\n                onClick={handleFinalizeSale}\n                loading={submit.loading}\n                disabled={submit.disabled}>\n                <Icon name=\"checkmark\" /> Yes\n            </Button>\n        </Modal.Actions>\n    </Modal>\n}","import React from 'react';\nimport SaleLineItem from './SaleLineItem';\nimport { Table, Segment, Header, Icon } from 'semantic-ui-react';\nimport SalePriceTotal from './SalePriceTotal';\nimport FinishSale from './FinishSale';\n\nexport default function CustomerSaleList({ saleList }) {\n    if (saleList.length === 0) {\n        return (\n            <Segment placeholder>\n                <Header icon>\n                    <Icon name=\"plus\" />\n                    <em>\"Give them what they need\"</em>\n                </Header>\n            </Segment>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Table>\n                <Table.Body>\n                    {saleList.map((card) => {\n                        return (\n                            <SaleLineItem\n                                {...card}\n                                key={`${card.id}${card.finishCondition}${card.qtyToSell}`}\n                            />\n                        );\n                    })}\n                </Table.Body>\n            </Table>\n\n            <Segment clearing>\n                <Header floated=\"left\">\n                    <Header sub>Subtotal</Header>\n                    <SalePriceTotal saleList={saleList} />\n                </Header>\n                <FinishSale />\n            </Segment>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport Price from '../common/Price';\nimport './PrintList.css';\nimport SalePriceTotal from './SalePriceTotal';\n\nconst Row = ({\n    id,\n    display_name,\n    qtyToSell,\n    finishCondition,\n    set_name,\n    price,\n}) => {\n    return (\n        <li key={id}>\n            <b>\n                {display_name} | x{qtyToSell} | {finishCondition} | {set_name} |{' '}\n                <Price num={price} />\n            </b>\n        </li>\n    );\n};\n\nexport default class PrintList extends React.Component {\n    state = { printClicked: false };\n\n    print = () => {\n        this.setState({ printClicked: true }, () => {\n            window.print();\n            this.setState({ printClicked: false });\n        });\n    };\n\n    render() {\n        const { saleListCards } = this.props;\n        const { printClicked } = this.state;\n\n        if (saleListCards.length > 0) {\n            // Ensure print is hidden if no cards in list\n            return (\n                <>\n                    <div>\n                        <Button size=\"tiny\" onClick={this.print} icon>\n                            <Icon name=\"print\" />\n                        </Button>\n                    </div>\n\n                    <div\n                        id=\"printme\"\n                        style={{\n                            display: printClicked ? 'inline-block' : 'none',\n                        }}\n                    >\n                        <ul>{saleListCards.map((c) => Row(c))}</ul>\n                        <span>\n                            <b>\n                                Subtotal:{' '}\n                                <SalePriceTotal saleList={saleListCards} />\n                            </b>\n                        </span>\n                    </div>\n                </>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SUSPEND_SALE } from '../utils/api_resources';\nimport { Modal, Button, Grid, Form, Message } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport makeAuthHeader from '../utils/makeAuthHeader';\n\nconst Divider = styled.div`\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n    height: 100%;\n`;\n\nconst ClearMargin = styled.div`\n    margin-top: 0px;\n    margin-bottom: 0px;\n`;\n\nconst CharLimit = styled.p`\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.2);\n    float: right;\n`;\n\nexport default function SuspendedSale({\n    restoreSale,\n    deleteSuspendedSale,\n    saleListLength,\n    suspendSale,\n    id,\n}) {\n    const [sales, setSales] = useState([]);\n    const [saleID, setSaleID] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [customerName, setCustomerName] = useState('');\n    const [notes, setNotes] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const [loadingBtn, setLoadingBtn] = useState({\n        suspendBtn: false,\n        restoreBtn: false,\n        deleteBtn: false,\n    });\n\n    const getSales = async () => {\n        const { data } = await axios.get(SUSPEND_SALE, {\n            headers: makeAuthHeader(),\n        });\n        setSales(data);\n    };\n\n    const clearFields = () => {\n        setCustomerName('');\n        setNotes('');\n        setSaleID('');\n    };\n\n    // Get the previously suspended sales on mount and parent state (_id) change\n    useEffect(() => {\n        getSales();\n    }, [id]); // If the parent-level suspended-sale _id changes, we fetch again\n\n    const modalTrigger = (\n        <div>\n            <Button\n                size=\"tiny\"\n                id=\"suspend-sale-btn\"\n                onClick={() => setModalOpen(true)}\n                icon=\"ellipsis horizontal\"\n            />\n        </div>\n    );\n\n    const submitSuspendSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ suspendBtn: true });\n        await suspendSale({ customerName, notes });\n        setModalOpen(false); // Close the modal to avoid \"flicker\" when state re-renders\n        await getSales(); // Parent _id does not change, re-fetch sales\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ suspendBtn: false });\n    };\n\n    const submitRestoreSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ restoreBtn: true });\n        await restoreSale(saleID);\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ restoreBtn: false });\n    };\n\n    const submitDeleteSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ deleteBtn: true });\n        await deleteSuspendedSale();\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ deleteBtn: false });\n    };\n\n    return (\n        <React.Fragment>\n            <Modal trigger={modalTrigger} open={modalOpen}>\n                <Modal.Header>Sales menu</Modal.Header>\n                <Modal.Content>\n                    <Grid columns={2} stackable relaxed=\"very\">\n                        {saleListLength > 0 && (\n                            <React.Fragment>\n                                <Grid.Column width=\"7\">\n                                    <h3>Suspend Sale</h3>\n                                    <Form>\n                                        <ClearMargin>\n                                            <Form.Input\n                                                id=\"suspend-sale-name\"\n                                                label=\"Customer Name\"\n                                                placeholder=\"Jace, the Mind Sculptor\"\n                                                value={customerName}\n                                                onChange={(e, { value }) =>\n                                                    setCustomerName(\n                                                        value.substring(0, 50)\n                                                    )\n                                                }\n                                            />\n                                        </ClearMargin>\n                                        <ClearMargin>\n                                            <CharLimit>\n                                                {customerName.length}/50\n                                            </CharLimit>\n                                        </ClearMargin>\n                                        <ClearMargin>\n                                            <Form.TextArea\n                                                label=\"Notes\"\n                                                placeholder=\"Sometimes, I forget things...\"\n                                                value={notes}\n                                                onChange={(e, { value }) =>\n                                                    setNotes(\n                                                        value.substring(0, 150)\n                                                    )\n                                                }\n                                            />\n                                        </ClearMargin>\n                                        <ClearMargin>\n                                            <CharLimit>\n                                                {notes.length}/150\n                                            </CharLimit>\n                                        </ClearMargin>\n                                        <Form.Button\n                                            id=\"suspend-sale-submit\"\n                                            primary\n                                            disabled={disabled || !customerName}\n                                            loading={loadingBtn.suspendBtn}\n                                            onClick={submitSuspendSale}\n                                        >\n                                            Suspend Sale\n                                        </Form.Button>\n                                    </Form>\n                                </Grid.Column>\n                                <Grid.Column width=\"1\">\n                                    <Divider />\n                                </Grid.Column>\n                            </React.Fragment>\n                        )}\n                        <Grid.Column width=\"7\">\n                            <h3>Restore Sale</h3>\n                            {sales.length > 0 && (\n                                <React.Fragment>\n                                    <Form>\n                                        <Form.Select\n                                            fluid\n                                            label=\"Previously suspended sales\"\n                                            options={sales.map((s) => {\n                                                return {\n                                                    key: s._id,\n                                                    text: s.name,\n                                                    value: s._id,\n                                                };\n                                            })}\n                                            placeholder=\"Select a sale\"\n                                            onChange={(e, { value }) =>\n                                                setSaleID(value)\n                                            }\n                                        />\n                                        <Form.Button\n                                            primary\n                                            disabled={disabled || !saleID}\n                                            loading={loadingBtn.restoreBtn}\n                                            onClick={submitRestoreSale}\n                                        >\n                                            Restore Sale\n                                        </Form.Button>\n                                    </Form>\n                                </React.Fragment>\n                            )}\n                            {sales.length === 0 && (\n                                <Message info>\n                                    <Message.Header>No sales</Message.Header>\n                                    Suspend a sale first\n                                </Message>\n                            )}\n                        </Grid.Column>\n                    </Grid>\n                </Modal.Content>\n                <Modal.Actions>\n                    {!!id && (\n                        <Button\n                            color=\"red\"\n                            disabled={disabled}\n                            loading={loadingBtn.deleteBtn}\n                            onClick={submitDeleteSale}\n                        >\n                            Delete current Sale\n                        </Button>\n                    )}\n                    <Button\n                        primary\n                        disabled={disabled}\n                        onClick={() => setModalOpen(false)}\n                    >\n                        Cancel\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\nexport default function TotalCardsLabel({ listLength }) {\n    const displayStr = listLength > 1 ? 'cards' : 'card';\n\n    if (listLength > 0) {\n        return <Label color='grey'>{listLength} {displayStr}</Label>\n    }\n\n    return null;\n}\n\n/**\n * Cards in the Sale List need to be looped and counted\n * Receiving's list is one per line, so it's more straightforward there\n *\n * @param {Array} saleListCards - The Sale List cards\n */\nexport function findSaleCardsQty(saleListCards) {\n    return saleListCards.reduce((acc, curr) => acc + curr.qtyToSell, 0);\n}","import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { Grid, Header, Divider } from 'semantic-ui-react';\nimport { GET_CARDS_WITH_INFO } from '../utils/api_resources';\nimport SearchBar from '../common/SearchBar';\nimport BrowseCardList from './BrowseCardList';\nimport CustomerSaleList from './CustomerSaleList';\nimport PrintList from './PrintList';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport SuspendedSale from './SuspendedSale';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport { SaleContext } from '../context/SaleContext';\nimport TotalCardsLabel, { findSaleCardsQty } from '../common/TotalCardsLabel';\nimport AllLocationInventory from '../ManageInventory/AllLocationInventory';\nimport styled from 'styled-components';\n\nconst HeaderContainer = styled('div')({\n    display: 'flex',\n    justifyContent: 'space-between',\n});\n\nconst ButtonContainer = styled('div')({\n    display: 'flex',\n    '& > *': {\n        marginLeft: '10px',\n    },\n});\n\nexport default function Sale() {\n    const {\n        saleListCards,\n        suspendedSale,\n        restoreSale,\n        deleteSuspendedSale,\n        suspendSale,\n    } = useContext(SaleContext);\n\n    const [searchResults, setSearchResults] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const handleResultSelect = async (term) => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: true },\n                headers: makeAuthHeader(),\n            });\n\n            const modeledData = data.map((c) => new InventoryCard(c));\n\n            setSearchResults(modeledData);\n            setSearchTerm(term);\n\n            if (data.length === 0) {\n                $('#searchBar').focus().select();\n            }\n        } catch (e) {\n            console.log(e.response);\n        }\n    };\n\n    return (\n        <>\n            <SearchBar handleSearchSelect={handleResultSelect} />\n            <br />\n            <Grid stackable={true}>\n                <Grid.Row>\n                    <Grid.Column width=\"11\">\n                        <HeaderContainer>\n                            <Header as=\"h2\">Inventory</Header>\n                            {searchResults.length > 0 && (\n                                <AllLocationInventory\n                                    searchResults={searchResults}\n                                    title={searchResults[0].name}\n                                />\n                            )}\n                        </HeaderContainer>\n\n                        <Divider />\n\n                        <BrowseCardList\n                            term={searchTerm}\n                            cards={searchResults}\n                        />\n                    </Grid.Column>\n                    <Grid.Column width=\"5\">\n                        <HeaderContainer>\n                            <Header as=\"h2\" id=\"sale-header\">\n                                {suspendedSale.name === ''\n                                    ? 'Sale Items'\n                                    : `${suspendedSale.name}'s Items`}\n                                <TotalCardsLabel\n                                    listLength={findSaleCardsQty(saleListCards)}\n                                />\n                            </Header>\n                            <ButtonContainer>\n                                <SuspendedSale\n                                    restoreSale={restoreSale}\n                                    suspendSale={suspendSale}\n                                    saleListLength={saleListCards.length}\n                                    deleteSuspendedSale={deleteSuspendedSale}\n                                    id={suspendedSale._id}\n                                />\n                                <PrintList saleListCards={saleListCards} />\n                            </ButtonContainer>\n                        </HeaderContainer>\n\n                        <Divider />\n\n                        <CustomerSaleList saleList={saleListCards} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </>\n    );\n}\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst SalesListItem = ({ saleData, cardList }) => {\n    const quantitySold = cardList.reduce(\n        (pre, curr) => pre + curr.qtyToSell,\n        0\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>{saleData.saleID}</Table.Cell>\n            <Table.Cell>\n                {moment(saleData.createTime).format('MM/DD/YYYY - h:mm A')}\n            </Table.Cell>\n            <Table.Cell>{quantitySold}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default SalesListItem;\n","import React from 'react';\nimport SalesListItem from './SalesListItem';\nimport { Table } from 'semantic-ui-react';\n\nconst SalesList = ({ list }) => {\n    return (\n        <Table celled unstackable compact>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Sale ID</Table.HeaderCell>\n                    <Table.HeaderCell>Date of Sale</Table.HeaderCell>\n                    <Table.HeaderCell>Quantity Sold</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {list.map(({ sale_data, card_list, _id }) => (\n                    <SalesListItem\n                        saleData={sale_data}\n                        cardList={card_list}\n                        key={_id}\n                    />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default SalesList;\n","import React, { Component } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport SalesList from './SalesList';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { GET_SALES_BY_TITLE } from '../utils/api_resources';\nimport { Header, Divider } from 'semantic-ui-react';\n\nclass BrowseSales extends Component {\n    state = { salesList: [], cardName: '' };\n\n    handleSearchSelect = async cardName => {\n        const { data } = await axios.get(GET_SALES_BY_TITLE, {\n            params: { cardName: cardName },\n            headers: makeAuthHeader()\n        });\n\n        this.setState({ salesList: data, cardName: cardName });\n    };\n\n    render() {\n        const { salesList, cardName } = this.state;\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n\n                <Header as=\"h2\">Browse Sales</Header>\n                <Divider />\n\n                <span>\n                    <em>\n                        {cardName !== '' && (\n                            <h4>\n                                {salesList.length} results for {cardName}\n                            </h4>\n                        )}\n                    </em>\n                </span>\n                <SalesList list={salesList} />\n            </div>\n        );\n    }\n}\n\nexport default BrowseSales;\n","import React from 'react';\nimport { Image, Label } from 'semantic-ui-react';\nimport MarketPrice from '../common/MarketPrice';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: inline-block;\n    margin: 10px 10px 10px 10px;\n`;\n\nconst InventoryWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5px;\n    background-color: rgba(0, 0, 0, 0.9);\n    border-radius: 10px 10px 10px 10px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n`;\n\nconst InventoryRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 5px;\n`;\n\nconst ImageWrapper = styled.div`\n    width: 300px;\n    height: 418.3px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n    background: repeating-linear-gradient(\n        45deg,\n        #bfbfbf,\n        #bfbfbf 10px,\n        #b0b0b0 10px,\n        #b0b0b0 20px\n    );\n    border-radius: 15px;\n`;\n\nexport default function PublicCardItem({ card }) {\n    const { id, cardImage } = card;\n    const [foilQty, nonfoilQty] = card.qohParsed;\n\n    const displayFoil = (\n        <InventoryRow>\n            <Label color=\"blue\" image>\n                Foil<Label.Detail>{foilQty}</Label.Detail>\n            </Label>\n            <MarketPrice id={id} finish=\"FOIL\" round showMid={false} />\n        </InventoryRow>\n    );\n\n    const displayNonfoil = (\n        <InventoryRow>\n            <Label color=\"blue\" image>\n                Nonfoil<Label.Detail>{nonfoilQty}</Label.Detail>\n            </Label>\n            <MarketPrice id={id} round showMid={false} />\n        </InventoryRow>\n    );\n\n    return (\n        <React.Fragment>\n            <Wrapper>\n                <ImageWrapper>\n                    <Image\n                        src={cardImage}\n                        size=\"medium\"\n                        style={{ borderRadius: '15px' }}\n                    />\n                </ImageWrapper>\n                <InventoryWrapper>\n                    {foilQty > 0 ? displayFoil : null}\n                    {nonfoilQty > 0 ? displayNonfoil : null}\n                </InventoryWrapper>\n            </Wrapper>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport PublicCardItem from './PublicCardItem';\nimport { Grid } from 'semantic-ui-react';\n\nconst gridStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'space-evenly',\n    height: '100%'\n};\n\nexport default function PublicCardList({ cards }) {\n    return <Grid style={gridStyle} >\n        {cards.map(c =>\n            <PublicCardItem\n                key={c.id}\n                card={c}\n            />\n        )}\n    </ Grid>\n}\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Icon,\n    Divider,\n    Form,\n    Select,\n    Button,\n} from 'semantic-ui-react';\nimport SearchBar from '../common/SearchBar';\nimport PublicCardList from './PublicCardList';\nimport { GET_CARDS_WITH_INFO_PUBLIC } from '../utils/api_resources';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport { Formik } from 'formik';\n\nconst initialState = {\n    searchResults: null,\n    searchTerm: '',\n    selectedLocation: 'ch1',\n};\n\nconst locationOptions = [\n    { key: 'beaverton', text: 'CH Beaverton', value: 'ch1' },\n    { key: 'hillsboro', text: 'CH Hillsboro', value: 'ch2' },\n];\n\nfunction PublicInventory() {\n    const [state, setState] = useState(initialState);\n\n    const fetchCards = async ({ title, location }) => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO_PUBLIC, {\n                params: {\n                    title,\n                    location,\n                    matchInStock: true,\n                },\n            });\n\n            const modeledData = data.map((c) => new InventoryCard(c));\n\n            setState({\n                ...state,\n                searchResults: modeledData,\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <>\n            <Formik\n                onSubmit={({ searchTerm, selectedLocation }) =>\n                    fetchCards({\n                        title: searchTerm,\n                        location: selectedLocation,\n                    })\n                }\n                initialValues={{\n                    searchTerm: '',\n                    selectedLocation: 'ch1',\n                    isSubmitted: false,\n                }}\n            >\n                {({ values, handleSubmit, setFieldValue, isSubmitting }) => (\n                    <Form>\n                        <Form.Group>\n                            <Form.Field>\n                                <label>Card search</label>\n                                <SearchBar\n                                    handleSearchSelect={(value) =>\n                                        setFieldValue('searchTerm', value)\n                                    }\n                                />\n                            </Form.Field>\n                            <Form.Field\n                                label=\"Store location\"\n                                control={Select}\n                                value={values.selectedLocation}\n                                options={locationOptions}\n                                onChange={(_, { value }) =>\n                                    setFieldValue('selectedLocation', value)\n                                }\n                            />\n                            <Form.Field>\n                                <div style={{ paddingTop: 25 }}>\n                                    <Button\n                                        primary\n                                        disabled={!values.searchTerm}\n                                        loading={isSubmitting}\n                                        onClick={handleSubmit}\n                                    >\n                                        Search\n                                    </Button>\n                                </div>\n                            </Form.Field>\n                        </Form.Group>\n                    </Form>\n                )}\n            </Formik>\n            <Grid stackable={true}>\n                <Grid.Column>\n                    <Header as=\"h2\">\n                        Inventory Search\n                        <Header.Subheader>\n                            <em>\n                                Card prices subject to change. Consult a\n                                Clubhouse employee for final estimates\n                            </em>\n                        </Header.Subheader>\n                    </Header>\n\n                    <Divider />\n\n                    {state.searchResults === null && (\n                        <Segment placeholder>\n                            <Header icon>\n                                <Icon name=\"search\" />\n                                <span>Search for a card</span>\n                            </Header>\n                        </Segment>\n                    )}\n\n                    {state.searchResults !== null &&\n                        (state.searchResults.length === 0 ? (\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"search\" />\n                                    <span>No cards found in stock</span>\n                                </Header>\n                            </Segment>\n                        ) : (\n                            state.searchResults.length > 0 && (\n                                <PublicCardList cards={state.searchResults} />\n                            )\n                        ))}\n                </Grid.Column>\n            </Grid>\n        </>\n    );\n}\n\nexport default PublicInventory;\n","import React from 'react';\nimport SearchBar from '../common/SearchBar';\nimport { GET_SET_NAMES } from '../utils/api_resources';\nimport axios from 'axios';\nimport { Form, Input, Select, Dropdown, Segment } from 'semantic-ui-react';\nimport makeAuthHeader from '../utils/makeAuthHeader';\n\nconst formatDropdownOptions = [\n    { key: 'qw', value: '', text: 'None' },\n    { key: 'we', value: 'standard', text: 'Standard' },\n    { key: 'er', value: 'future', text: 'Future' },\n    { key: 'rt', value: 'historic', text: 'Historic' },\n    { key: 'ty', value: 'pioneer', text: 'Pioneer' },\n    { key: 'yu', value: 'modern', text: 'Modern' },\n    { key: 'ui', value: 'legacy', text: 'Legacy' },\n    { key: 'io', value: 'pauper', text: 'Pauper' },\n    { key: 'op', value: 'vintage', text: 'Vintage' },\n    { key: 'as', value: 'penny', text: 'Penny' },\n    { key: 'sd', value: 'commander', text: 'Commander' },\n    { key: 'df', value: 'brawl', text: 'Brawl' },\n    { key: 'fg', value: 'duel', text: 'Duel' },\n    { key: 'gh', value: 'oldschool', text: 'Oldschool' },\n];\n\nconst priceFilterDropdownOptions = [\n    { key: 'gte', value: 'gte', text: '>=' },\n    { key: 'lte', value: 'lte', text: '<=' },\n    { key: 'gtx', value: 'gt', text: '>' },\n    { key: 'ltx', value: 'lt', text: '<' },\n];\n\nconst finishDropdownOptions = [\n    { key: 'nonfoil_foil', value: '', text: 'None' },\n    { key: 'nonfoil', value: 'NONFOIL', text: 'Nonfoil' },\n    { key: 'foil', value: 'FOIL', text: 'Foil' },\n];\n\nconst sortByDropdownOptions = [\n    { key: 'pricesort', value: 'price', text: 'Price' },\n    { key: 'alphasort', value: 'name', text: 'Card Name' },\n];\n\nconst sortByDirectionDropdownOptions = [\n    { key: 'descdirsort', value: 1, text: 'Ascending' },\n    { key: 'ascdirsort', value: -1, text: 'Descending' },\n];\n\nconst sortByColorDropdownOptions = [\n    { key: 'w', value: 'W', text: 'White' },\n    { key: 'u', value: 'U', text: 'Blue' },\n    { key: 'b', value: 'B', text: 'Black' },\n    { key: 'r', value: 'R', text: 'Red' },\n    { key: 'g', value: 'G', text: 'Green' },\n];\n\nconst colorSpecificityDropdownOptions = [\n    { key: 'all', value: '', text: 'None' },\n    { key: 'colorless', value: 'colorless', text: 'Colorless only' },\n    { key: 'mono', value: 'mono', text: 'Monocolor only' },\n    { key: 'multi', value: 'multi', text: 'Multicolor only' },\n];\n\nconst typeLineOptions = [\n    { key: 'na', value: '', text: 'None' },\n    { key: 'artifact', value: 'Artifact', text: 'Artifact' },\n    { key: 'creature', value: 'Creature', text: 'Creature' },\n    { key: 'enchantment', value: 'Enchantment', text: 'Enchantment' },\n    { key: 'instant', value: 'Instant', text: 'Instant' },\n    { key: 'land', value: 'Land', text: 'Land' },\n    { key: 'planeswalker', value: 'Planeswalker', text: 'Planeswalker' },\n    { key: 'sorcery', value: 'Sorcery', text: 'Sorcery' },\n    { key: 'tribal', value: 'Tribal', text: 'Tribal' },\n];\n\nconst frameOptions = [\n    { key: 'na', value: '', text: 'None' },\n    { key: 'borderless', value: 'borderless', text: 'Borderless' },\n    { key: 'extendedArt', value: 'extendedArt', text: 'Extended Art' },\n    { key: 'extendedArt', value: 'showcase', text: 'Showcase' },\n];\n\nconst initialState = {\n    title: '',\n    setName: '',\n    format: '',\n    priceNum: '',\n    priceFilter: 'gte',\n    finish: '',\n    sortBy: 'price',\n    colorsArray: [],\n    sortByDirection: -1,\n    colorSpecificity: '',\n    typeLine: '',\n    setNames: [],\n    frame: '',\n};\n\nexport default class DeckboxCloneForm extends React.Component {\n    state = { editionDropdownOptions: [], ...initialState };\n\n    handleSearchSelect = (name) => this.setState({ title: name });\n\n    // When the user blurs the search field, we need to re-set state. Otherwise it won't clear from handleSearchSelect()\n    handleSearchBlur = (e, d) => this.setState({ title: e.target.value });\n\n    handleChange = (e, { value }) => this.setState({ [e.target.name]: value });\n\n    handleDropdownChange = (e, data) =>\n        this.setState({ [data.name]: data.value });\n\n    async componentDidMount() {\n        const { data } = await axios.get(GET_SET_NAMES, {\n            headers: makeAuthHeader(),\n        });\n        const setNameOptions = data.map((d, idx) => {\n            return { key: `set${idx}`, value: d, text: d };\n        });\n        const concatWithBlankOption = [\n            { key: 'snull', value: '', text: 'None' },\n        ].concat(setNameOptions);\n        this.setState({ editionDropdownOptions: concatWithBlankOption });\n    }\n\n    render() {\n        const {\n            title,\n            setName,\n            format,\n            priceNum,\n            priceFilter,\n            finish,\n            sortBy,\n            sortByDirection,\n            colorsArray,\n            colorSpecificity,\n            typeLine,\n            frame,\n        } = this.state;\n\n        // Sort the colors here and concat prior to sending to the backend\n        const colors = colorsArray.sort().join('');\n\n        return (\n            <Segment>\n                <h3>Filters</h3>\n                <Form>\n                    <Form.Group widths=\"4\">\n                        <Form.Field>\n                            <label>Card Name</label>\n                            <SearchBar\n                                handleSearchSelect={this.handleSearchSelect}\n                                value={this.state.title}\n                                name=\"title\"\n                                onBlur={this.handleSearchBlur}\n                            />\n                        </Form.Field>\n                        <Form.Field\n                            control={Select}\n                            label=\"Format\"\n                            placeholder=\"Format\"\n                            options={formatDropdownOptions}\n                            name=\"format\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Edition\"\n                            placeholder=\"Edition\"\n                            search\n                            options={this.state.editionDropdownOptions}\n                            name=\"setName\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Finish\"\n                            placeholder=\"Finish\"\n                            options={finishDropdownOptions}\n                            name=\"finish\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n                    <Form.Group widths=\"4\">\n                        <Form.Field\n                            control={Select}\n                            multiple\n                            label=\"Colors\"\n                            placeholder=\"Colors\"\n                            options={sortByColorDropdownOptions}\n                            name=\"colorsArray\"\n                            onChange={this.handleDropdownChange}\n                        />\n\n                        <Form.Field\n                            control={Select}\n                            label=\"Color specificity\"\n                            placeholder=\"Color specificity\"\n                            options={colorSpecificityDropdownOptions}\n                            name=\"colorSpecificity\"\n                            onChange={this.handleDropdownChange}\n                        />\n\n                        <Form.Field\n                            control={Select}\n                            label=\"Type Line\"\n                            placeholder=\"Type Line\"\n                            options={typeLineOptions}\n                            name=\"typeLine\"\n                            onChange={this.handleDropdownChange}\n                        />\n\n                        <Form.Field\n                            control={Select}\n                            label=\"Frame Effects\"\n                            placeholder=\"Effect\"\n                            options={frameOptions}\n                            name=\"frame\"\n                            onChange={this.handleDropdownChange}\n                        />\n\n                        <Form.Field>\n                            <label>Price Filter</label>\n                            <Input\n                                label={\n                                    <Dropdown\n                                        options={priceFilterDropdownOptions}\n                                        name=\"priceFilter\"\n                                        defaultValue=\"gte\"\n                                        onChange={this.handleDropdownChange}\n                                    />\n                                }\n                                placeholder=\"Enter a price\"\n                                labelPosition=\"left\"\n                                name=\"priceNum\"\n                                type=\"number\"\n                                onChange={this.handleDropdownChange}\n                            />\n                        </Form.Field>\n                    </Form.Group>\n\n                    <h3>{'Sort & Order'}</h3>\n\n                    <Form.Group>\n                        <Form.Field\n                            control={Select}\n                            label=\"Sort By\"\n                            placeholder=\"\"\n                            options={sortByDropdownOptions}\n                            defaultValue=\"price\"\n                            name=\"sortBy\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Order\"\n                            options={sortByDirectionDropdownOptions}\n                            defaultValue={-1}\n                            name=\"sortByDirection\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Button\n                            primary\n                            onClick={() =>\n                                this.props.handleSubmit({\n                                    title,\n                                    setName,\n                                    format,\n                                    priceNum,\n                                    priceFilter,\n                                    finish,\n                                    sortBy,\n                                    sortByDirection,\n                                    colors,\n                                    colorSpecificity,\n                                    type: typeLine,\n                                    frame,\n                                })\n                            }\n                        >\n                            Submit\n                        </Form.Button>\n                    </Form.Group>\n                </Form>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\nimport Price from '../common/Price';\nimport TooltipImage from '../common/TooltipImage';\n\nconst conditionMap = {\n    NM: 'Near Mint',\n    LP: 'Light Play',\n    MP: 'Moderate Play',\n    HP: 'Heavy Play',\n};\n\nexport default class DeckboxCloneRow extends React.Component {\n    state = { mouseInside: false, mouseX: 0, mouseY: 0 };\n\n    mouseEnter = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseInside: true, mouseX, mouseY });\n    }\n\n    mouseLeave = (e) => this.setState({ mouseInside: false });\n\n    mouseMove = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseX, mouseY });\n    };\n\n    render() {\n        const { inventory, name, set_name, price, set, rarity, image_uri } = this.props;\n        const { mouseInside, mouseX } = this.state;\n        const finish = inventory.k.split('_')[0];\n        const condition = inventory.k.split('_')[1];\n\n        return <Table.Row>\n            <Table.Cell>\n                <span\n                    onMouseEnter={this.mouseEnter}\n                    onMouseLeave={this.mouseLeave}\n                    onMouseMove={this.mouseMove}\n                    style={{ cursor: 'help' }}\n                >\n                    {name}{' '}\n                </span>\n                {finish === 'FOIL' && <Icon name=\"star\" color=\"blue\" />}\n                {mouseInside && <TooltipImage image_uri={image_uri} posX={mouseX} />}\n            </Table.Cell>\n            <Table.Cell><i className={`ss ss-fw ss-${set} ss-${rarity}`} style={{ fontSize: '20px' }} />{\" \"}{set_name}</Table.Cell>\n            <Table.Cell>{conditionMap[condition]}</Table.Cell>\n            <Table.Cell>{inventory.v}</Table.Cell>\n            <Table.Cell><Price num={price} /></Table.Cell>\n        </Table.Row>\n    }\n}","import React from 'react';\nimport { GET_CARDS_BY_FILTER } from '../utils/api_resources';\nimport DeckboxCloneForm from './DeckboxCloneForm';\nimport DeckboxCloneRow from './DeckboxCloneRow';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport {\n    Table,\n    Menu,\n    Icon,\n    Dimmer,\n    Loader,\n    Segment,\n    Header,\n    Container,\n} from 'semantic-ui-react';\nimport _ from 'lodash';\nconst LIMIT = 100; // Matching the backend for now\n\nexport default class DeckboxClone extends React.Component {\n    state = {\n        data: [],\n        count: 0,\n        currentPage: 0,\n        numPages: 0,\n        pageArray: [],\n        isLoading: false,\n        cachedFilters: {},\n        showPages: [],\n        searchTouched: false, // Tracks whether the user has initially searched for the 'no results' message\n    };\n\n    fetchData = async (filters, page) => {\n        try {\n            this.setState({ isLoading: true });\n\n            const { data } = await axios.get(GET_CARDS_BY_FILTER, {\n                params: { ...filters, page },\n                headers: makeAuthHeader(),\n            });\n\n            const numPages = Math.ceil(data.total / LIMIT);\n            const pages = _.range(1, numPages + 1);\n            let showPages;\n\n            // Logic that controls the visibility of page number links\n            // Default max number pages to display is 5\n            if (page <= 3) {\n                showPages = pages.slice(0, 5);\n            } else if (page >= numPages - 2) {\n                showPages = pages.slice(numPages - 5, numPages);\n            } else {\n                showPages = pages.slice(page - 2, page + 3);\n            }\n\n            this.setState({\n                data: data.cards,\n                count: data.total,\n                isLoading: false,\n                numPages: numPages,\n                currentPage: page,\n                showPages: showPages,\n                searchTouched: true,\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    handleSubmit = async (filters) => {\n        this.setState({ cachedFilters: filters }); // Set the filters for pagination requests later\n        await this.fetchData(filters, 1); // On submit, starting page mut always be 1\n    };\n\n    handlePage = async (page) => {\n        await this.fetchData(this.state.cachedFilters, page);\n        this.setState({ currentPage: page });\n    };\n\n    render() {\n        const { data, isLoading, currentPage, numPages, count } = this.state;\n        const showLeftPageButtons = !(currentPage === 1);\n        const showRightPageButtons = !(currentPage === numPages);\n\n        return (\n            <Container>\n                <Dimmer\n                    active={isLoading}\n                    inverted\n                    page\n                    style={{ marginTop: '52.63px' }}\n                >\n                    <Loader size=\"large\">Loading</Loader>\n                </Dimmer>\n                <Segment secondary>\n                    <Icon name=\"exclamation triangle\" color=\"blue\" />\n                    Prices from this table are updated weekly and are subject to\n                    fluctuations. Consult 'New Sale' or 'Manage Inventory' for\n                    up-to-date values\n                </Segment>\n                <DeckboxCloneForm handleSubmit={this.handleSubmit} />\n\n                {!!data.length && (\n                    <Table celled striped compact>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan=\"5\">\n                                    <Menu floated=\"left\">\n                                        <Menu.Item>\n                                            Viewing page {currentPage} of{' '}\n                                            {numPages}\n                                        </Menu.Item>\n                                    </Menu>\n                                    <Menu floated=\"right\">\n                                        {showLeftPageButtons && (\n                                            <Menu.Item\n                                                as=\"a\"\n                                                icon\n                                                onClick={() =>\n                                                    this.handlePage(\n                                                        currentPage - 1\n                                                    )\n                                                }\n                                            >\n                                                <Icon name=\"chevron left\" />\n                                            </Menu.Item>\n                                        )}\n\n                                        <React.Fragment>\n                                            {this.state.showPages.map((p) => {\n                                                return (\n                                                    <Menu.Item\n                                                        key={`page-${p}`}\n                                                        onClick={() =>\n                                                            this.handlePage(p)\n                                                        }\n                                                        active={\n                                                            currentPage === p\n                                                        }\n                                                        disabled={\n                                                            currentPage === p\n                                                        }\n                                                        as=\"a\"\n                                                    >\n                                                        {p}\n                                                    </Menu.Item>\n                                                );\n                                            })}\n                                        </React.Fragment>\n\n                                        {showRightPageButtons && (\n                                            <Menu.Item\n                                                as=\"a\"\n                                                icon\n                                                onClick={() =>\n                                                    this.handlePage(\n                                                        currentPage + 1\n                                                    )\n                                                }\n                                            >\n                                                <Icon name=\"chevron right\" />\n                                            </Menu.Item>\n                                        )}\n                                    </Menu>\n                                </Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Edition</Table.HeaderCell>\n                                <Table.HeaderCell>Condition</Table.HeaderCell>\n                                <Table.HeaderCell>Qty</Table.HeaderCell>\n                                <Table.HeaderCell>Price</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                            {data.map((d) => (\n                                <DeckboxCloneRow\n                                    {...d}\n                                    key={`${d._id}${d.inventory.k}`}\n                                />\n                            ))}\n                        </Table.Body>\n\n                        <Table.Footer>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan=\"5\">\n                                    <Menu floated=\"left\">\n                                        <Menu.Item>\n                                            Total results: {count}\n                                        </Menu.Item>\n                                    </Menu>\n                                    <Menu floated=\"right\">\n                                        {showLeftPageButtons && (\n                                            <Menu.Item\n                                                as=\"a\"\n                                                icon\n                                                onClick={() =>\n                                                    this.handlePage(\n                                                        currentPage - 1\n                                                    )\n                                                }\n                                            >\n                                                <Icon name=\"chevron left\" />\n                                            </Menu.Item>\n                                        )}\n\n                                        <React.Fragment>\n                                            {this.state.showPages.map((p) => {\n                                                return (\n                                                    <Menu.Item\n                                                        key={`page-${p}`}\n                                                        onClick={() =>\n                                                            this.handlePage(p)\n                                                        }\n                                                        active={\n                                                            currentPage === p\n                                                        }\n                                                        disabled={\n                                                            currentPage === p\n                                                        }\n                                                        as=\"a\"\n                                                    >\n                                                        {p}\n                                                    </Menu.Item>\n                                                );\n                                            })}\n                                        </React.Fragment>\n\n                                        {showRightPageButtons && (\n                                            <Menu.Item\n                                                as=\"a\"\n                                                icon\n                                                onClick={() =>\n                                                    this.handlePage(\n                                                        currentPage + 1\n                                                    )\n                                                }\n                                            >\n                                                <Icon name=\"chevron right\" />\n                                            </Menu.Item>\n                                        )}\n                                    </Menu>\n                                </Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                )}\n\n                {!data.length && (\n                    <Segment placeholder>\n                        <Header icon>\n                            <Icon name=\"search\" />\n                            {this.state.searchTouched\n                                ? 'No results found'\n                                : 'Use the filters to browse inventory'}\n                        </Header>\n                    </Segment>\n                )}\n            </Container>\n        );\n    }\n}\n","import React, { useContext } from 'react';\nimport createToast from '../common/createToast';\nimport { Form, Button, Segment, Select } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthProvider';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\n\nconst LoginContainer = styled.div`\n    margin-top: 15px;\n    display: flex;\n    justify-content: center;\n`;\n\nconst FormContainer = styled(Segment)`\n    width: 400px;\n    padding: 25px 25px 25px 25px !important;\n`;\n\nexport default function Login() {\n    const { loggedIn, handleLogin } = useContext(AuthContext);\n\n    const onSubmit = async ({ username, password, location }) => {\n        const data = await handleLogin(username, password, location);\n\n        if (data.token) {\n            createToast({\n                color: 'green',\n                header: 'Success',\n                message: `Enjoy your time here!`,\n            });\n        } else {\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: data,\n            });\n        }\n    };\n\n    if (loggedIn) return <Redirect to=\"/manage-inventory\" />;\n\n    return (\n        <LoginContainer>\n            <Formik\n                initialValues={{\n                    username: '',\n                    password: '',\n                    location: '',\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ values, handleSubmit, setFieldValue, isSubmitting }) => (\n                    <FormContainer raised loading={isSubmitting}>\n                        <Form>\n                            <Form.Field>\n                                <Form.Input\n                                    className=\"username-input\"\n                                    placeholder=\"Username\"\n                                    label=\"Username\"\n                                    value={values.username}\n                                    onChange={(_, { value }) =>\n                                        setFieldValue('username', value)\n                                    }\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <Form.Input\n                                    className=\"password-input\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    value={values.password}\n                                    onChange={(_, { value }) =>\n                                        setFieldValue('password', value)\n                                    }\n                                />\n                            </Form.Field>\n                            <Form.Field\n                                label=\"Location\"\n                                control={Select}\n                                value={values.location}\n                                placeholder=\"Select location\"\n                                options={[\n                                    {\n                                        key: 'beaverton',\n                                        text: 'Beaverton (The OG)',\n                                        value: 'ch1',\n                                    },\n                                    {\n                                        key: 'hillsboro',\n                                        text: 'Hillsboro',\n                                        value: 'ch2',\n                                    },\n                                ]}\n                                onChange={(_, { value }) => {\n                                    setFieldValue('location', value);\n                                }}\n                            />\n                            <Button\n                                primary\n                                fluid\n                                floated=\"right\"\n                                type=\"submit\"\n                                onClick={handleSubmit}\n                                className=\"login-btn\"\n                                disabled={\n                                    !values.username ||\n                                    !values.password ||\n                                    !values.location\n                                }\n                            >\n                                Submit\n                            </Button>\n                        </Form>\n                    </FormContainer>\n                )}\n            </Formik>\n        </LoginContainer>\n    );\n}\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthProvider';\n\nfunction Logout() {\n    const { handleLogout } = useContext(AuthContext);\n\n    handleLogout();\n\n    return <Redirect to=\"/login\" />\n};\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport uuid from 'uuid';\nimport axios from 'axios';\nimport createToast from '../common/createToast';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport { GET_CARDS_WITH_INFO, RECEIVE_CARDS } from '../utils/api_resources';\n\nconst TRADE_TYPES = { CASH: 'CASH', CREDIT: 'CREDIT' }; // Customers can only receive cash or credit for their assets\n\n// Models the line item in the Receiving List and sets a unique UUID key on each\nclass LineItem extends InventoryCard {\n    constructor(cardProps) {\n        super(cardProps);\n\n        const { cashPrice, marketPrice, creditPrice } = cardProps;\n\n        this.cashPrice = cashPrice;\n        this.marketPrice = marketPrice;\n        this.creditPrice = creditPrice;\n        this.uuid_key = uuid();\n\n        if (creditPrice === 0) this.tradeType = TRADE_TYPES.CASH;\n        // Set to cash if customer doesn't want credit\n        else this.tradeType = TRADE_TYPES.CREDIT; // Otherwise, default to credit\n    }\n}\n\nexport const ReceivingContext = React.createContext();\n\nexport function ReceivingProvider(props) {\n    const [searchResults, setSearchResults] = useState([]);\n    const [receivingList, setReceivingList] = useState([]);\n\n    /**\n     * Fetches cards from the DB by title when a user selects a title after querying.\n     * This function merges the data (inventory quantity and card objects) from two endpoints into one array.\n     *\n     * @param {String} term - the search term\n     */\n    const handleSearchSelect = async (term) => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: false },\n                headers: makeAuthHeader(),\n            });\n\n            setSearchResults(data.map((d) => new InventoryCard(d)));\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    /**\n     * Adds a card to the receiving list, with a unique uuid\n     */\n    const addToList = (quantity, cardProps) => {\n        const previousState = [...receivingList];\n\n        // Each line-item represents one card. Use _.times() to repeat\n        const newState = previousState.concat(\n            _.times(quantity, () => new LineItem(cardProps))\n        );\n\n        setReceivingList(_.sortBy(newState, 'name'));\n    };\n\n    /**\n     * Removes a card from the receiving list using the uuid\n     */\n    const removeFromList = (uuid_key) => {\n        const copiedState = [...receivingList];\n        _.remove(copiedState, (e) => e.uuid_key === uuid_key); // Mutates array\n        setReceivingList(copiedState);\n    };\n\n    /**\n     * Determines whether line-items use cash or credit. Changes the tradeType by reference in the receivingList array\n     * which changes the active prop in ReceivingListItem\n     */\n    const activeTradeType = (uuid_key, tradeType) => {\n        const previousState = [...receivingList];\n        const card = previousState.find((e) => e.uuid_key === uuid_key);\n        card.tradeType = TRADE_TYPES[tradeType];\n        setReceivingList(previousState);\n    };\n\n    /**\n     * Sets all items to a tradeType, if possible\n     *\n     * @param {String} selectType - `CASH` or `CREDIT`\n     */\n    const selectAll = (selectType) => {\n        const oldState = [...receivingList];\n        const { CASH, CREDIT } = TRADE_TYPES;\n\n        oldState.forEach((card, idx, arr) => {\n            let selectedPrice = 0;\n\n            if (selectType === CASH) selectedPrice = card.cashPrice;\n            else if (selectType === CREDIT) selectedPrice = card.creditPrice;\n\n            if (selectedPrice > 0) arr[idx].tradeType = selectType;\n        });\n\n        setReceivingList(oldState);\n    };\n\n    /**\n     * Persists all passed cards to inventory\n     */\n    const commitToInventory = async () => {\n        try {\n            const cardsToCommit = receivingList.map((card) => {\n                const { finishCondition, id, name, set_name, set } = card;\n                return {\n                    quantity: 1,\n                    finishCondition,\n                    id,\n                    name,\n                    set_name,\n                    set,\n                }; // Only committing one per line-item\n            });\n\n            await axios.post(\n                RECEIVE_CARDS,\n                { cards: cardsToCommit },\n                { headers: makeAuthHeader() }\n            );\n\n            setSearchResults([]);\n            setReceivingList([]);\n\n            createToast({\n                color: 'green',\n                header: `${receivingList.length} cards were added to inventory!`,\n                duration: 2000,\n            });\n        } catch (e) {\n            console.log(e);\n            createToast({\n                color: 'red',\n                header: `Something went wrong...`,\n                duration: 2000,\n            });\n        }\n    };\n\n    const resetSearchResults = () => setSearchResults([]);\n\n    return (\n        <ReceivingContext.Provider\n            value={{\n                searchResults,\n                receivingList,\n                handleSearchSelect,\n                addToList,\n                removeFromList,\n                activeTradeType,\n                selectAll,\n                commitToInventory,\n                resetSearchResults,\n            }}\n        >\n            {props.children}\n        </ReceivingContext.Provider>\n    );\n}\n","import React, { useState, useContext } from 'react';\nimport $ from 'jquery';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Item,\n} from 'semantic-ui-react';\nimport QohLabels from '../common/QohLabels';\nimport CardImage from '../common/CardImage';\nimport MarketPrice from '../common/MarketPrice';\nimport createToast from '../common/createToast';\nimport { ReceivingContext } from '../context/ReceivingContext';\nimport Language from '../common/Language';\nimport { finishes, cardConditions } from '../utils/dropdownOptions';\nimport checkCardFinish from '../utils/checkCardFinish';\n\nexport default function ReceivingSearchItem(props) {\n    const [quantity, setQuantity] = useState(1);\n    const [cashPrice, setCashPrice] = useState(0);\n    const [creditPrice, setCreditPrice] = useState(0);\n    const [selectedCondition, setSelectedCondition] = useState('NM');\n    const [marketPrice, setMarketPrice] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(\n        checkCardFinish(props.nonfoil, props.foil).selectedFinish // seed state from props\n    );\n\n    // Determines whether the select finish dropdown is permanently disabled, seeded from props\n    const finishDisabled = checkCardFinish(props.nonfoil, props.foil)\n        .finishDisabled;\n\n    const { addToList } = useContext(ReceivingContext);\n\n    const handleFinishChange = (e, { value }) => setSelectedFinish(value);\n\n    const handleConditionChange = (e, { value }) => setSelectedCondition(value);\n\n    // Validates/sanitizes user inputs by tracking the `name` attribute of the input element\n    const handlePriceChange = (e, { value }) => {\n        let val = Number(value) || 0;\n        if (val < 0) val = 0;\n        if (value === '') val = '';\n\n        switch (e.target.name) {\n            case 'cashInput':\n                setCashPrice(val);\n                break;\n            case 'marketPriceInput':\n                setMarketPrice(val);\n                break;\n            case 'creditInput':\n                setCreditPrice(val);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleQuantityChange = (e, { value }) => {\n        let val = parseInt(value, 10) || 0;\n        if (val < 0) val = 0; // cannot receive less than 0\n        if (val > 50) val = 50; // set max to 50 cards per single transaction\n        setQuantity(val);\n    };\n\n    const handleFocus = (e) => e.target.select();\n\n    const handleInventoryAdd = () => {\n        addToList(quantity, {\n            ...props,\n            cashPrice,\n            marketPrice,\n            creditPrice,\n            finishCondition: `${selectedFinish}_${selectedCondition}`, // ex. NONFOIL_NM\n        });\n\n        setQuantity(1);\n        setCashPrice(0);\n        setMarketPrice(0);\n        setCreditPrice(0);\n        setSelectedCondition('NM');\n        setSelectedFinish(\n            checkCardFinish(props.nonfoil, props.foil).selectedFinish\n        );\n\n        createToast({\n            color: 'green',\n            header: `${quantity}x ${props.name} added to buylist!`,\n            duration: 2000,\n        });\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    /**\n     * Determines whether the `Add` button should be disabled\n     */\n    const submitDisabled = () => {\n        const validateQty = quantity === 0 || quantity === '';\n        const validateTradeTypes =\n            !(cashPrice || creditPrice) ||\n            cashPrice === '' ||\n            creditPrice === '';\n        const validateMarketPrice = marketPrice === 0 || marketPrice === '';\n\n        if (cashPrice > 0) {\n            return validateQty || validateTradeTypes || validateMarketPrice;\n        }\n\n        return validateQty || validateTradeTypes;\n    };\n\n    const {\n        image_uris,\n        name,\n        set_name,\n        set,\n        rarity,\n        card_faces,\n        id,\n        lang,\n    } = props;\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"small\">\n                        <CardImage\n                            image_uris={image_uris}\n                            card_faces={card_faces}\n                            hover={false}\n                        />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as=\"h3\">\n                            {name}{' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                            </Label>\n                            <QohLabels inventoryQty={props.qoh} />{' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                            <Language languageCode={lang} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity\"\n                                        value={quantity}\n                                        onChange={handleQuantityChange}\n                                        onFocus={(e) => e.target.select()}\n                                        className=\"receiving-quantity\"\n                                    />\n                                    <Form.Field\n                                        label=\"Credit Price\"\n                                        name=\"creditInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={creditPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        step=\"0.25\"\n                                        className=\"receiving-credit\"\n                                    />\n                                    <Form.Field\n                                        label=\"Cash Price\"\n                                        name=\"cashInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={cashPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        step=\"0.25\"\n                                        className=\"receiving-cash\"\n                                    />\n                                    <Form.Field\n                                        label=\"Market Price\"\n                                        name=\"marketPriceInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={marketPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        step=\"0.25\"\n                                        disabled={\n                                            cashPrice === 0 || cashPrice === ''\n                                        }\n                                        className=\"receiving-market\"\n                                    />\n                                </Form.Group>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        label=\"Finish\"\n                                        control={Select}\n                                        value={selectedFinish}\n                                        options={finishes}\n                                        disabled={finishDisabled}\n                                        onChange={handleFinishChange}\n                                    />\n                                    <Form.Field\n                                        label=\"Condition\"\n                                        control={Select}\n                                        value={selectedCondition}\n                                        options={cardConditions}\n                                        onChange={handleConditionChange}\n                                    />\n                                    <Form.Button\n                                        label=\"Add to List?\"\n                                        control={Button}\n                                        primary\n                                        disabled={submitDisabled()}\n                                        onClick={handleInventoryAdd}\n                                    >\n                                        Add\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React, { useContext } from 'react';\nimport ReceivingSearchItem from './ReceivingSearchItem';\nimport { ReceivingContext } from '../context/ReceivingContext';\n\nexport default function ReceivingCardList() {\n    const { searchResults } = useContext(ReceivingContext);\n\n    return searchResults.map(c => {\n        return <ReceivingSearchItem\n            key={c.id}\n            {...c}\n            qoh={c.qoh}\n        />\n    });\n}\n","import React from 'react';\nimport { Segment, Header, Icon } from 'semantic-ui-react';\n\nexport default function DefaultPlaceholder({ active, children }) {\n    return <React.Fragment>\n        {active &&\n            <Segment placeholder>\n                <Header icon>\n                    <Icon name=\"search\" />\n                    <em>{children}</em>\n                </Header>\n            </Segment>}\n    </React.Fragment>\n}","import React, { useState, useContext } from 'react';\nimport { Table, Button, Label, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport Price from '../common/Price';\nimport { ReceivingContext } from '../context/ReceivingContext';\nimport TooltipImage from '../common/TooltipImage';\n\nconst BoldHelp = styled.b`\n    cursor: help;\n`;\n\n// Defines whether it uses cash or credit for trade types\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListItem({ display_name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, tradeType, cardImage }) {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [hovered, setHovered] = useState(false);\n    const [mouseInside, setMouseInside] = useState(false);\n    const [mousePos, setMousePos] = useState({});\n    const { removeFromList, activeTradeType } = useContext(ReceivingContext);\n\n    const mouseEnter = e => {\n        const rect = e.target.getBoundingClientRect();\n        const X = Math.round(e.clientX - rect.x) + 30;\n        setMouseInside(true);\n        setMousePos({ X });\n    }\n\n    const mouseMove = e => {\n        const rect = e.target.getBoundingClientRect();\n        const X = Math.round(e.clientX - rect.x) + 30;\n        setMousePos({ X });\n    }\n\n    const mouseLeave = e => setMouseInside(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell>\n                <BoldHelp\n                    onMouseEnter={mouseEnter}\n                    onMouseMove={mouseMove}\n                    onMouseLeave={mouseLeave}\n                >\n                    {display_name}\n                    {mouseInside && <TooltipImage image_uri={cardImage} posX={mousePos.X} />}\n                </BoldHelp>\n            </Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Cash <b><Price num={cashPrice} /></b>\n                </div>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Credit <b><Price num={creditPrice} /></b>\n                </div>\n                <p>{finishCondition.split('_')[0]} | {finishCondition.split('_')[1]}</p>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CASH}\n                    color={tradeType === CASH ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CASH)}\n                    disabled={cashPrice === 0}\n                    icon\n                >\n                    <Icon name=\"dollar sign\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CREDIT}\n                    color={tradeType === CREDIT ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CREDIT)}\n                    disabled={creditPrice === 0}\n                    icon\n                >\n                    <Icon name=\"credit card outline\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => removeFromList(uuid_key)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}","import React from 'react';\nimport _ from 'lodash';\nimport Price from '../common/Price';\nimport { Table } from 'semantic-ui-react';\n\n// Am I crazy or is this logic really convoluted?\n// Perhaps look at this down the line for improvement...\nexport default function CashReport({ receivingList, closeCashModal }) {\n    // If id, cashPrice and marketPrice are the same, goes in one bucket\n    const countByPriceAndID = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            // Note: We're creating a unique uuid-esque comparator string based on:\n            // `id`, `cashPrice`, `marketPrice`, and `finishCondition`\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .groupBy(\"temp_uuid\")\n        .mapValues(val => val.length)\n        .value();\n\n    const uniqLineItems = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .uniqBy('temp_uuid')\n        .value();\n\n    const mergedWithQty = uniqLineItems.map(c => {\n        return { ...c, tradeQty: countByPriceAndID[c.temp_uuid] } // Add a trade quantity referencing the previous count\n    });\n\n    const totalCashOut = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .sumBy(c => c.cashPrice)\n        .value();\n\n    return <React.Fragment>\n        <div id=\"cash-report\">\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan={6}>Employee Name:</Table.HeaderCell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.HeaderCell>Card Name</Table.HeaderCell>\n                        <Table.HeaderCell>Market Value</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Offer</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Out</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {mergedWithQty.map(c => {\n                        return <Table.Row key={c.temp_uuid}>\n                            <Table.Cell>{c.name}</Table.Cell>\n                            <Table.Cell><Price num={c.marketPrice} /></Table.Cell>\n                            <Table.Cell>{c.finishCondition}</Table.Cell>\n                            <Table.Cell>{c.tradeQty}</Table.Cell>\n                            <Table.Cell><Price num={c.cashPrice} /></Table.Cell>\n                            <Table.Cell><Price num={c.tradeQty * c.cashPrice} /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n                <Table.Footer>\n                    <Table.HeaderCell colSpan={6}>Total: <Price num={totalCashOut} /></Table.HeaderCell>\n                </Table.Footer>\n            </Table>\n        </div>\n    </React.Fragment>\n}","const printStyle = `\n    body {\n        font-family: 'helvetica neue', helvetica, arial, sans-serif;\n    }\n\n    table {\n        table-layout: fixed;\n        width: 100%;\n        border-collapse: collapse;\n        border: 1px solid gray;\n        text-align: left;\n    }\n\n    thead th:nth-child(1) {\n        width: 30%;\n    }\n\n    thead th:nth-child(2) {\n        width: 20%;\n    }\n\n    thead th:nth-child(3) {\n        width: 15%;\n    }\n\n    thead th:nth-child(4) {\n        width: 35%;\n    }\n\n    th, td {\n        border: 1px solid #ddd;\n        padding: 10px;\n    }\n\n    tfoot {\n        text-align: right !important;\n    }\n`;\n\n/**\n     * We're creating a new tab here for the modal table and writing CSS to it - not the most elegant solution from a UX and\n     * code standpoint, but time was of the essence for this release. Refactor down the road.\n     * \n     * The id cash-report is found on the cash report table\n     */\nexport default function printCashReport() {\n    const divToPrint = document.getElementById('cash-report');\n    const popup = window.open('', '_blank');\n    popup.document.open();\n    popup.document.write(`<html>`);\n    popup.document.write(`<head>`);\n    popup.document.write(`<title>Cash Report</title>`)\n    popup.document.write(`<style>${printStyle}</style>`);\n    popup.document.write(`</head>`);\n    popup.document.write(`<body onload=\"window.print()\">`);\n    popup.document.write(`${divToPrint.innerHTML}`);\n    popup.document.write(`</body>`);\n    popup.document.write(`</html>`);\n    popup.document.close();\n}","import React, { useState, useContext } from 'react';\nimport { Modal, Header, Button } from 'semantic-ui-react';\nimport { ReceivingContext } from '../context/ReceivingContext';\nimport Price from '../common/Price';\n\nexport default function ReceivingListModal({ cashTotal, creditTotal }) {\n    const [loading, setLoading] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n\n    const { receivingList, commitToInventory } = useContext(ReceivingContext);\n\n    const submitToInventory = async () => {\n        setLoading(true);\n        await commitToInventory();\n        setLoading(false);\n    }\n\n    return <Modal\n        closeOnDimmerClick={false}\n        trigger={\n            <Button\n                id=\"commit-to-inv\"\n                color=\"blue\"\n                disabled={receivingList.length === 0}\n                onClick={() => setShowModal(true)}>\n                Commit to inventory\n             </Button>\n        }\n        open={showModal}\n        onClose={() => setShowModal(false)}\n        basic style={{ marginTop: '50px' }} >\n        <Header>Confirm receipt of new inventory?</Header>\n        <Modal.Content>\n            <p><b>Pressing 'Submit' will commit the following items to inventory:</b></p>\n            <ul>\n                {receivingList.map(c => {\n                    return <li key={c.uuid_key}>{c.name} | {c.set_name}({c.set.toUpperCase()})</li>\n                })}\n            </ul>\n            <div>\n                <p><b>The customer is owed: </b></p>\n                <ul>\n                    {cashTotal > 0 ? <li><Price num={cashTotal} /> in cold, hard cash</li> : null}\n                    {creditTotal > 0 ? <li><Price num={creditTotal} /> in store credit</li> : null}\n                </ul>\n            </div>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button basic color=\"red\" inverted onClick={() => setShowModal(false)}>Cancel</Button>\n            <Button\n                id=\"submit-to-inv\"\n                color=\"green\"\n                inverted\n                loading={loading}\n                disabled={loading}\n                onClick={submitToInventory}\n            >Submit</Button>\n        </Modal.Actions>\n    </Modal>\n}","import React, { useState, useContext } from 'react';\nimport { Segment, Statistic, Button, Modal } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport Price from '../common/Price';\nimport CashReport from './CashReport';\nimport printCashReport from './printCashReport';\nimport ReceivingListModal from './ReceivingListModal';\nimport { ReceivingContext } from '../context/ReceivingContext';\n\nconst FlexRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst FlexCol = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 100px;\n`;\n\nconst StatisticColor = styled(Statistic.Label)`\n    color: gray !important;\n`;\n\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListTotals() {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [showCashModal, setShowCashModal] = useState(false);\n    const { receivingList, selectAll } = useContext(ReceivingContext);\n\n    const openCashModal = () => setShowCashModal(true);\n    const closeCashModal = () => setShowCashModal(false);\n\n    const handlePrintCashReport = () => {\n        setShowCashModal(false); // Close the modal so users don't have to after printing in new tab\n        printCashReport();\n    }\n\n    const cashTotal = receivingList.reduce((acc, curr) => {\n        let cashVal = curr.tradeType === CASH ? curr.cashPrice : 0;\n        return acc + cashVal;\n    }, 0);\n\n    const creditTotal = receivingList.reduce((acc, curr) => {\n        let creditVal = curr.tradeType === CREDIT ? curr.creditPrice : 0;\n        return acc + creditVal;\n    }, 0);\n\n    return <Segment>\n        <FlexRow>\n            <FlexCol>\n                <Button.Group>\n                    <Button id=\"select-all-cash\" onClick={() => selectAll(TRADE_TYPE.CASH)}>Select all cash</Button>\n                    <Button.Or />\n                    <Button id=\"select-all-credit\" onClick={() => selectAll(TRADE_TYPE.CREDIT)}>Select all credit</Button>\n                </Button.Group>\n                <Modal\n                    open={showCashModal}\n                    trigger={\n                        <Button\n                            color={cashTotal > 0 ? 'green' : null}\n                            disabled={cashTotal === 0}\n                            onClick={openCashModal}>\n                            Generate cash report\n                    </Button>\n                    }>\n                    <Modal.Content>\n                        <CashReport\n                            receivingList={receivingList}\n                            closeCashModal={closeCashModal} />\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={handlePrintCashReport} color=\"blue\">Print Report</Button>\n                        <Button onClick={closeCashModal}>Cancel</Button>\n                    </Modal.Actions>\n                </Modal>\n            </FlexCol>\n            <FlexCol>\n                <Segment>\n                    <div>\n                        <Statistic size=\"mini\">\n                            <StatisticColor>Cash Due</StatisticColor>\n                            <Statistic.Value id=\"cash-total\"><Price num={cashTotal} /></Statistic.Value>\n                        </Statistic>\n                        <Statistic size=\"mini\">\n                            <StatisticColor>Credit Due</StatisticColor>\n                            <Statistic.Value id=\"credit-total\"><Price num={creditTotal} /></Statistic.Value>\n                        </Statistic>\n                    </div>\n                    <ReceivingListModal\n                        cashTotal={cashTotal}\n                        creditTotal={creditTotal}\n                    />\n                </Segment>\n            </FlexCol>\n        </FlexRow>\n\n    </Segment>\n}","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport ReceivingListItem from './ReceivingListItem';\nimport ReceivingListTotals from './ReceivingListTotals';\n\nexport default function ReceivingList({ cards }) {\n    return <React.Fragment>\n        {cards.length > 0 && <Table compact size=\"small\">\n            <Table.Body className='receiving-list-table'>\n                {cards.map(card => {\n                    const { name, display_name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, tradeType, qoh, cardImage } = card;\n                    return <ReceivingListItem\n                        name={name}\n                        display_name={display_name}\n                        set={set}\n                        rarity={rarity}\n                        cashPrice={cashPrice}\n                        creditPrice={creditPrice}\n                        finishCondition={finishCondition}\n                        uuid_key={uuid_key}\n                        tradeType={tradeType}\n                        qoh={qoh}\n                        key={uuid_key}\n                        cardImage={cardImage}\n                    />\n                })}\n            </Table.Body>\n        </Table>}\n\n        {cards.length > 0 && <ReceivingListTotals />}\n    </React.Fragment>\n}","import React, { useContext, useEffect } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport ReceivingSearchList from './ReceivingSearchList';\nimport { Header, Grid, Divider } from 'semantic-ui-react';\nimport { ReceivingContext } from '../context/ReceivingContext';\nimport DefaultPlaceholder from './DefaultPlaceholder';\nimport ReceivingList from './ReceivingList';\nimport TotalCardsLabel from '../common/TotalCardsLabel';\nimport styled from 'styled-components';\nimport AllLocationInventory from '../ManageInventory/AllLocationInventory';\n\nconst HeaderContainer = styled('div')({\n    display: 'flex',\n    justifyContent: 'space-between',\n});\n\nexport default function Receiving() {\n    const {\n        searchResults,\n        receivingList,\n        handleSearchSelect,\n        resetSearchResults,\n    } = useContext(ReceivingContext);\n\n    // Reset the search results on componentDidUnmount to clear store\n    useEffect(() => {\n        return () => resetSearchResults();\n    }, []);\n\n    return (\n        <>\n            <SearchBar handleSearchSelect={handleSearchSelect} />\n            <br />\n            <Grid stackable={true}>\n                <Grid.Row>\n                    <Grid.Column width=\"10\">\n                        <HeaderContainer>\n                            <Header as=\"h2\">Card Search</Header>\n                            {searchResults.length > 0 && (\n                                <div>\n                                    <AllLocationInventory\n                                        searchResults={searchResults}\n                                        title={searchResults[0].name}\n                                    />\n                                </div>\n                            )}\n                        </HeaderContainer>\n\n                        <Divider />\n\n                        <DefaultPlaceholder active={!searchResults.length}>\n                            \"So many cards, so little time.\"\n                        </DefaultPlaceholder>\n\n                        <ReceivingSearchList />\n                    </Grid.Column>\n                    <Grid.Column width=\"6\">\n                        <Header as=\"h2\" style={{ display: 'inline-block' }}>\n                            Buylist\n                            <TotalCardsLabel\n                                listLength={receivingList.length}\n                            />\n                        </Header>\n\n                        <Divider />\n\n                        <DefaultPlaceholder active={!receivingList.length}>\n                            \"If you receive it, they will come.\"\n                        </DefaultPlaceholder>\n\n                        <ReceivingList cards={receivingList} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Text = styled.p`\n    font-size: 16px;\n    color: black;\n    text-align: left;\n`;\n\nconst Image = styled.img`\n    width: 100%;\n`;\n\nconst Content = styled.div`\n    padding: 2px 16px;\n`;\n\nconst Container = styled.div`\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    border-radius: 5px 5px 5px 5px;\n    width: 380px;\n    height: 700px;\n    margin: 10px 10px 10px 10px;\n    overflow: hidden; // This allows us to edit the borders on the card's border-flush images\n\n    @media (max-width: 800px) {\n        width: 320px;\n    }\n`;\n\nexport default function Card({ imageSrc, header, date, children }) {\n    return <Container>\n        <Image src={imageSrc} />\n        <Content>\n            <h3><b>{header}</b></h3>\n            <p><em>{date}</em></p>\n            <Text>{children}</Text>\n        </Content>\n    </Container>\n}","export default __webpack_public_path__ + \"static/media/clubhouse_products.f1a1f04b.png\";","export default __webpack_public_path__ + \"static/media/core_2021_draft_booster.8c83b484.png\";","export default __webpack_public_path__ + \"static/media/core_2021_collector.e6b82cae.jpg\";","export default __webpack_public_path__ + \"static/media/double_masters.e808c5fe.png\";","export default __webpack_public_path__ + \"static/media/zen_meme.6b93aa01.jpg\";","export default __webpack_public_path__ + \"static/media/kaldheim.717fd92b.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport clubhouse_products from './clubhouse_products.png';\nimport core_2021_draft_booster from './core_2021_draft_booster.png';\nimport core_2021_collector from './core_2021_collector.jpg';\nimport double_masters from './double_masters.png';\nimport zen_meme from './zen_meme.jpg';\nimport kaldheim from './kaldheim.png';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nconst BaseContent = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: 52px;\n`;\n\nconst ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 1200px;\n\n    @media (max-width: 800px) {\n        width: 100%;\n        padding: 0px 10px 0px 10px;\n    }\n`;\n\nconst Image = styled.div`\n    background: url(${clubhouse_products});\n    background-size: cover;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 500px;\n    width: 100%;\n    z-index: -50;\n`;\n\nconst Image2 = styled.div`\n    background: url(${clubhouse_products});\n    background-size: cover;\n    position: absolute;\n    left: 0px;\n    height: 400px;\n    width: 100%;\n    z-index: -50;\n    opacity: 0.15;\n`;\n\nconst ImageMask = styled.div`\n    background-image: linear-gradient(\n        to bottom,\n        rgba(32, 106, 208, 1),\n        rgba(32, 106, 208, 0.85),\n        rgba(32, 106, 208, 0.66),\n        rgba(255, 255, 255, 1)\n    );\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 500px;\n    width: 100%;\n    z-index: -49;\n`;\n\nconst ImageMask2 = styled.div`\n    background-image: linear-gradient(\n        to bottom,\n        rgba(0, 0, 0, 0),\n        rgba(255, 255, 255, 1)\n    );\n    position: absolute;\n    left: 0px;\n    height: 400px;\n    width: 100%;\n    z-index: -49;\n`;\n\nconst Divider = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: 400px;\n`;\n\nconst FlexRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst FlexRowResponsive = styled(FlexRow)`\n    justify-content: flex-start;\n\n    @media (max-width: 800px) {\n        justify-content: center;\n        flex-wrap: wrap;\n    }\n`;\n\nconst SpanStyle = styled.span`\n    margin-right: 10px;\n`;\n\nconst FlexColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Slogan = styled.h1`\n    font-size: 83px;\n    color: white;\n\n    @media (max-width: 800px) {\n        font-size: 45px;\n        text-align: center;\n    }\n`;\n\nconst Header = styled.p`\n    font-size: 50px;\n    margin-top: 0px;\n    color: black;\n\n    @media (max-width: 800px) {\n        font-size: 27px;\n    }\n`;\n\nconst Subheader = styled.p`\n    font-size: 23px;\n    margin-top: 0px;\n    color: ${(props) => props.color || 'black'};\n\n    @media (max-width: 800px) {\n        font-size: 18px;\n        text-align: center;\n    }\n`;\n\nconst Button = styled.button`\n    outline: none;\n    width: 200px;\n    height: 45px;\n    background-color: rgb(33, 133, 208);\n    border-radius: 20px 20px 20px 20px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    margin-right: 20px;\n    margin-top: 10px;\n    font-size: 17px;\n    color: white;\n    border: 0px;\n\n    :hover {\n        background-color: rgb(35, 139, 219);\n        box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.4);\n    }\n`;\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(380px, max-content));\n    grid-gap: 10px;\n    justify-content: center;\n\n    @media (max-width: 800px) {\n        grid-template-columns: repeat(auto-fit, minmax(320px, max-content));\n    }\n`;\n\nconst IconStyled = styled(Icon)`\n    background-color: rgb(33, 133, 208);\n    color: white;\n`;\n\nconst FooterIcon = styled(Icon)`\n    color: white;\n`;\n\nconst BodyText = styled.p`\n    font-size: ${(props) => props.size || '16px'};\n    color: ${(props) => props.color || 'black'};\n    text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\n`;\n\nconst Spacer = styled.div`\n    width: 100%;\n    height: ${(props) => props.height || 0}px;\n`;\n\nconst FooterStyle = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 50px;\n    background-color: darkslategray;\n    width: 100%;\n    bottom: 0;\n    padding: 0px 10px 0px 10px;\n`;\n\nconst SocialMedia = styled.div`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n`;\n\nconst ServiceCard = ({\n    icon = 'users',\n    header = 'Header',\n    content = 'Content',\n    align,\n}) => {\n    return (\n        <FlexColumn>\n            <IconStyled circular name={icon} size=\"huge\" />\n            <Subheader>{header}</Subheader>\n            <BodyText color=\"gray\" align={align}>\n                {content}\n            </BodyText>\n        </FlexColumn>\n    );\n};\n\nconst InfoCard = ({\n    icon = 'users',\n    header = 'Header',\n    content = 'Content',\n    align,\n}) => {\n    return (\n        <FlexColumn>\n            <Icon name={icon} size=\"big\" />\n            <Subheader>{header}</Subheader>\n            <BodyText color=\"gray\" align={align}>\n                {content}\n            </BodyText>\n        </FlexColumn>\n    );\n};\n\nexport default function LandingPage() {\n    return (\n        <Wrapper>\n            <BaseContent>\n                <ContentContainer>\n                    <SocialMedia>\n                        <div>\n                            <a\n                                href=\"https://discord.gg/Wpej7dQ\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <FooterIcon link name=\"discord\" size=\"big\" />\n                            </a>\n                            <a\n                                href=\"https://www.facebook.com/RGTClubhouse/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <FooterIcon link name=\"facebook\" size=\"big\" />\n                            </a>\n                        </div>\n                    </SocialMedia>\n                    <Spacer height=\"30\" />\n                    <Divider>\n                        <Slogan>\n                            The Clubhouse is open{' '}\n                            <span role=\"img\" aria-label=\"confetti\">\n                                🎉\n                            </span>\n                        </Slogan>\n                        <Subheader color=\"white\">\n                            We are open all week for your CCG needs!{' '}\n                            <em>\n                                (Play space use and events are cancelled until\n                                further notice due to WPN's in-store play\n                                suspension)\n                            </em>\n                        </Subheader>\n                        <FlexRowResponsive>\n                            <Link to=\"/public-inventory\">\n                                <Button>\n                                    <b>Browse cards</b>\n                                </Button>\n                            </Link>\n                        </FlexRowResponsive>\n                        <ImageMask />\n                        <Image />\n                    </Divider>\n\n                    <FlexRow>\n                        <Header>Latest News</Header>\n                    </FlexRow>\n                    <Spacer height=\"30\" />\n                    <Grid>\n                        <Card\n                            imageSrc={kaldheim}\n                            header=\"New product preorders!\"\n                            date=\"01/03/2021\"\n                        >\n                            <p>\n                                Hello everyone, we officially have Kaldheim\n                                preorders up! We have 5 products on the lineup\n                                starting with Draft Boxes at $100, Set Boxes at\n                                $110, Collector Boxes at $219, Bundles at $39,\n                                and the Commander Decks at $19. Hope to see you\n                                all soon!\n                            </p>\n                            <p>\n                                Note: We are limiting each product to 1 per\n                                person.\n                            </p>\n                        </Card>\n                        <Card\n                            imageSrc={zen_meme}\n                            header=\"New product preorders!\"\n                            date=\"09/05/2020\"\n                        >\n                            <p>\n                                Hey everyone! We are excited to announce that we\n                                have begun our Zendikar Rising preorders! Come\n                                on down starting today and lock in your products\n                                of choice. We have the following available:\n                            </p>\n                            <ul>\n                                <li>Regular Booster Box - $100</li>\n                                <li>Collector Booster Box - $209</li>\n                                <li>Set Booster Box - $110</li>\n                                <li>Bundle - $39</li>\n                            </ul>\n\n                            <p>\n                                Hope you're all as excited for the return to the\n                                legendary Zendikar as we are!\n                            </p>\n                        </Card>\n                        <Card\n                            imageSrc={double_masters}\n                            header=\"New product preorders!\"\n                            date=\"06/08/2020\"\n                        >\n                            <p>\n                                <em>\n                                    Note: Preorders for Double Masters are now\n                                    closed.\n                                </em>\n                            </p>\n                            <p>\n                                The time has come! We have had loads of\n                                questions about all the upcoming products, and\n                                we are excited to start taking PRE ORDERS on a\n                                range of upcoming items:\n                            </p>\n                            <ul>\n                                <li>Jump Start $90 per box, Limit 2</li>\n                                <li>Double Masters $249 per box, Limit 2</li>\n                                <li>\n                                    Double Masters VIP $369 per box, No Limit\n                                </li>\n                                <li>Double Master VIP $95 per pack, Limit 1</li>\n                            </ul>\n                        </Card>\n                        <Card\n                            imageSrc={core_2021_collector}\n                            header=\"Collector Booster preorders!\"\n                            date=\"06/02/2020\"\n                        >\n                            <p>\n                                To compound the excitement, We JUST got numbers\n                                on Collector Boosters for Core 2021! We are now\n                                taking pre-orders for those as well! $229 per,\n                                limit 1 box per customer.\n                            </p>\n                        </Card>\n                        <Card\n                            imageSrc={core_2021_draft_booster}\n                            header=\"Core 2021 preorders!\"\n                            date=\"06/02/2020\"\n                        >\n                            <p>\n                                It's already time. Core 2021 is upon us. We are\n                                now taking Booster Box pre-orders! $100 per box,\n                                2 boxes per person limit. Pre-release sign ups\n                                will begin on June 19th!\n                            </p>\n                            <p>\n                                Note: Preorders for draft booster boxes have now\n                                ended. We currently have them for sale at $110\n                                each. Collector Booster preorders will end on\n                                June 3rd.\n                            </p>\n                        </Card>\n                    </Grid>\n\n                    <Spacer height=\"30\" />\n\n                    <Divider>\n                        <Spacer height=\"30\" />\n                        <FlexRow>\n                            <Header>Our Services</Header>\n                        </FlexRow>\n                        <FlexRow>\n                            {/* <Subheader>\n                                We're here for all your CCG needs!\n                            </Subheader> */}\n                        </FlexRow>\n                        <Spacer height=\"30\" />\n                        <Grid>\n                            <ServiceCard\n                                icon=\"box\"\n                                header=\"Large product selection\"\n                                content=\"We stock an extensive selection of singles and CCG supplies just for you! When the deckbuilding itch strikes, turn to us\"\n                                align=\"center\"\n                            />\n                            <ServiceCard\n                                header=\"Inclusive community\"\n                                content=\"We pride ourselves on our friendly atmosphere. Young or seasoned, beginner or advanced, we welcome all players!\"\n                                align=\"center\"\n                            />\n                            <ServiceCard\n                                icon=\"dollar sign\"\n                                header=\"Cash or credit trade-ins\"\n                                content=\"Whether a whole collection or a single card, come on by and have one of our expert managers appraise it using competitive market rates\"\n                                align=\"center\"\n                            />\n                        </Grid>\n                        <ImageMask2 />\n                        <Image2 />\n                    </Divider>\n                    <Spacer height=\"30\" />\n                    <Grid>\n                        <InfoCard\n                            icon=\"clock\"\n                            header=\"Hours\"\n                            content=\"Mon - Fri 12pm to 7pm, Sat - Sun 11am to 7pm\"\n                            align=\"center\"\n                        />\n                        <InfoCard\n                            icon=\"location arrow\"\n                            header=\"Location\"\n                            content=\"13895 SW Farmington Rd, Beaverton, OR 97005\"\n                            align=\"center\"\n                        />\n                        <InfoCard\n                            icon=\"phone\"\n                            header=\"Contact\"\n                            content=\"(503) 268-1449\"\n                        />\n                    </Grid>\n                    <Spacer height=\"30\" />\n                </ContentContainer>\n            </BaseContent>\n            <FooterStyle>\n                <SpanStyle>\n                    <Link to=\"/login\" id=\"login-btn\">\n                        <Label as=\"a\" color=\"black\">\n                            Staff login\n                        </Label>\n                    </Link>\n                </SpanStyle>\n                <SpanStyle>\n                    <BodyText size=\"12px\" color=\"white\">\n                        © 2020 The Clubhouse\n                    </BodyText>\n                </SpanStyle>\n                <SpanStyle>\n                    <BodyText size=\"12px\" color=\"gray\">\n                        Powered by Scryfall\n                    </BodyText>\n                </SpanStyle>\n            </FooterStyle>\n        </Wrapper>\n    );\n}\n","import React, { FC } from 'react';\nimport Header from './Header/Header';\nimport AuthProvider from './context/AuthProvider';\nimport { Switch, Route } from 'react-router-dom';\nimport ManageInventory from './ManageInventory/ManageInventory';\nimport Sale from './NewSale/Sale';\nimport BrowseSales from './BrowseSales/BrowseSales';\nimport PublicInventory from './PublicInventory/PublicInventory';\nimport DeckboxClone from './DeckboxClone/DeckboxClone';\nimport Login from './Login/Login';\nimport Logout from './Logout/Logout';\nimport Receiving from './Receiving/Receiving';\nimport LandingPage from './LandingPage/LandingPage';\nimport styled from 'styled-components';\nimport { SaleProvider } from './context/SaleContext';\nimport { ReceivingProvider } from './context/ReceivingContext';\nimport InventoryProvider from './context/InventoryContext';\n\nconst ContentContainer = styled.div`\n    padding-top: 75px;\n    margin-left: 20px;\n    margin-right: 20px;\n`;\n\nconst BackgroundColor = styled.div`\n    background-color: #f9fafb;\n    min-height: 100vh;\n`;\n\nconst App: FC<{}> = () => {\n    return (\n        <AuthProvider>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage} />\n                <BackgroundColor>\n                    <ContentContainer id=\"content-container\">\n                        <InventoryProvider>\n                            <Route\n                                exact\n                                path=\"/manage-inventory\"\n                                component={ManageInventory}\n                            />\n                        </InventoryProvider>\n                        <SaleProvider>\n                            <Route exact path=\"/new-sale\" component={Sale} />\n                        </SaleProvider>\n                        <Route\n                            exact\n                            path=\"/browse-sales\"\n                            component={BrowseSales}\n                        />\n                        <Route\n                            exact\n                            path=\"/browse-inventory\"\n                            component={DeckboxClone}\n                        />\n                        <Route\n                            exact\n                            path=\"/public-inventory\"\n                            component={PublicInventory}\n                        />\n                        <ReceivingProvider>\n                            <Route\n                                exact\n                                path=\"/receiving\"\n                                component={Receiving}\n                            />\n                        </ReceivingProvider>\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/logout\" component={Logout} />\n                    </ContentContainer>\n                </BackgroundColor>\n            </Switch>\n        </AuthProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}