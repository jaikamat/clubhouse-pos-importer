{"version":3,"sources":["api_resources.js","logos/magic-ball.png","makeAuthHeader.js","SearchBar.js","QohLabels.js","utils/parseQoh.js","createToast.js","CardImage.js","Price.js","MarketPrice.js","utils/ScryfallCard.js","ScryfallCardListItem.js","ScryfallCardList.js","Home.js","BrowseCardItem.js","BrowseCardList.js","SalePriceTotal.js","SaleLineItem.js","CustomerSaleList.js","PrintList.js","SuspendedSale.js","Sale.js","utils/sortSaleList.js","SalesListItem.js","SalesList.js","BrowseSales.js","PublicCardItem.js","PublicCardList.js","PublicInventory.js","DeckboxCloneForm.js","DeckboxCloneRow.js","DeckboxClone.js","AuthProvider.js","Login.js","Logout.js","Receiving/ReceivingSearchItem.js","Receiving/ReceivingSearchList.js","Receiving/ReceivingListItem.js","Receiving/CashReport.js","Receiving/ReceivingListTotals.js","Receiving/printCashReport.js","Receiving/Receiving.js","Reports/Reports.js","Main.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["env","process","REACT_APP_ENVIRONMENT","endpoints","GET_CARDS_BY_TITLE","GET_CARD_QTY_FROM_INVENTORY","FINISH_SALE","ADD_CARD_TO_INVENTORY","GET_INVENTORY_QUERY","GET_SALES_BY_TITLE","GET_SCRYFALL_BULK_BY_TITLE","GET_CARDS_BY_FILTER","GET_SET_NAMES","SUSPEND_SALE","LOGIN","GET_ALL_SALES","SCRYFALL_AUTOCOMPLETE","SCRYFALL_SEARCH","SCRYFALL_ID_SEARCH","module","exports","makeAuthHeader","Authorization","localStorage","getItem","SearchBar","props","useState","isLoading","setIsLoading","results","setResults","handleResultSelect","e","a","result","setTimeout","$","select","handleSearchSelect","title","console","log","Search","onSearchChange","_","debounce","value","length","axios","get","headers","data","formattedResults","map","el","slice","leading","trailing","onResultSelect","loading","placeholder","selectFirstResult","id","onFocus","target","onBlur","QohLabels","inventoryQty","foilQty","nonfoilQty","FOIL_NM","FOIL_LP","FOIL_MP","FOIL_HP","NONFOIL_NM","NONFOIL_LP","NONFOIL_MP","NONFOIL_HP","parseQoh","foilColor","color","nonfoilColor","Fragment","Label","image","Detail","createToast","header","message","duration","toaster","notify","Message","compact","Header","position","style","boxShadow","zIndex","transition","CardImage","state","hovered","mouseOver","setState","mouseOut","this","image_uris","card_faces","hover","Image","src","size","transform","onMouseOver","onMouseOut","normal","React","Component","Price","num","price","Number","toFixed","isNaN","foilStyle","backgroundColor","backgroundImage","MarketPrice","finish","publicView","setPrice","setLoading","useEffect","finishStatus","myPrice","prices","Math","max","tag","Icon","name","InventoryCard","card","_qoh","qoh","quantity","qtyToSell","finishCondition","quantities","cachedOriginal","set","set_name","rarity","nonfoil","foil","colors","type_line","myImage","finishes","key","text","cardConditions","checkCardFinish","nonfoilProp","foilProp","selectedFinish","finishDisabled","ScryfallCardListItem","cardImage","setQuantity","setSelectedFinish","selectedCondition","setSelectedCondition","setFinishDisabled","submitDisable","setSubmitDisable","setInventoryQty","submitLoading","setSubmitLoading","handleInventoryAdd","post","cardInfo","focus","Segment","Item","Group","divided","Content","as","className","fontSize","String","toUpperCase","Description","Form","Field","control","Input","type","label","onChange","val","parseInt","Select","options","disabled","Button","primary","onClick","ScryfallCardList","cards","Home","searchResults","setSearchResults","term","params","ids","scryfallIds","inventoryRes","modeledData","c","modeledDataWithQoh","Divider","icon","createConditionOptions","removeZeroedQuantites","pickBy","p","Object","entries","d","conditionFinish","qty","split","join","createInitialSelectedFinish","keysMapped","keys","k","uniq","indexOf","BrowseCardItem","selectedFinishCondition","selectedFinishConditionQty","quantityToSell","conditionOptions","handleQuantityChange","numVal","handleSelectedFinishCondition","handlePriceChange","handleFocus","property","handleBlur","handleAddToSale","addToSaleList","Dropdown","selection","step","BrowseCardList","SalePriceTotal","saleList","total","reduce","acc","SaleLineItem","deleteLineItem","setHovered","Table","Row","Cell","singleLine","circular","CustomerSaleList","removeFromSaleList","Body","PrintList","printClicked","print","window","saleListCards","display","float","styled","div","ClearMargin","CharLimit","SuspendedSale","restoreSale","deleteSuspendedSale","saleListLength","suspendSale","sales","setSales","saleID","setSaleID","modalOpen","setModalOpen","customerName","setCustomerName","notes","setNotes","setDisabled","suspendBtn","restoreBtn","deleteBtn","loadingBtn","setLoadingBtn","getSales","clearFields","modalTrigger","submitSuspendSale","submitRestoreSale","submitDeleteSale","Modal","trigger","open","Grid","columns","stackable","relaxed","Column","width","substring","TextArea","fluid","s","_id","info","Actions","Sale","setSaleListCards","showModal","setShowModal","submit","setSubmit","searchTerm","setSearchTerm","list","suspendedSale","setSuspendedSale","resetState","response","delete","ops","finalizeSale","sale_data","floated","alignItems","newCard","oldState","modeledCard","idx","findIndex","splice","push","sortedCards","ORDER","helpSort","arrayConst","colorsLength","cardFace","includes","sort","b","localeCompare","sortSaleList","newState","reject","clearing","sub","basic","inverted","SalesListItem","saleData","quantitySold","cardList","pre","curr","moment","createTime","format","SalesList","celled","unstackable","HeaderCell","card_list","BrowseSales","salesList","cardName","Wrapper","InventoryWrapper","InventoryRow","ImageWrapper","PublicCardItem","qohParsed","displayFoil","displayNonfoil","borderRadius","gridStyle","flexWrap","alignContent","height","PublicCardList","initialState","PublicInventory","Subheader","formatDropdownOptions","priceFilterDropdownOptions","finishDropdownOptions","sortByDropdownOptions","sortByDirectionDropdownOptions","sortByColorDropdownOptions","typeLineOptions","setName","priceNum","priceFilter","sortBy","colorsArray","sortByDirection","typeLine","setNames","DeckboxCloneForm","editionDropdownOptions","handleSearchBlur","handleChange","handleDropdownChange","setNameOptions","concatWithBlankOption","concat","widths","search","multiple","defaultValue","labelPosition","handleSubmit","conditionMap","NM","LP","MP","HP","Tooltip","image_uri","posX","posY","left","background","DeckboxCloneRow","mouseInside","mouseX","mouseY","mouseEnter","clientX","offsetLeft","clientY","offsetTop","mouseLeave","mouseMove","inventory","condition","onMouseEnter","onMouseLeave","onMouseMove","cursor","v","DeckboxClone","count","currentPage","numPages","pageArray","cachedFilters","showPages","searchTouched","fetchData","filters","page","ceil","pages","range","handlePage","showLeftPageButtons","showRightPageButtons","Container","Dimmer","active","marginTop","Loader","secondary","striped","colSpan","Menu","Footer","AuthContext","createContext","AuthProvider","loggedIn","setLoggedIn","handleLogin","username","password","toLowerCase","token","setItem","authed","handleLogout","removeItem","Provider","children","btnLoading","Login","handleInputChange","Consumer","login","to","Logout","ReceivingCardItem","cashPrice","setCashPrice","creditPrice","setCreditPrice","marketPrice","setMarketPrice","validateQty","validateTradeTypes","submitDisabled","addToList","ReceivingCardList","TRADE_TYPE","ReceivingListItem","uuid_key","removeFromList","tradeType","activeTradeType","CASH","CREDIT","whiteSpace","CashReport","receivingList","countByPriceAndID","closeCashModal","chain","filter","temp_uuid","groupBy","mapValues","mergedWithQty","uniqBy","tradeQty","totalCashOut","sumBy","ReceivingListTotals","selectAll","commitToInventory","showCashModal","setShowCashModal","submitToInventory","cashTotal","creditTotal","justifyContent","Or","Statistic","Value","divToPrint","document","getElementById","popup","write","innerHTML","close","printCashReport","closeOnDimmerClick","onClose","DefaultPlaceholder","headerText","Receiving","setReceivingList","mergedData","copiedState","remove","previousState","find","stateWithUnremovedProps","removedProps","omit","promises","Promise","all","initialTradeType","times","uuid","forEach","arr","otherType","Reports","sales_data","format_legalities","groupByDay","timeStamp","startOf","dailySalesTotals","dailyAverageSales","rangeBuckets","0","1","2","3","4","5","rarityCounts","forOwn","legalityCounts","standard","nonStandard","qtySold","legalities","formattedDailySalesTotals","Date","getTime","formattedDailyAverageSales","formattedRangeBuckets","formattedRarityCounts","y","formattedLegalities","Highcharts","setOptions","lang","thousandsSep","chart","zoomType","subtitle","credits","enabled","xAxis","yAxis","legend","series","tooltip","valueDecimals","min","categories","plotOptions","bar","dataLabels","plotBackgroundColor","plotBorderWidth","plotShadow","pie","distance","operator","ContentContainer","CovidAlert","Main","exact","path","component","pathname","location","fixed","Link","replace","ballLogo","marginRight","alt","item","withRouter","App","Boolean","hostname","match","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.118a9280.chunk.js","sourcesContent":["// Maps all GCF and Scryfall API endpoints for code re-use\nconst { REACT_APP_ENVIRONMENT } = process.env;\n\n/**\n * Check the environment for dev - if dev, we reach out\n * to all endpoints appended by `_test` instead of production\n */\nconst env = REACT_APP_ENVIRONMENT === 'development' ? '_test' : '';\n\nconst endpoints = {\n    GET_CARDS_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByTitle${env}`,\n    GET_CARD_QTY_FROM_INVENTORY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsFromInventory${env}`,\n    FINISH_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/finishSale${env}`,\n    ADD_CARD_TO_INVENTORY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/addCardToInventory${env}`,\n    GET_INVENTORY_QUERY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/inventorySearchQuery${env}`,\n    GET_SALES_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getSales${env}`,\n    GET_SCRYFALL_BULK_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getScryfallBulkCardsByTitle${env}`,\n    GET_CARDS_BY_FILTER:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByFilter${env}`,\n    GET_SET_NAMES:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByFilter${env}/set_names`,\n    SUSPEND_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/suspendSale${env}`,\n    LOGIN:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getJwt${env}`,\n    GET_ALL_SALES:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getSales${env}/sales`,\n    SCRYFALL_AUTOCOMPLETE: 'https://api.scryfall.com/cards/autocomplete',\n    SCRYFALL_SEARCH: 'https://api.scryfall.com/cards/search',\n    SCRYFALL_ID_SEARCH: 'https://api.scryfall.com/cards/'\n};\n\nmodule.exports = endpoints;\n","module.exports = __webpack_public_path__ + \"static/media/magic-ball.c3fcddd6.png\";","/**\n * This function is a helper for Axios, it yields an object for Axios params\n */\nexport default function makeAuthHeader() {\n    const header = { Authorization: `Bearer ${localStorage.getItem('clubhouse_JWT')}` };\n    return header;\n}","import React, { useState } from 'react';\nimport { Search } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_AUTOCOMPLETE } from './api_resources';\nimport $ from 'jquery';\n\nexport default function SearchBar(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [results, setResults] = useState([]);\n\n    const handleSearchChange = (e, { value }) => { // `value` is the search input string\n        if (value.length < 1) {\n            setIsLoading(false);\n            setResults([]);\n            return;\n        }\n\n        if (value.length < 3) return; // Don't search if only 2 letters in input\n\n        setIsLoading(true);\n\n        setTimeout(async () => {\n            const { data } = await axios.get(\n                `${SCRYFALL_AUTOCOMPLETE}?q=${value}`,\n                { headers: makeAuthHeader() }\n            );\n\n            const formattedResults = data.data.map(el => ({ title: el })).slice(0, 7);\n\n            setResults(formattedResults);\n            setIsLoading(false);\n        }, 100);\n    };\n\n    const handleResultSelect = async (e, { result }) => {\n        // This line is a hacky way to get around the fact that if we just select(), then\n        // when the user manually clicks the first (or any) result in the resultlist, it does not select,\n        // presumably because there is some collision between selecting the resultList element and focusing the input\n        setTimeout(() => $('#searchBar').select(), 10);\n        try {\n            setIsLoading(true);\n            await props.handleSearchSelect(result.title);\n            setIsLoading(false);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <Search\n            onSearchChange={_.debounce(handleSearchChange, 500, { leading: false, trailing: true })}\n            onResultSelect={handleResultSelect}\n            loading={isLoading}\n            results={results}\n            placeholder=\"Search for a card\"\n            selectFirstResult={true}\n            id=\"searchBar\"\n            onFocus={e => e.target.select()}\n            onBlur={props.onBlur} // Used to clear state in the Browse Inventory feature\n        />\n    );\n}\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\nimport parseQoh from './utils/parseQoh';\n\n// This component parses the `qoh` object from mongo into something\n// more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function QohLabels({ inventoryQty }) {\n    const [foilQty, nonfoilQty] = parseQoh(inventoryQty);\n\n    const foilColor = {};\n    if (foilQty > 0) { foilColor.color = 'blue'; }\n\n    const nonfoilColor = {};\n    if (nonfoilQty > 0) { nonfoilColor.color = 'blue'; }\n\n    return (\n        <React.Fragment>\n            <Label {...foilColor} image>\n                Foil\n        <Label.Detail>{foilQty}</Label.Detail>\n            </Label>\n            <Label {...nonfoilColor} image>\n                Nonfoil\n        <Label.Detail>{nonfoilQty}</Label.Detail>\n            </Label>\n        </React.Fragment>\n    );\n}\n","// This function parses the `qoh` object from mongo into something more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function parseQoh(inventoryQty) {\n    let foilQty = 0;\n    let nonfoilQty = 0;\n\n    if (inventoryQty) { // Check to see if props exist\n        foilQty =\n            (inventoryQty.FOIL_NM || 0) +\n            (inventoryQty.FOIL_LP || 0) +\n            (inventoryQty.FOIL_MP || 0) +\n            (inventoryQty.FOIL_HP || 0);\n\n        nonfoilQty =\n            (inventoryQty.NONFOIL_NM || 0) +\n            (inventoryQty.NONFOIL_LP || 0) +\n            (inventoryQty.NONFOIL_MP || 0) +\n            (inventoryQty.NONFOIL_HP || 0);\n    }\n\n    return [foilQty, nonfoilQty];\n}","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport toaster from 'toasted-notes';\n\nconst createToast = ({ color, header, message, duration = 2000 }) => {\n    return toaster.notify(\n        () => (\n            <Message color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </Message>\n        ),\n        {\n            position: 'bottom-right',\n            duration: duration\n        }\n    );\n}\n\nexport default createToast;","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nconst style = {\n    boxShadow: '2px 2px 5px 0 rgba(0,0,0,.25)',\n    zIndex: '10',\n    transition: 'all .2s ease-in-out'\n}\n\nclass CardImage extends React.Component {\n    state = { hovered: false };\n\n    mouseOver = () => { this.setState({ hovered: true }) };\n\n    mouseOut = () => { this.setState({ hovered: false }) };\n\n    render() {\n        const { image_uris, card_faces, image, hover = true } = this.props // default prop `hover` must be true\n\n        if (image) {\n            return <Image\n                src={image}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        }\n\n        // TODO: This is obsolete logic that should be refactored out once all components ingest the ScryfallCard class,\n        // which manages the correct image URL itself\n        try {\n            // If normal prop `image_uris.normal` doesn't exist, move to catch block for flip card faces\n            return <Image\n                src={image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        } catch (e) {\n            return <Image src={\n                card_faces[0].image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        }\n    }\n};\n\nexport default CardImage;\n","import React from 'react';\n\nconst Price = ({ num }) => {\n    const price = Number(num).toFixed(2);\n    if (isNaN(price)) return <span>$0.00</span>;\n    return <span>${price}</span>;\n};\n\nexport default Price;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Price from './Price';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_ID_SEARCH } from './api_resources';\nimport { Label, Icon } from 'semantic-ui-react';\n\nconst foilStyle = {\n    backgroundColor: '#ffcfdf',\n    backgroundImage: 'linear-gradient(90deg, #ffcfdf 0%, #b0f3f1 74%)'\n}\n\n// publicView flags whether this component is on a view that faces customers. Employees should see the raw price\nexport default function MarketPrice({ id, finish, publicView = false }) {\n    const [price, setPrice] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async function fetchData() {\n            setLoading(true);\n            const { data } = await axios.get(`${SCRYFALL_ID_SEARCH}${id}`, { headers: makeAuthHeader() });\n            let finishStatus = 'usd';\n            let myPrice;\n\n            if (finish === 'FOIL') finishStatus += '_foil';\n\n            // Public-facing views should show the minimum price for any card as 50 cents\n            myPrice = Number(data.prices[finishStatus]);\n\n            if (publicView) {\n                setPrice(Math.max(0.5, myPrice))\n            } else {\n                setPrice(myPrice);\n            }\n\n            setLoading(false);\n        })();\n    }, [id, finish, publicView]);\n\n    return (\n        <Label tag style={finish === 'FOIL' ? foilStyle : null}>\n            {loading ? <Icon loading name='spinner' /> : <span>Est. {price ? <Price num={price} /> : 'not found'}</span>}\n        </Label>\n    );\n}\n","\n/**\n * This class wraps the Scryfall API request data and models it to something we can control.\n * Also acts as a safeguard for any future updates to Scryfall's API data model and makes\n * the code easier to maintain and debug.\n */\nexport class ScryfallCard {\n    constructor(card) {\n        this.cachedOriginal = card.cachedOriginal ? card.cachedOriginal : card; // Preserve the original data\n        this.id = card.id;\n        this.name = card.name;\n        this.set = card.set;\n        this.set_name = card.set_name;\n        this.rarity = card.rarity;\n        this.image_uris = card.image_uris ? card.image_uris : null;\n        this.card_faces = card.card_faces ? card.card_faces : null;\n        this.nonfoil = card.nonfoil;\n        this.foil = card.foil;\n        this.colors = card.colors;\n        this.type_line = card.type_line;\n    }\n\n    get cardImage() {\n        let myImage;\n\n        try {\n            // If normal prop doesn't exist, move to catch block for flip card faces\n            myImage = this.image_uris.normal;\n        } catch (e) {\n            myImage = this.card_faces[0].image_uris.normal;\n        }\n\n        return myImage;\n    }\n}\n\n/**\n * Extends the Scryfall card object and adds properties we know exist in our database.\n * Models the data and makes writing cards to Mongo a more confident process.\n */\nexport class InventoryCard extends ScryfallCard {\n    constructor(card) {\n        super(card);\n        this._qoh = card.qoh ? card.qoh : {};\n        // `quantity` and `qtyToSell` are redundant transaction props, unify them down the line\n        this.quantity = card.quantity ? card.quantity : null;\n        this.qtyToSell = card.qtyToSell ? card.qtyToSell : null;\n        this.finishCondition = card.finishCondition ? card.finishCondition : null;\n        this.price = card.price >= 0 ? card.price : null;\n    }\n\n    get qohParsed() {\n        const foilQty =\n            (this._qoh.FOIL_NM || 0) +\n            (this._qoh.FOIL_LP || 0) +\n            (this._qoh.FOIL_MP || 0) +\n            (this._qoh.FOIL_HP || 0);\n\n        const nonfoilQty =\n            (this._qoh.NONFOIL_NM || 0) +\n            (this._qoh.NONFOIL_LP || 0) +\n            (this._qoh.NONFOIL_MP || 0) +\n            (this._qoh.NONFOIL_HP || 0);\n\n        return [foilQty, nonfoilQty];\n    }\n\n    get qoh() {\n        return this._qoh;\n    }\n\n    set qoh(quantities) {\n        this._qoh = quantities ? quantities : {};\n    }\n}\n","import React, { useState } from 'react';\nimport { Segment, Input, Button, Form, Select, Label, Item } from 'semantic-ui-react';\nimport axios from 'axios';\nimport QohLabels from './QohLabels';\nimport createToast from './createToast';\nimport CardImage from './CardImage';\nimport makeAuthHeader from './makeAuthHeader';\nimport MarketPrice from './MarketPrice'\nimport { ADD_CARD_TO_INVENTORY } from './api_resources';\nimport $ from 'jquery';\nimport { InventoryCard } from './utils/ScryfallCard';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil`\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nfunction checkCardFinish(nonfoilProp, foilProp) {\n    if (!nonfoilProp && foilProp) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoilProp && !foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoilProp && foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default function ScryfallCardListItem({ qoh, foil, nonfoil, name, set_name, set, rarity, id, cachedOriginal, cardImage }) {\n    const [quantity, setQuantity] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(checkCardFinish(nonfoil, foil).selectedFinish);\n    const [selectedCondition, setSelectedCondition] = useState('NM');\n    const [finishDisabled, setFinishDisabled] = useState(checkCardFinish(nonfoil, foil).finishDisabled);\n    const [submitDisable, setSubmitDisable] = useState(false);\n    const [inventoryQty, setInventoryQty] = useState(qoh);\n    const [submitLoading, setSubmitLoading] = useState(false);\n\n    const handleFinishChange = (e, { value }) => setSelectedFinish(value);\n\n    const handleConditionChange = (e, { value }) => setSelectedCondition(value);\n\n    const handleQuantityChange = (e, { value }) => {\n        const val = parseInt(value);\n        const quantity = isNaN(val) ? '' : val; // Check for NaN\n        setQuantity(quantity);\n    };\n\n    // Remove input placeholder when user tries to enter a number (to reduce user error)\n    const handleFocus = () => {\n        if (quantity === 0) setQuantity('');\n    }\n\n    // Restore input placeholder when user blurs field\n    const handleBlur = () => {\n        if (quantity === '') setQuantity(0);\n    }\n\n    const handleInventoryAdd = async (e, { value }) => {\n        // This is the identifier for quantities of different finishes/conditions in the db\n        const finishCondition = `${selectedFinish}_${selectedCondition}`;\n\n        try {\n            setSubmitDisable(true);\n            setSubmitLoading(true);\n\n            const { data } = await axios.post(ADD_CARD_TO_INVENTORY, {\n                quantity: quantity,\n                finishCondition: finishCondition,\n                cardInfo: { ...cachedOriginal }, // Persist the original data to maintain backwards compatibility\n            }, { headers: makeAuthHeader() });\n\n            createToast({\n                color: 'green',\n                header: `${quantity}x ${name} ${quantity > 0 ? 'added' : 'removed'}!`,\n                duration: 2000\n            });\n\n            setQuantity(0);\n            setSelectedFinish(checkCardFinish(nonfoil, foil).selectedFinish);\n            setSelectedCondition('NM');\n            setFinishDisabled(checkCardFinish(nonfoil, foil).finishDisabled);\n            setSubmitDisable(false);\n            setSubmitLoading(false);\n            setInventoryQty(new InventoryCard(data).qoh);\n\n            // Highlight the input after successful card add\n            $('#searchBar').focus().select();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"tiny\">\n                        <CardImage image={cardImage} />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as='h3'>\n                            {name}\n                            {' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                            <QohLabels inventoryQty={inventoryQty} />\n                            {' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group>\n                                    <Form.Field\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity\"\n                                        value={quantity}\n                                        onChange={handleQuantityChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                    />\n                                    <Form.Field\n                                        label=\"Finish\"\n                                        control={Select}\n                                        value={selectedFinish}\n                                        options={finishes}\n                                        disabled={finishDisabled}\n                                        onChange={handleFinishChange}\n                                    />\n                                    <Form.Field\n                                        label=\"Condition\"\n                                        control={Select}\n                                        value={selectedCondition}\n                                        options={cardConditions}\n                                        onChange={handleConditionChange}\n                                    />\n                                    <Form.Button\n                                        label=\"Add to Inventory?\"\n                                        control={Button}\n                                        primary\n                                        disabled={\n                                            quantity === 0 ||\n                                            quantity === '' ||\n                                            submitDisable\n                                        }\n                                        onClick={handleInventoryAdd}\n                                        loading={submitLoading}\n                                    >\n                                        Submit\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React from 'react';\nimport ScryfallCardListItem from './ScryfallCardListItem';\n\nexport default function ScryfallCardList(props) {\n    return props.cards.map(card => {\n        return <ScryfallCardListItem\n            key={card.id}\n            {...card}\n            cardImage={card.cardImage}\n            qoh={card.qoh}\n        />\n    });\n}\n","import React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport ScryfallCardList from './ScryfallCardList';\nimport { Segment, Header, Icon, Divider } from 'semantic-ui-react'\nimport { GET_CARD_QTY_FROM_INVENTORY, GET_SCRYFALL_BULK_BY_TITLE } from './api_resources';\nimport { InventoryCard } from './utils/ScryfallCard';\n\nexport default function Home() {\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(\n                GET_SCRYFALL_BULK_BY_TITLE, {\n                params: { title: term },\n                headers: makeAuthHeader()\n            });\n\n            const ids = data.map(el => el.id);\n\n            // Fetches only the in-stock qty of a card tied to an `id`\n            const inventoryRes = await axios.post(\n                GET_CARD_QTY_FROM_INVENTORY,\n                { scryfallIds: ids },\n                { headers: makeAuthHeader() }\n            );\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            // Attached the fetched QOH to the retreived cards\n            const modeledDataWithQoh = modeledData.map(card => {\n                card.qoh = inventoryRes.data[card.id];\n                return card;\n            })\n\n            setSearchResults(modeledDataWithQoh);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <SearchBar handleSearchSelect={handleSearchSelect} />\n\n            <Header as=\"h2\">Manage Inventory</Header>\n            <Divider />\n\n            {!searchResults.length &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        <em>\"Searching the future for answers often leads to further questions.\"</em>\n                    </Header>\n                </Segment>}\n\n            <ScryfallCardList cards={searchResults} />\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport {\n    Segment,\n    Label,\n    Form,\n    Input,\n    Dropdown,\n    Button,\n    Item\n} from 'semantic-ui-react';\nimport CardImage from './CardImage';\nimport MarketPrice from './MarketPrice';\nimport QohLabels from './QohLabels';\nimport $ from 'jquery';\nimport _ from 'lodash';\n\n/**\n * Creates a list of conditions for the dropdown menu from the `qoh`\n * Note: Is this not needed if we default select initially?\n * @param {Object} qoh\n * @param {String} id\n */\nfunction createConditionOptions(qoh, id) {\n    const removeZeroedQuantites = _.pickBy(qoh, p => p > 0); // Quantites of zero not included\n\n    return Object.entries(removeZeroedQuantites).map(d => {\n        const [conditionFinish, qty] = d;\n\n        return {\n            text: `${conditionFinish.split('_').join(' | ')} | Qty: ${qty}`,\n            value: conditionFinish,\n            key: `${id}${conditionFinish}`\n        };\n    });\n}\n\n/**\n * Creates initial selectedFinish value, used for the MarketPrice component\n * Returns FOIL or NONFOIL depending on what's in current inventory (qoh)\n * @param {Object} qoh\n */\nfunction createInitialSelectedFinish(qoh) {\n    const removeZeroedQuantites = _.pickBy(qoh, p => p > 0);\n    // Isolate only the FOIL or NONFOIL values with mapping\n    const keysMapped = _.keys(removeZeroedQuantites).map(k => k.split('_')[0]);\n    const uniqueValues = _.uniq(keysMapped);\n    return uniqueValues.indexOf('NONFOIL') > -1 ? 'NONFOIL' : 'FOIL';\n}\n\nexport default class BrowseCardItem extends React.Component {\n    state = {\n        selectedFinishCondition: '',\n        selectedFinishConditionQty: 0,\n        quantityToSell: 0,\n        price: 0,\n        // Excludes condition ex. `FOIL` rather than `FOIL_NM`. Initialize at nonfoil unless only foil printing\n        selectedFinish: createInitialSelectedFinish(this.props.qoh),\n        conditionOptions: createConditionOptions(this.props.qoh, this.props.id)\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const { selectedFinishConditionQty } = this.state;\n        let numVal = parseInt(value);\n\n        if (numVal > selectedFinishConditionQty) {\n            numVal = selectedFinishConditionQty;\n        }\n\n        if (isNaN((numVal)) || numVal < 0) { numVal = 0; }\n\n        this.setState({ quantityToSell: numVal });\n    };\n\n    handleSelectedFinishCondition = (e, { value }) => {\n        this.setState({\n            selectedFinishCondition: value,\n            selectedFinishConditionQty: this.props.qoh[value],\n            selectedFinish: value.split('_')[0] // Change selectedFinish after user selection\n        });\n    };\n\n    handlePriceChange = (e, { value }) => {\n        let numVal = Number(value);\n        if (isNaN((numVal)) || numVal < 0) { numVal = 0; }\n        this.setState({ price: numVal });\n    };\n\n    // Remove input placeholder when user tries to enter a number (to reduce user error)\n    handleFocus = (property) => {\n        if (this.state[property] === 0) {\n            this.setState({ [property]: '' })\n        }\n    }\n\n    // Restore input placeholder when user blurs field\n    handleBlur = (property) => {\n        if (this.state[property] === '') {\n            this.setState({ [property]: 0 })\n        }\n    }\n\n    handleAddToSale = () => {\n        const { selectedFinishCondition, quantityToSell, price } = this.state;\n        const { qoh, id } = this.props;\n\n        this.props.addToSaleList(\n            { ...this.props },\n            selectedFinishCondition,\n            quantityToSell,\n            price\n        );\n\n        // Reset state\n        this.setState({\n            selectedFinishCondition: '',\n            selectedFinishConditionQty: 0,\n            quantityToSell: 0,\n            price: 0,\n            conditionOptions: createConditionOptions(qoh, id),\n            selectedFinish: createInitialSelectedFinish(qoh)\n        });\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    render() {\n        const {\n            name,\n            image_uris,\n            set,\n            set_name,\n            rarity,\n            qoh,\n            id,\n            card_faces\n        } = this.props;\n\n        const {\n            selectedFinishCondition,\n            selectedFinishConditionQty,\n            selectedFinish,\n            conditionOptions,\n            quantityToSell,\n            price\n        } = this.state;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as=\"h3\">\n                                {name}{' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohLabels inventoryQty={qoh} />\n                                {' '}\n                                <MarketPrice id={id} finish={selectedFinish} />\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Dropdown}\n                                            selection\n                                            placeholder=\"Select inventory\"\n                                            options={conditionOptions}\n                                            value={selectedFinishCondition}\n                                            label=\"Select finish/condition\"\n                                            onChange={this.handleSelectedFinishCondition}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity to sell\"\n                                            value={quantityToSell}\n                                            onChange={this.handleQuantityChange}\n                                            disabled={!selectedFinishConditionQty}\n                                            onFocus={() => this.handleFocus('quantityToSell')}\n                                            onBlur={() => this.handleBlur('quantityToSell')}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Price\"\n                                            value={price}\n                                            onChange={this.handlePriceChange}\n                                            disabled={!selectedFinishConditionQty}\n                                            onFocus={() => this.handleFocus('price')}\n                                            onBlur={() => this.handleBlur('price')}\n                                            step={0.5}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to sale?\"\n                                            control={Button}\n                                            primary\n                                            onClick={this.handleAddToSale}\n                                            disabled={!quantityToSell}\n                                        >\n                                            Sell\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport BrowseCardItem from './BrowseCardItem';\n\nexport default function BrowseCardList(props) {\n    const { cards, addToSaleList } = props;\n\n    return cards.map(card => {\n        return (\n            <BrowseCardItem\n                key={card.id}\n                {...card}\n                qoh={card.qoh}\n                addToSaleList={addToSaleList}\n            />\n        );\n    });\n}\n","import React from 'react';\nimport Price from './Price';\n\nconst SalePriceTotal = ({ saleList }) => {\n    const total = saleList.length\n        ? saleList.reduce(\n              (acc, val) => acc + parseInt(val.qtyToSell) * Number(val.price),\n              0\n          )\n        : 0;\n\n    return <Price num={total} />;\n};\n\nexport default SalePriceTotal;\n","import React, { useState } from 'react';\nimport { Button, Label, Table } from 'semantic-ui-react';\nimport Price from './Price';\n\nexport default function SaleLineItem(props) {\n    const {\n        name,\n        set,\n        finishCondition,\n        qtyToSell,\n        price,\n        rarity,\n        deleteLineItem,\n        id\n    } = props;\n\n    const [hovered, setHovered] = useState(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell><h4>{name}</h4></Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                {qtyToSell}x @ <Price num={price} /> | {finishCondition}\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => deleteLineItem(id, finishCondition)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n","import React from 'react';\nimport SaleLineItem from './SaleLineItem';\nimport { Table } from 'semantic-ui-react';\n\nconst CustomerSaleList = ({ saleList, removeFromSaleList }) => {\n    return <Table>\n        <Table.Body>\n            {saleList.map(card => {\n                return <SaleLineItem\n                    {...card}\n                    key={`${card.id}${card.finishCondition}${card.qtyToSell}`}\n                    deleteLineItem={removeFromSaleList}\n                />\n            })}\n        </Table.Body>\n    </Table>\n\n};\n\nexport default CustomerSaleList;","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport Price from './Price';\nimport './PrintList.css';\nimport SalePriceTotal from './SalePriceTotal';\n\nconst Row = ({ id, name, qtyToSell, finishCondition, set_name, price }) => {\n    return <li key={id}>\n        <b>{name} | x{qtyToSell} | {finishCondition} | {set_name} | <Price num={price} /></b>\n    </li>\n}\n\nexport default class PrintList extends React.Component {\n    state = { printClicked: false }\n\n    print = () => {\n        this.setState({ printClicked: true }, () => {\n            window.print();\n            this.setState({ printClicked: false })\n        });\n    }\n\n    render() {\n        const { saleListCards } = this.props;\n        const { printClicked } = this.state;\n\n        if (saleListCards.length > 0) { // Ensure print is hidden if no cards in list\n            return (\n                <React.Fragment>\n                    <Button style={{ display: 'inline-block', float: 'right' }} onClick={this.print} icon>\n                        <Icon name=\"print\" />\n                    </Button>\n\n                    <div id=\"printme\" style={{ display: printClicked ? 'inline-block' : 'none' }}>\n                        <ul>{saleListCards.map(c => Row(c))}</ul>\n                        <span><b>Subtotal: <SalePriceTotal saleList={saleListCards} /></b></span>\n                    </div>\n                </React.Fragment >\n            )\n        } else {\n            return null;\n        }\n    }\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SUSPEND_SALE } from './api_resources';\nimport { Modal, Button, Grid, Form, Message } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst Divider = styled.div`\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n    height: 100%;\n`;\n\nconst ClearMargin = styled.div`\n    margin-top: 0px;\n    margin-bottom: 0px;\n`;\n\nconst CharLimit = styled.p`\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.2);\n    float: right;\n`;\n\nexport default function SuspendedSale({ restoreSale, deleteSuspendedSale, saleListLength, suspendSale, id }) {\n    const [sales, setSales] = useState([]);\n    const [saleID, setSaleID] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [customerName, setCustomerName] = useState('');\n    const [notes, setNotes] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const [loadingBtn, setLoadingBtn] = useState({\n        suspendBtn: false,\n        restoreBtn: false,\n        deleteBtn: false\n    });\n\n    const getSales = async () => {\n        const { data } = await axios.get(SUSPEND_SALE);\n        setSales(data);\n    }\n\n    const clearFields = () => {\n        setCustomerName('');\n        setNotes('')\n        setSaleID('');\n    }\n\n    // Get the previously suspended sales on mount and parent state (_id) change\n    useEffect(() => { getSales(); }, [id]); // If the parent-level suspended-sale _id changes, we fetch again\n\n    const modalTrigger = <Button\n        style={{ display: 'inline-block', float: 'right' }}\n        onClick={() => setModalOpen(true)}\n        icon=\"ellipsis horizontal\" />\n\n    const submitSuspendSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ suspendBtn: true });\n        await suspendSale({ customerName, notes });\n        setModalOpen(false); // Close the modal to avoid \"flicker\" when state re-renders\n        await getSales(); // Parent _id does not change, re-fetch sales\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ suspendBtn: false });\n    }\n\n    const submitRestoreSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ restoreBtn: true });\n        await restoreSale(saleID);\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ restoreBtn: false });\n    }\n\n    const submitDeleteSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ deleteBtn: true });\n        await deleteSuspendedSale();\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ deleteBtn: false });\n    }\n\n    return <React.Fragment>\n        <Modal trigger={modalTrigger} open={modalOpen}>\n            <Modal.Header>Sales menu</Modal.Header>\n            <Modal.Content>\n                <Grid columns={2} stackable relaxed=\"very\">\n                    {saleListLength > 0 && <React.Fragment>\n                        <Grid.Column width=\"7\">\n                            <h3>Suspend Sale</h3>\n                            <Form>\n                                <ClearMargin>\n                                    <Form.Input\n                                        label=\"Customer Name\"\n                                        placeholder=\"Jace, the Mind Sculptor\"\n                                        value={customerName}\n                                        onChange={(e, { value }) => setCustomerName(value.substring(0, 50))} />\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <CharLimit>{customerName.length}/50</CharLimit>\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <Form.TextArea\n                                        label=\"Notes\"\n                                        placeholder=\"Sometimes, I forget things...\"\n                                        value={notes}\n                                        onChange={(e, { value }) => setNotes(value.substring(0, 150))} />\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <CharLimit>{notes.length}/150</CharLimit>\n                                </ClearMargin>\n                                <Form.Button primary disabled={disabled || !customerName} loading={loadingBtn.suspendBtn} onClick={submitSuspendSale}>Suspend Sale</Form.Button>\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column width=\"1\"><Divider /></Grid.Column>\n                    </React.Fragment>}\n                    <Grid.Column width=\"7\">\n                        <h3>Restore Sale</h3>\n                        {sales.length > 0 && <React.Fragment>\n                            <Form>\n                                <Form.Select\n                                    fluid\n                                    label=\"Previously suspended sales\"\n                                    options={sales.map(s => {\n                                        return {\n                                            key: s._id,\n                                            text: s.name,\n                                            value: s._id\n                                        }\n                                    })}\n                                    placeholder=\"Select a sale\"\n                                    onChange={(e, { value }) => setSaleID(value)}\n                                />\n                                <Form.Button primary disabled={disabled || !saleID} loading={loadingBtn.restoreBtn} onClick={submitRestoreSale}>Restore Sale</Form.Button>\n                            </Form>\n                        </React.Fragment>}\n                        {sales.length === 0 && <Message info>\n                            <Message.Header>No sales</Message.Header>\n                            Suspend a sale first\n                        </Message>}\n                    </Grid.Column>\n                </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n                {!!id && <Button color=\"red\" disabled={disabled} loading={loadingBtn.deleteBtn} onClick={submitDeleteSale}>Delete current Sale</Button>}\n                <Button primary disabled={disabled} onClick={() => setModalOpen(false)}>Cancel</Button>\n            </Modal.Actions>\n        </Modal>\n    </React.Fragment >\n}","import React, { useState } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { Grid, Segment, Header, Button, Modal, Icon, Divider } from 'semantic-ui-react';\nimport { GET_CARDS_BY_TITLE, FINISH_SALE, SUSPEND_SALE } from './api_resources';\nimport SearchBar from './SearchBar';\nimport BrowseCardList from './BrowseCardList';\nimport SalePriceTotal from './SalePriceTotal';\nimport CustomerSaleList from './CustomerSaleList';\nimport PrintList from './PrintList';\nimport makeAuthHeader from './makeAuthHeader';\nimport createToast from './createToast';\nimport SuspendedSale from './SuspendedSale';\nimport sortSaleList from './utils/sortSaleList';\nimport { InventoryCard } from './utils/ScryfallCard';\n\nexport default function Sale() {\n    const [searchResults, setSearchResults] = useState([]);\n    const [saleListCards, setSaleListCards] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [submit, setSubmit] = useState({ loading: false, disabled: false });\n    const [searchTerm, setSearchTerm] = useState('');\n    const [suspendedSale, setSuspendedSale] = useState({\n        _id: '',\n        name: '',\n        notes: '',\n        list: []\n    });\n\n    const resetState = () => {\n        setSearchResults([]);\n        setSaleListCards([]);\n        setShowModal(false);\n        setSubmit({ loading: false, disabled: false });\n        setSearchTerm('');\n        setSuspendedSale({\n            _id: '',\n            name: '',\n            notes: '',\n            list: []\n        })\n    };\n\n    const handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term },\n                headers: makeAuthHeader()\n            });\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            setSearchResults(modeledData);\n            setSearchTerm(term);\n\n            if (data.length === 0) { $('#searchBar').focus().select() }\n        } catch (e) {\n            console.log(e.response);\n        }\n    };\n\n    /**\n     * Adds product to the sale list\n     */\n    const addToSaleList = (card, finishCondition, qtyToSell, price) => {\n        const newCard = { ...card, finishCondition, qtyToSell, price };\n        const oldState = [...saleListCards];\n        const modeledCard = new InventoryCard(newCard);\n\n        // Need to make sure same ID's with differing conditions are separate line-items\n        const idx = oldState.findIndex(el => {\n            return (\n                el.id === newCard.id && el.finishCondition === finishCondition\n            );\n        });\n\n        if (idx !== -1) {\n            oldState.splice(idx, 1, modeledCard);\n        } else {\n            oldState.push(modeledCard);\n        }\n\n        // Sorting the saleList cards here, on add\n        const sortedCards = sortSaleList(oldState);\n\n        setSaleListCards(sortedCards);\n    };\n\n    /**\n     * Removes product from the sale list (this function is passed to the sale line items through props)\n     */\n    const removeFromSaleList = (id, finishCondition) => {\n        const newState = _.reject([...saleListCards], el => {\n            return el.id === id && el.finishCondition === finishCondition;\n        });\n\n        setSaleListCards(newState);\n    };\n\n    /**\n     * Restores a sale (assigns a saleList to state) from a suspended sale from the db\n     */\n    const restoreSale = async (id) => {\n        try {\n            const { data } = await axios.get(`${SUSPEND_SALE}/${id}`);\n            const modeledData = data.list.map(c => new InventoryCard(c));\n\n            setSaleListCards(modeledData);\n            setSuspendedSale(data);\n\n            createToast({ color: 'green', header: `You are viewing ${data.name}'s sale` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    }\n\n    /**\n     * Suspends a sale (persists it to mongo) via the SuspendedSale component and API\n     */\n    const suspendSale = async ({ customerName, notes }) => {\n        const { _id } = suspendedSale;\n\n        try {\n            if (!!_id) await axios.delete(`${SUSPEND_SALE}/${_id}`); // If we're suspended, delete the previous to replace\n\n            const { data } = await axios.post(SUSPEND_SALE, {\n                customerName: customerName,\n                notes: notes,\n                saleList: saleListCards\n            })\n\n            resetState();\n\n            createToast({ color: 'green', header: `${data.ops[0].name}'s sale was suspended` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error`, message: `${e.response.data}` });\n        }\n    }\n\n    const deleteSuspendedSale = async () => {\n        try {\n            const { _id, name } = suspendedSale;\n            await axios.delete(`${SUSPEND_SALE}/${_id}`);\n\n            resetState();\n\n            createToast({ color: 'green', header: `${name}'s sale was deleted` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    }\n\n    /**\n     * Extracts the saleList state and uses it to complete sale\n     */\n    const finalizeSale = async () => {\n        const { _id } = suspendedSale;\n\n        try {\n            setSubmit({ loading: true, disabled: true });\n\n            // Must delete currently suspended sale to faithfully restore inventory prior to sale\n            if (!!_id) await axios.delete(`${SUSPEND_SALE}/${_id}`);\n\n            const { data } = await axios.post(FINISH_SALE, {\n                cards: saleListCards.map(card => {\n                    // Reconstruct the original object received from Scryfall to preserve backwards-compatibility in mongo\n                    const { cachedOriginal, qtyToSell, finishCondition, price } = card;\n                    return { ...cachedOriginal, qtyToSell, finishCondition, price };\n                })\n            }, { headers: makeAuthHeader() });\n\n            const saleID = data.sale_data.Sale.saleID;\n\n            createToast({\n                color: 'green',\n                header: 'Sale created in Lightspeed!',\n                message: `The id number is #${saleID}`,\n            });\n\n            resetState();\n        } catch (e) {\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Sale was not created`,\n            });\n\n            resetState();\n            console.log(e.response);\n        }\n    };\n\n    // Creates text to notify the user of zero-result searches\n    const searchNotification = () => {\n        if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n            return <p>Zero results for <em>{searchTerm}</em></p>\n        }\n        return <p>Search for inventory to sell</p>; // Default text before search\n    }\n\n    const modalTrigger = <Button floated=\"right\" primary\n        onClick={() => setShowModal(true)}>\n        Finalize sale\n        </Button>\n\n    return (\n        <React.Fragment>\n            <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                <SearchBar handleSearchSelect={handleResultSelect} />\n            </Grid.Row>\n            <br />\n            <Grid stackable={true}>\n                <Grid.Row>\n                    <Grid.Column width=\"11\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Inventory</Header>\n                        <Divider />\n\n                        {!searchResults.length &&\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"search\" />\n                                    <span>{searchNotification()}</span>\n                                </Header>\n                            </Segment>}\n\n                        <BrowseCardList\n                            cards={searchResults}\n                            addToSaleList={addToSaleList}\n                        />\n                    </Grid.Column>\n                    <Grid.Column width=\"5\">\n                        <Header as=\"h2\" style={{ display: 'inline-block' }}>\n                            {suspendedSale.name === '' ? 'Sale Items' : `${suspendedSale.name}'s Items`}\n                        </Header>\n\n                        <SuspendedSale\n                            restoreSale={restoreSale}\n                            suspendSale={suspendSale}\n                            saleListLength={saleListCards.length}\n                            deleteSuspendedSale={deleteSuspendedSale}\n                            id={suspendedSale._id}\n                        />\n                        <PrintList saleListCards={saleListCards} />\n\n                        <Divider />\n\n                        {saleListCards.length === 0 &&\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"plus\" />\n                                    View and manage customer sale list here\n                                </Header>\n                            </Segment>}\n\n                        {saleListCards.length > 0 && <React.Fragment>\n                            <CustomerSaleList\n                                removeFromSaleList={removeFromSaleList}\n                                saleList={saleListCards}\n                            />\n                        </React.Fragment>}\n\n                        {saleListCards.length > 0 && (\n                            <Segment clearing>\n                                <Header floated=\"left\">\n                                    <Header sub>Subtotal</Header>\n                                    <SalePriceTotal\n                                        saleList={saleListCards}\n                                    />\n                                </Header>\n                                <Modal\n                                    basic\n                                    open={showModal}\n                                    trigger={modalTrigger}>\n                                    <Modal.Content>\n                                        <Header inverted as=\"h2\">\n                                            Finalize this sale?\n                                            </Header>\n                                        <p>\n                                            Click 'Yes' to create a sale\n                                            in Lightspeed. Ensure that\n                                            you have all cards pulled and double-checked\n                                            the customer list. Undoing this action will require manual data entry!\n                                            </p>\n                                    </Modal.Content>\n                                    <Modal.Actions>\n                                        <Button\n                                            basic\n                                            color=\"red\"\n                                            inverted\n                                            onClick={() => setShowModal(false)}>\n                                            <Icon name=\"remove\" /> No\n                                            </Button>\n                                        <Button\n                                            color=\"green\"\n                                            inverted\n                                            onClick={finalizeSale}\n                                            loading={submit.loading}\n                                            disabled={submit.disabled}>\n                                            <Icon name=\"checkmark\" /> Yes\n                                            </Button>\n                                    </Modal.Actions>\n                                </Modal>\n                            </Segment>)}\n                    </Grid.Column>\n                </Grid.Row >\n            </Grid >\n        </React.Fragment >\n    );\n}\n","/**\n * Takes in an unordered group of cards and sorts them according to The Clubhouse's specs:\n * WUBRG, then multicolor, then colorless, then land, alphabetically within each color/category\n */\nexport default function sortSaleList(cards) {\n    const ORDER = ['W', 'U', 'B', 'R', 'G', 'MULTI', 'COLORLESS', 'LAND'];\n\n    /**\n     * Main helper function that manages sort order\n     * @param {Object} card\n     */\n    function helpSort(card) {\n        let arrayConst = null;\n\n        let colorsLength = null;\n        let cardFace = null;\n\n        try {\n            // If colors don't exist, it's a flip card or storybook frame\n            colorsLength = card.colors.length;\n            cardFace = card;\n        } catch (e) {\n            try {\n                // Storybook frames from Eldraine may throw error\n                colorsLength = card.card_faces[0].colors.length;\n                cardFace = card.card_faces[0];\n            } catch (e) {\n                colorsLength = card.colors.length;\n                cardFace = card;\n            }\n        }\n\n        // Apply logic to return correct constant enum\n        if (colorsLength === 0) {\n            arrayConst = 'COLORLESS';\n        } else if (colorsLength === 1) {\n            arrayConst = cardFace.colors[0];\n        } else if (colorsLength > 1) {\n            arrayConst = 'MULTI';\n        }\n\n        // Drill into colorless cards, if they are lands or not\n        if (arrayConst === 'COLORLESS') {\n            if (cardFace.type_line.includes('Land')) {\n                arrayConst = 'LAND';\n            }\n        }\n\n        // Final check to guard against a null arrayConst\n        if (!arrayConst) { arrayConst = 'LAND' }\n\n        return arrayConst;\n    }\n\n    const alphaSort = cards.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n    });\n\n    const sorted = alphaSort.sort((a, b) => {\n        return ORDER.indexOf(helpSort(a)) - ORDER.indexOf(helpSort(b));\n    });\n\n    return sorted;\n}","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst SalesListItem = ({ saleData, cardList }) => {\n    const quantitySold = cardList.reduce(\n        (pre, curr) => pre + curr.qtyToSell,\n        0\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>{saleData.saleID}</Table.Cell>\n            <Table.Cell>\n                {moment(saleData.createTime).format('MM/DD/YYYY - h:mm A')}\n            </Table.Cell>\n            <Table.Cell>{quantitySold}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default SalesListItem;\n","import React from 'react';\nimport SalesListItem from './SalesListItem';\nimport { Table } from 'semantic-ui-react';\n\nconst SalesList = ({ list }) => {\n    return (\n        <Table celled unstackable compact>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Sale ID</Table.HeaderCell>\n                    <Table.HeaderCell>Date of Sale</Table.HeaderCell>\n                    <Table.HeaderCell>Quantity Sold</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {list.map(({ sale_data, card_list, _id }) => (\n                    <SalesListItem\n                        saleData={sale_data}\n                        cardList={card_list}\n                        key={_id}\n                    />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default SalesList;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport SalesList from './SalesList';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_SALES_BY_TITLE } from './api_resources';\nimport { Header, Divider } from 'semantic-ui-react';\n\nclass BrowseSales extends Component {\n    state = { salesList: [], cardName: '' };\n\n    handleSearchSelect = async cardName => {\n        const { data } = await axios.get(GET_SALES_BY_TITLE, {\n            params: { cardName: cardName },\n            headers: makeAuthHeader()\n        });\n\n        this.setState({ salesList: data, cardName: cardName });\n    };\n\n    render() {\n        const { salesList, cardName } = this.state;\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n\n                <Header as=\"h2\">Browse Sales</Header>\n                <Divider />\n\n                <span>\n                    <em>\n                        {cardName !== '' && (\n                            <h4>\n                                {salesList.length} results for {cardName}\n                            </h4>\n                        )}\n                    </em>\n                </span>\n                <SalesList list={salesList} />\n            </div>\n        );\n    }\n}\n\nexport default BrowseSales;\n","import React from 'react';\nimport { Image, Label } from 'semantic-ui-react';\nimport MarketPrice from './MarketPrice';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: inline-block;\n    margin: 10px 10px 10px 10px;\n`;\n\nconst InventoryWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5px;\n    background-color: rgba(0, 0, 0, 0.9);\n    border-radius: 10px 10px 10px 10px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n`;\n\nconst InventoryRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 5px;\n`;\n\nconst ImageWrapper = styled.div`\n    width: 300px;\n    height: 418.3px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n    background: repeating-linear-gradient(45deg, #bfbfbf, #bfbfbf 10px, #b0b0b0 10px, #b0b0b0 20px);\n    border-radius: 15px;\n`;\n\nexport default function PublicCardItem({ card }) {\n    const { id, cardImage } = card;\n    const [foilQty, nonfoilQty] = card.qohParsed;\n\n    const displayFoil = (\n        <InventoryRow>\n            <Label color='blue' image>Foil<Label.Detail>{foilQty}</Label.Detail></Label>\n            <MarketPrice id={id} publicView={true} finish=\"FOIL\" />\n        </InventoryRow>\n    );\n\n    const displayNonfoil = (\n        <InventoryRow>\n            <Label color='blue' image>Nonfoil<Label.Detail>{nonfoilQty}</Label.Detail></Label>\n            <MarketPrice id={id} publicView={true} />\n        </InventoryRow>\n    );\n\n    return <React.Fragment>\n        <Wrapper>\n            <ImageWrapper>\n                <Image src={cardImage} size=\"medium\" style={{ borderRadius: '15px' }} />\n            </ImageWrapper>\n            <InventoryWrapper>\n                {foilQty > 0 ? displayFoil : null}\n                {nonfoilQty > 0 ? displayNonfoil : null}\n            </InventoryWrapper>\n        </Wrapper>\n    </React.Fragment>\n}","import React from 'react';\nimport PublicCardItem from './PublicCardItem';\nimport { Grid } from 'semantic-ui-react';\n\nconst gridStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'space-evenly',\n    height: '100%'\n};\n\nexport default function PublicCardList({ cards }) {\n    return <Grid style={gridStyle} >\n        {cards.map(c =>\n            <PublicCardItem\n                key={c.id}\n                card={c}\n            />\n        )}\n    </ Grid>\n}\n","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Icon,\n    Divider,\n} from 'semantic-ui-react';\nimport SearchBar from './SearchBar';\nimport PublicCardList from './PublicCardList';\nimport { GET_CARDS_BY_TITLE } from './api_resources';\nimport { InventoryCard } from './utils/ScryfallCard';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    searchTerm: ''\n};\n\nexport default class PublicInventory extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term }\n            });\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            this.setState({ searchResults: modeledData, searchTerm: term });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            searchResults,\n            searchTerm\n        } = this.state;\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p><em>{searchTerm}</em> is out of stock</p>\n            }\n            return <p>Search for a card</p>; // Default text before search\n        }\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Column>\n                        <Header as=\"h2\">\n                            Inventory Search\n                            <Header.Subheader>\n                                <em>Card prices subject to change. Consult a Clubhouse employee for final estimates</em>\n                            </Header.Subheader>\n                        </Header>\n\n                        <Divider />\n\n                        {!searchResults.length &&\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"search\" />\n                                    <span>{searchNotification()}</span>\n                                </Header>\n                            </Segment>}\n\n                        <PublicCardList cards={searchResults} />\n                    </Grid.Column>\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport { GET_SET_NAMES } from './api_resources';\nimport axios from 'axios';\nimport { Form, Input, Select, Dropdown, Segment } from 'semantic-ui-react';\n\nconst formatDropdownOptions = [\n    { key: 'qw', value: \"\", text: \"None\" },\n    { key: 'we', value: \"standard\", text: \"Standard\" },\n    { key: 'er', value: \"future\", text: \"Future\" },\n    { key: 'rt', value: \"historic\", text: \"Historic\" },\n    { key: 'ty', value: \"pioneer\", text: \"Pioneer\" },\n    { key: 'yu', value: \"modern\", text: \"Modern\" },\n    { key: 'ui', value: \"legacy\", text: \"Legacy\" },\n    { key: 'io', value: \"pauper\", text: \"Pauper\" },\n    { key: 'op', value: \"vintage\", text: \"Vintage\" },\n    { key: 'as', value: \"penny\", text: \"Penny\" },\n    { key: 'sd', value: \"commander\", text: \"Commander\" },\n    { key: 'df', value: \"brawl\", text: \"Brawl\" },\n    { key: 'fg', value: \"duel\", text: \"Duel\" },\n    { key: 'gh', value: \"oldschool\", text: \"Oldschool\" }\n];\n\nconst priceFilterDropdownOptions = [\n    { key: 'gte', value: 'gte', text: '>=' },\n    { key: 'lte', value: 'lte', text: '<=' },\n    { key: 'gtx', value: 'gt', text: '>' },\n    { key: 'ltx', value: 'lt', text: '<' }\n];\n\nconst finishDropdownOptions = [\n    { key: 'nonfoil_foil', value: '', text: 'None' },\n    { key: 'nonfoil', value: 'NONFOIL', text: 'Nonfoil' },\n    { key: 'foil', value: 'FOIL', text: 'Foil' }\n];\n\nconst sortByDropdownOptions = [\n    { key: 'pricesort', value: 'price', text: 'Price' },\n    { key: 'alphasort', value: 'name', text: 'Card Name' }\n];\n\nconst sortByDirectionDropdownOptions = [\n    { key: 'descdirsort', value: 1, text: 'Ascending' },\n    { key: 'ascdirsort', value: -1, text: 'Descending' }\n];\n\nconst sortByColorDropdownOptions = [\n    { key: 'w', value: 'W', text: 'White' },\n    { key: 'u', value: 'U', text: 'Blue' },\n    { key: 'b', value: 'B', text: 'Black' },\n    { key: 'r', value: 'R', text: 'Red' },\n    { key: 'g', value: 'G', text: 'Green' }\n];\n\nconst typeLineOptions = [\n    { key: 'na', value: '', text: 'None' },\n    { key: 'artifact', value: 'Artifact', text: 'Artifact' },\n    { key: 'creature', value: 'Creature', text: 'Creature' },\n    { key: 'enchantment', value: 'Enchantment', text: 'Enchantment' },\n    { key: 'instant', value: 'Instant', text: 'Instant' },\n    { key: 'land', value: 'Land', text: 'Land' },\n    { key: 'planeswalker', value: 'Planeswalker', text: 'Planeswalker' },\n    { key: 'sorcery', value: 'Sorcery', text: 'Sorcery' },\n    { key: 'tribal', value: 'Tribal', text: 'Tribal' }\n];\n\nconst initialState = {\n    title: '',\n    setName: '',\n    format: '',\n    priceNum: '',\n    priceFilter: 'gte',\n    finish: '',\n    sortBy: 'price',\n    colorsArray: [],\n    sortByDirection: -1,\n    typeLine: '',\n    setNames: []\n}\n\nexport default class DeckboxCloneForm extends React.Component {\n    state = { editionDropdownOptions: [], ...initialState };\n\n    handleSearchSelect = name => this.setState({ title: name });\n\n    // When the user blurs the search field, we need to re-set state. Otherwise it won't clear from handleSearchSelect()\n    handleSearchBlur = (e, d) => this.setState({ title: e.target.value });\n\n    handleChange = (e, { value }) => this.setState({ [e.target.name]: value });\n\n    handleDropdownChange = (e, data) => this.setState({ [data.name]: data.value });\n\n    async componentDidMount() {\n        const { data } = await axios.get(GET_SET_NAMES);\n        const setNameOptions = data.map((d, idx) => {\n            return { key: `set${idx}`, value: d, text: d };\n        })\n        const concatWithBlankOption = [{ key: 'snull', value: \"\", text: \"None\" }].concat(setNameOptions);\n        this.setState({ editionDropdownOptions: concatWithBlankOption });\n    }\n\n    render() {\n        const {\n            title,\n            setName,\n            format,\n            priceNum,\n            priceFilter,\n            finish,\n            sortBy,\n            sortByDirection,\n            colorsArray,\n            typeLine\n        } = this.state;\n\n        // Sort the colors here and concat prior to sending to the backend\n        const colors = colorsArray.sort().join('');\n\n        return (\n            <Segment>\n                <h3>Filters</h3>\n                <Form>\n                    <Form.Group widths=\"4\">\n                        <Form.Field>\n                            <label>Card Name</label>\n                            <SearchBar\n                                handleSearchSelect={this.handleSearchSelect}\n                                value={this.state.title}\n                                name=\"title\"\n                                onBlur={this.handleSearchBlur}\n                            />\n                        </Form.Field>\n                        <Form.Field\n                            control={Select}\n                            label=\"Format\"\n                            placeholder=\"Format\"\n                            options={formatDropdownOptions}\n                            name=\"format\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Edition\"\n                            placeholder=\"Edition\"\n                            search\n                            options={this.state.editionDropdownOptions}\n                            name=\"setName\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Finish\"\n                            placeholder=\"Finish\"\n                            options={finishDropdownOptions}\n                            name=\"finish\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n                    <Form.Group widths=\"4\">\n\n                        <Form.Field\n                            control={Select}\n                            multiple\n                            label=\"Colors\"\n                            placeholder=\"Colors\"\n                            options={sortByColorDropdownOptions}\n                            name=\"colorsArray\"\n                            onChange={this.handleDropdownChange}\n                        />\n\n                        <Form.Field\n                            control={Select}\n                            label=\"Type Line\"\n                            placeholder=\"Type Line\"\n                            options={typeLineOptions}\n                            name=\"typeLine\"\n                            onChange={this.handleDropdownChange} />\n\n                        <Form.Field>\n                            <label>Price Filter</label>\n                            <Input\n                                label={<Dropdown\n                                    options={priceFilterDropdownOptions}\n                                    name=\"priceFilter\"\n                                    defaultValue=\"gte\"\n                                    onChange={this.handleDropdownChange}\n                                />}\n                                placeholder=\"Enter a price\"\n                                labelPosition=\"left\"\n                                name=\"priceNum\"\n                                type=\"number\"\n                                onChange={this.handleDropdownChange}\n                            />\n                        </Form.Field>\n                    </Form.Group>\n\n                    <h3>{\"Sort & Order\"}</h3>\n\n                    <Form.Group>\n                        <Form.Field\n                            control={Select}\n                            label=\"Sort By\"\n                            placeholder=\"\"\n                            options={sortByDropdownOptions}\n                            defaultValue='price'\n                            name=\"sortBy\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Order\"\n                            options={sortByDirectionDropdownOptions}\n                            defaultValue={-1}\n                            name=\"sortByDirection\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Button primary onClick={() => this.props.handleSubmit({\n                            title,\n                            setName,\n                            format,\n                            priceNum,\n                            priceFilter,\n                            finish,\n                            sortBy,\n                            sortByDirection,\n                            colors,\n                            type: typeLine\n                        })}>Submit</Form.Button>\n                    </Form.Group>\n                </Form>\n            </Segment>\n        )\n    }\n}","import React from 'react';\nimport { Table, Icon, Image } from 'semantic-ui-react';\nimport Price from './Price';\n\nconst conditionMap = {\n    NM: 'Near Mint',\n    LP: 'Light Play',\n    MP: 'Moderate Play',\n    HP: 'Heavy Play',\n};\n\nconst Tooltip = ({ image_uri, posX, posY }) => {\n    return (\n        <div style={{\n            position: 'absolute',\n            left: `${posX}px`,\n            width: '150px', // Width of the image when size=\"small\"\n            height: '209px', // Height of the image when size=\"small\"\n            borderRadius: '7px 7px 7px 7px',\n            boxShadow: '2px 2px 5px 0 rgba(0, 0, 0, 0.25)',\n            background: 'repeating-linear-gradient(45deg, #bfbfbf, #bfbfbf 10px, #b0b0b0 10px, #b0b0b0 20px)'\n        }}>\n            <Image\n                style={{ borderRadius: '7px 7px 7px 7px' }}\n                size=\"small\"\n                src={image_uri}\n            />\n        </div>\n    )\n}\n\nexport default class DeckboxCloneRow extends React.Component {\n    state = { mouseInside: false, mouseX: 0, mouseY: 0 };\n\n    mouseEnter = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseInside: true, mouseX, mouseY });\n    }\n\n    mouseLeave = (e) => this.setState({ mouseInside: false });\n\n    mouseMove = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseX, mouseY });\n    };\n\n    render() {\n        const { inventory, name, set_name, price, set, rarity, image_uri } = this.props;\n        const { mouseInside, mouseX, mouseY } = this.state;\n        const finish = inventory.k.split('_')[0];\n        const condition = inventory.k.split('_')[1];\n\n        return <Table.Row>\n            <Table.Cell>\n                <span\n                    onMouseEnter={this.mouseEnter}\n                    onMouseLeave={this.mouseLeave}\n                    onMouseMove={this.mouseMove}\n                    style={{ cursor: 'help' }}\n                >\n                    {name}{' '}\n                </span>\n                {finish === 'FOIL' && <Icon name=\"star\" color=\"blue\" />}\n                {mouseInside && <Tooltip image_uri={image_uri} posX={mouseX} posY={mouseY} />}\n            </Table.Cell>\n            <Table.Cell><i className={`ss ss-fw ss-${set} ss-${rarity}`} style={{ fontSize: '20px' }} />{\" \"}{set_name}</Table.Cell>\n            <Table.Cell>{conditionMap[condition]}</Table.Cell>\n            <Table.Cell>{inventory.v}</Table.Cell>\n            <Table.Cell><Price num={price} /></Table.Cell>\n        </Table.Row>\n    }\n}","import React from 'react'\nimport { GET_CARDS_BY_FILTER } from './api_resources';\nimport DeckboxCloneForm from './DeckboxCloneForm';\nimport DeckboxCloneRow from './DeckboxCloneRow';\nimport axios from 'axios';\nimport { Table, Menu, Icon, Dimmer, Loader, Segment, Header, Container } from 'semantic-ui-react';\nimport _ from 'lodash';\nconst LIMIT = 100 // Matching the backend for now\n\nexport default class DeckboxClone extends React.Component {\n    state = {\n        data: [],\n        count: 0,\n        currentPage: 0,\n        numPages: 0,\n        pageArray: [],\n        isLoading: false,\n        cachedFilters: {},\n        showPages: [],\n        searchTouched: false // Tracks whether the user has initially searched for the 'no results' message\n    }\n\n    fetchData = async (filters, page) => {\n        try {\n            this.setState({ isLoading: true });\n\n            const { data } = await axios.get(GET_CARDS_BY_FILTER, {\n                params: { ...filters, page }\n            });\n\n            const numPages = Math.ceil(data.total / LIMIT);\n            const pages = _.range(1, numPages + 1);\n            let showPages;\n\n            // Logic that controls the visibility of page number links \n            // Default max number pages to display is 5\n            if (page <= 3) {\n                showPages = pages.slice(0, 5);\n            } else if (page >= numPages - 2) {\n                showPages = pages.slice(numPages - 5, numPages);\n            } else {\n                showPages = pages.slice(page - 2, page + 3);\n            }\n\n            this.setState({\n                data: data.cards,\n                count: data.total,\n                isLoading: false,\n                numPages: numPages,\n                currentPage: page,\n                showPages: showPages,\n                searchTouched: true\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    handleSubmit = async (filters) => {\n        this.setState({ cachedFilters: filters }); // Set the filters for pagination requests later\n        await this.fetchData(filters, 1); // On submit, starting page mut always be 1\n    }\n\n    handlePage = async (page) => {\n        await this.fetchData(this.state.cachedFilters, page)\n        this.setState({ currentPage: page });\n    };\n\n    render() {\n        const { data, isLoading, currentPage, numPages, count } = this.state;\n        const showLeftPageButtons = !(currentPage === 1);\n        const showRightPageButtons = !(currentPage === numPages);\n\n        return <Container>\n            <Dimmer active={isLoading} inverted page style={{ marginTop: '52.63px' }}>\n                <Loader size=\"large\">Loading</Loader>\n            </Dimmer>\n            <Segment secondary>\n                <Icon name=\"exclamation triangle\" color=\"blue\" />\n                Prices from this table are updated weekly and are subject to fluctuations. Consult 'New Sale' or 'Manage Inventory' for up-to-date values\n            </Segment>\n            <DeckboxCloneForm handleSubmit={this.handleSubmit} />\n\n            {!!data.length && <Table celled striped compact>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='5'>\n                            <Menu floated=\"left\">\n                                <Menu.Item>Viewing page {currentPage} of {numPages}</Menu.Item>\n                            </Menu>\n                            <Menu floated=\"right\">\n                                {showLeftPageButtons && <Menu.Item as=\"a\" icon onClick={() => this.handlePage(currentPage - 1)} >\n                                    <Icon name='chevron left' />\n                                </Menu.Item>}\n\n                                <React.Fragment>\n                                    {this.state.showPages.map(p => {\n                                        return (\n                                            <Menu.Item\n                                                key={`page-${p}`}\n                                                onClick={() => this.handlePage(p)}\n                                                active={currentPage === p}\n                                                disabled={currentPage === p}\n                                                as=\"a\">\n                                                {p}\n                                            </Menu.Item>\n                                        )\n                                    })}\n                                </React.Fragment>\n\n                                {showRightPageButtons && <Menu.Item as=\"a\" icon onClick={() => this.handlePage(currentPage + 1)}>\n                                    <Icon name='chevron right' />\n                                </Menu.Item>}\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Edition</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Qty</Table.HeaderCell>\n                        <Table.HeaderCell>Price</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {data.map(d => <DeckboxCloneRow {...d} key={`${d._id}${d.inventory.k}`} />)}\n                </Table.Body>\n\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='5'>\n                            <Menu floated=\"left\">\n                                <Menu.Item>Total results: {count}</Menu.Item>\n                            </Menu>\n                            <Menu floated=\"right\">\n                                {showLeftPageButtons && <Menu.Item\n                                    as=\"a\"\n                                    icon\n                                    onClick={() => this.handlePage(currentPage - 1)}\n                                >\n                                    <Icon name='chevron left' />\n                                </Menu.Item>}\n\n                                <React.Fragment>\n                                    {this.state.showPages.map(p => {\n                                        return (\n                                            <Menu.Item\n                                                key={`page-${p}`}\n                                                onClick={() => this.handlePage(p)}\n                                                active={currentPage === p}\n                                                disabled={currentPage === p}\n                                                as=\"a\">\n                                                {p}\n                                            </Menu.Item>\n                                        )\n                                    })}\n                                </React.Fragment>\n\n                                {showRightPageButtons && <Menu.Item\n                                    as=\"a\"\n                                    icon\n                                    onClick={() => this.handlePage(currentPage + 1)}\n                                >\n                                    <Icon name='chevron right' />\n                                </Menu.Item>}\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>}\n\n            {!data.length &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        {this.state.searchTouched ?\n                            'No results found' :\n                            'Use the filters to browse inventory'\n                        }\n                    </Header>\n                </Segment>}\n        </Container>\n    }\n}","import React, { useState } from 'react';\nimport makeAuthHeader from './makeAuthHeader';\nimport { LOGIN } from './api_resources';\nimport axios from 'axios';\n\nexport const AuthContext = React.createContext();\n\nexport default function AuthProvider(props) {\n    const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('clubhouse_JWT'));\n\n    const handleLogin = async (username, password) => {\n        try {\n            const { data } = await axios.post(LOGIN, {\n                username: username.toLowerCase(),\n                password: password\n            }, { headers: makeAuthHeader() });\n\n            if (data.token) {\n                localStorage.setItem('clubhouse_JWT', data.token);\n                setLoggedIn(!!localStorage.getItem('clubhouse_JWT'))\n\n                return { authed: true };\n            } else {\n                return { authed: false };\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const handleLogout = async () => {\n        try {\n            localStorage.removeItem('clubhouse_JWT');\n            setLoggedIn(!!localStorage.getItem('clubhouse_JWT'));\n\n            return { authed: false };\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return <AuthContext.Provider value={{ loggedIn, handleLogin, handleLogout }}>\n        {props.children}\n    </AuthContext.Provider>\n}\n","import React from 'react';\nimport createToast from './createToast';\nimport { Form, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from './AuthProvider';\n\nconst initialState = { username: '', password: '', btnLoading: false };\n\nclass Login extends React.Component {\n    state = initialState;\n\n    handleInputChange = (e, { value }) => {\n        this.setState({ [e.target.name]: value });\n    };\n\n    render() {\n        const { username, password, btnLoading } = this.state;\n\n        return (\n            <AuthContext.Consumer>\n                {({ loggedIn, handleLogin }) => {\n                    const login = async () => {\n                        const { username, password } = this.state;\n\n                        this.setState({ btnLoading: true });\n\n                        const { authed } = await handleLogin(username, password);\n\n                        if (authed) {\n                            // Do not set state here to mitigate React setState warning after component unmounted due to redirect\n                            createToast({\n                                color: 'green',\n                                header: 'Success',\n                                message: `Enjoy your time here!`,\n                            });\n                        } else {\n                            this.setState(initialState);\n                            createToast({\n                                color: 'red',\n                                header: 'Error',\n                                message: `Username or password was incorrect`,\n                            });\n                        }\n                    };\n\n                    if (loggedIn) {\n                        return <Redirect to=\"/manage-inventory\" />;\n                    }\n\n                    return (\n                        <Form>\n                            <Form.Field>\n                                <Form.Input\n                                    name=\"username\"\n                                    placeholder=\"Username\"\n                                    label=\"Username\"\n                                    value={username}\n                                    onChange={this.handleInputChange}\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <Form.Input\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    value={password}\n                                    onChange={this.handleInputChange}\n                                />\n                            </Form.Field>\n                            <Button\n                                type=\"submit\"\n                                onClick={() => login()}\n                                disabled={!username || !password}\n                                loading={btnLoading}\n                            >\n                                Submit\n                            </Button>\n                        </Form>\n                    );\n                }}\n            </AuthContext.Consumer>\n        )\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Header, Container } from 'semantic-ui-react';\nimport { AuthContext } from './AuthProvider';\n\nclass Logout extends React.Component {\n    render() {\n        return (\n            <AuthContext.Consumer>\n                {({ loggedIn, handleLogout }) => {\n                    if (!loggedIn) {\n                        return <Redirect to=\"/login\" />;\n                    }\n\n                    return (\n                        <React.Fragment>\n                            <Container fluid>\n                                <Header as=\"h3\" color=\"grey\"><i>Until we meet again, friend...</i></Header>\n                                <Button onClick={async () => await handleLogout()}>Logout</Button>\n                            </Container>\n                        </React.Fragment>\n                    )\n                }}\n            </AuthContext.Consumer>\n        )\n    }\n};\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Item\n} from 'semantic-ui-react';\nimport QohLabels from '../QohLabels';\nimport CardImage from '../CardImage';\nimport MarketPrice from '../MarketPrice'\nimport $ from 'jquery';\nimport createToast from '../createToast';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil`\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nfunction checkCardFinish(nonfoil, foil) {\n    if (!nonfoil && foil) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoil && !foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoil && foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default function ReceivingCardItem(props) {\n    const [quantity, setQuantity] = useState(1);\n    const [cashPrice, setCashPrice] = useState(0);\n    const [creditPrice, setCreditPrice] = useState(0);\n    const [selectedCondition, setSelectedCondition] = useState('NM');\n    const [marketPrice, setMarketPrice] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(\n        checkCardFinish(props.nonfoil, props.foil).selectedFinish // seed state from props\n    );\n\n    // Determines whether the select finish dropdown is permanently disabled, seeded from props\n    const finishDisabled = checkCardFinish(props.nonfoil, props.foil).finishDisabled;\n\n    const handleFinishChange = (e, { value }) => setSelectedFinish(value);\n\n    const handleConditionChange = (e, { value }) => setSelectedCondition(value);\n\n    // Validates/sanitizes user inputs by tracking the `name` attribute of the input element\n    const handlePriceChange = (e, { value }) => {\n        let val = Number(value) || 0;\n        if (val < 0) val = 0;\n\n        switch (e.target.name) {\n            case \"cashInput\":\n                setCashPrice(val);\n                break;\n            case \"marketPriceInput\":\n                setMarketPrice(val);\n                break;\n            case \"creditInput\":\n                setCreditPrice(val);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleQuantityChange = (e, { value }) => {\n        let val = parseInt(value, 10) || 0;\n        if (val < 0) val = 0; // cannot receive less than 0\n        if (val > 50) val = 50 // set max to 50 cards per single transaction\n        setQuantity(val);\n    };\n\n\n    const handleFocus = e => {\n        switch (e.target.name) {\n            case \"cashInput\":\n                if (cashPrice === 0) setCashPrice('');\n                break;\n            case \"marketPriceInput\":\n                if (marketPrice === 0) setMarketPrice('');\n                break;\n            case \"creditInput\":\n                if (creditPrice === 0) setCreditPrice('');\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleBlur = e => {\n        switch (e.target.name) {\n            case \"cashInput\":\n                if (cashPrice === '') setCashPrice(0);\n                break;\n            case \"marketPriceInput\":\n                if (marketPrice === '') setMarketPrice(0);\n                break;\n            case \"creditInput\":\n                if (creditPrice === '') setCreditPrice(0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleInventoryAdd = () => {\n        props.addToList({\n            quantity,\n            cashPrice,\n            marketPrice,\n            creditPrice,\n            finishCondition: `${selectedFinish}_${selectedCondition}`, // ex. NONFOIL_NM\n            cardInfo: { ...props }\n        })\n\n        setQuantity(1);\n        setCashPrice(0);\n        setMarketPrice(0);\n        setCreditPrice(0);\n        setSelectedCondition('NM');\n        setSelectedFinish(checkCardFinish(props.nonfoil, props.foil).selectedFinish);\n\n        createToast({\n            color: 'green',\n            header: `${quantity}x ${props.name} added to buylist!`,\n            duration: 2000\n        });\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    /**\n     * Determines whether the `Add` button should be disabled\n     */\n    const submitDisabled = () => {\n        const validateQty = quantity === 0 || quantity === '';\n        const validateTradeTypes = !cashPrice && !creditPrice;\n        const validateMarketPrice = marketPrice === 0 || marketPrice === '';\n\n        if (cashPrice > 0) {\n            return validateQty || validateTradeTypes || validateMarketPrice;\n        }\n\n        return validateQty || validateTradeTypes;\n    }\n\n    const {\n        image_uris,\n        name,\n        set_name,\n        set,\n        rarity,\n        card_faces,\n        id\n    } = props;\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"small\">\n                        <CardImage\n                            image_uris={image_uris}\n                            card_faces={card_faces}\n                            hover={false}\n                        />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as='h3'>\n                            {name}\n                            {' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                            <QohLabels inventoryQty={props.inventoryQty} />\n                            {' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity\"\n                                        value={quantity}\n                                        onChange={handleQuantityChange}\n                                        onFocus={e => e.target.select()}\n                                    />\n                                    <Form.Field\n                                        label=\"Credit Price\"\n                                        name=\"creditInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={creditPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                    />\n                                    <Form.Field\n                                        label=\"Cash Price\"\n                                        name=\"cashInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={cashPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                    />\n                                    <Form.Field\n                                        label=\"Market Price\"\n                                        name=\"marketPriceInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={marketPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                        disabled={cashPrice === 0 || cashPrice === ''}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        label=\"Finish\"\n                                        control={Select}\n                                        value={selectedFinish}\n                                        options={finishes}\n                                        disabled={finishDisabled}\n                                        onChange={handleFinishChange}\n                                    />\n                                    <Form.Field\n                                        label=\"Condition\"\n                                        control={Select}\n                                        value={selectedCondition}\n                                        options={cardConditions}\n                                        onChange={handleConditionChange}\n                                    />\n                                    <Form.Button\n                                        label=\"Add to List?\"\n                                        control={Button}\n                                        primary\n                                        disabled={submitDisabled()}\n                                        onClick={handleInventoryAdd}\n                                    >\n                                        Add\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}","import React from 'react';\nimport ReceivingCardItem from './ReceivingSearchItem';\n\nexport default function ReceivingCardList({ cards, addToList }) {\n    return cards.map(c => {\n        return <ReceivingCardItem\n            key={c.id}\n            {...c}\n            addToList={addToList}\n        />\n    });\n}\n","import React, { useState } from 'react';\nimport { Table, Button, Label, Icon } from 'semantic-ui-react';\nimport Price from '../Price';\n\n// Defines whether it uses cash or credit for trade types\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListItem({ name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, removeFromList, tradeType, activeTradeType }) {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [hovered, setHovered] = useState(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell><b>{name}</b></Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Cash <b><Price num={cashPrice} /></b>\n                </div>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Credit <b><Price num={creditPrice} /></b>\n                </div>\n                <p>{finishCondition.split('_')[0]} | {finishCondition.split('_')[1]}</p>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CASH}\n                    color={tradeType === CASH ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CASH)}\n                    disabled={cashPrice === 0}\n                    icon\n                >\n                    <Icon name=\"dollar sign\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CREDIT}\n                    color={tradeType === CREDIT ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CREDIT)}\n                    disabled={creditPrice === 0}\n                    icon\n                >\n                    <Icon name=\"credit card outline\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => removeFromList(uuid_key)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}","import React from 'react';\nimport _ from 'lodash';\nimport Price from '../Price';\nimport { Table } from 'semantic-ui-react';\n\n// Am I crazy or is this logic really convoluted?\n// Perhaps look at this down the line for improvement...\nexport default function CashReport({ receivingList, closeCashModal }) {\n    // If id, cashPrice and marketPrice are the same, goes in one bucket\n    const countByPriceAndID = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            // Note: We're creating a unique uuid-esque comparator string based on:\n            // `id`, `cashPrice`, `marketPrice`, and `finishCondition`\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .groupBy(\"temp_uuid\")\n        .mapValues(val => val.length)\n        .value();\n\n    const uniqLineItems = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .uniqBy('temp_uuid')\n        .value();\n\n    const mergedWithQty = uniqLineItems.map(c => {\n        return { ...c, tradeQty: countByPriceAndID[c.temp_uuid] } // Add a trade quantity referencing the previous count\n    });\n\n    const totalCashOut = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .sumBy(c => c.cashPrice)\n        .value();\n\n    return <React.Fragment>\n        <div id=\"cash-report\">\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan={6}>Employee Name:</Table.HeaderCell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.HeaderCell>Card Name</Table.HeaderCell>\n                        <Table.HeaderCell>Market Value</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Offer</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Out</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {mergedWithQty.map(c => {\n                        return <Table.Row key={c.temp_uuid}>\n                            <Table.Cell>{c.name}</Table.Cell>\n                            <Table.Cell><Price num={c.marketPrice} /></Table.Cell>\n                            <Table.Cell>{c.finishCondition}</Table.Cell>\n                            <Table.Cell>{c.tradeQty}</Table.Cell>\n                            <Table.Cell><Price num={c.cashPrice} /></Table.Cell>\n                            <Table.Cell><Price num={c.tradeQty * c.cashPrice} /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n                <Table.Footer>\n                    <Table.HeaderCell colSpan={6}>Total: <Price num={totalCashOut} /></Table.HeaderCell>\n                </Table.Footer>\n            </Table>\n        </div>\n    </React.Fragment>\n}","import React, { useState } from 'react';\nimport { Segment, Statistic, Button, Modal, Header } from 'semantic-ui-react';\nimport Price from '../Price';\nimport CashReport from './CashReport';\nimport printCashReport from './printCashReport';\n\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListTotals({ receivingList, selectAll, commitToInventory }) {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [loading, setLoading] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [showCashModal, setShowCashModal] = useState(false);\n\n    const openCashModal = () => setShowCashModal(true);\n\n    const closeCashModal = () => setShowCashModal(false);\n\n    const submitToInventory = async () => {\n        setLoading(true);\n        await commitToInventory();\n        setLoading(false);\n    }\n\n    const handlePrintCashReport = () => {\n        setShowCashModal(false); // Close the modal so users don't have to after printing in new tab\n        printCashReport();\n    }\n\n    const cashTotal = receivingList.reduce((acc, curr) => {\n        let cashVal = curr.tradeType === CASH ? curr.cashPrice : 0;\n        return acc + cashVal;\n    }, 0);\n\n    const creditTotal = receivingList.reduce((acc, curr) => {\n        let creditVal = curr.tradeType === CREDIT ? curr.creditPrice : 0;\n        return acc + creditVal;\n    }, 0);\n\n    return <Segment>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Button.Group>\n                <Button onClick={() => selectAll(TRADE_TYPE.CASH)}>Select all cash</Button>\n                <Button.Or />\n                <Button onClick={() => selectAll(TRADE_TYPE.CREDIT)}>Select all credit</Button>\n            </Button.Group>\n            <div>\n                <Statistic size=\"mini\">\n                    <Statistic.Label>Cash Due:</Statistic.Label>\n                    <Statistic.Value><Price num={cashTotal} /></Statistic.Value>\n                </Statistic>\n                <Statistic size=\"mini\">\n                    <Statistic.Label>Credit Due:</Statistic.Label>\n                    <Statistic.Value><Price num={creditTotal} /></Statistic.Value>\n                </Statistic>\n            </div>\n        </div>\n\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Modal\n                open={showCashModal}\n                trigger={\n                    <Button\n                        color={cashTotal > 0 ? 'green' : null}\n                        disabled={cashTotal === 0}\n                        onClick={openCashModal}>\n                        Generate cash report\n                    </Button>\n                }>\n                <Modal.Content>\n                    <CashReport\n                        receivingList={receivingList}\n                        closeCashModal={closeCashModal} />\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={handlePrintCashReport} color=\"blue\">Print Report</Button>\n                    <Button onClick={closeCashModal}>Cancel</Button>\n                </Modal.Actions>\n            </Modal>\n\n            <Modal\n                closeOnDimmerClick={false}\n                trigger={\n                    <Button\n                        color=\"blue\"\n                        disabled={receivingList.length === 0}\n                        onClick={() => setShowModal(true)}>\n                        Commit to inventory\n                    </Button>\n                }\n                open={showModal}\n                onClose={() => setShowModal(false)}\n                basic style={{ marginTop: '50px' }} >\n                <Header>Confirm receipt of new inventory?</Header>\n                <Modal.Content>\n                    <p><b>Pressing 'Submit' will commit the following items to inventory:</b></p>\n                    <ul>\n                        {receivingList.map(c => {\n                            return <li key={c.uuid_key}>{c.name} | {c.set_name}({c.set.toUpperCase()})</li>\n                        })}\n                    </ul>\n                    <div>\n                        <p><b>The customer is owed: </b></p>\n                        <ul>\n                            {cashTotal > 0 ? <li><Price num={cashTotal} /> in cold, hard cash</li> : null}\n                            {creditTotal > 0 ? <li><Price num={creditTotal} /> in store credit</li> : null}\n                        </ul>\n                    </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button basic color=\"red\" inverted onClick={() => setShowModal(false)}>Cancel</Button>\n                    <Button color=\"green\" inverted loading={loading} disabled={loading} onClick={submitToInventory}>Submit</Button>\n                </Modal.Actions>\n            </Modal>\n        </div>\n    </Segment>\n}","const printStyle = `\n    body {\n        font-family: 'helvetica neue', helvetica, arial, sans-serif;\n    }\n\n    table {\n        table-layout: fixed;\n        width: 100%;\n        border-collapse: collapse;\n        border: 1px solid gray;\n        text-align: left;\n    }\n\n    thead th:nth-child(1) {\n        width: 30%;\n    }\n\n    thead th:nth-child(2) {\n        width: 20%;\n    }\n\n    thead th:nth-child(3) {\n        width: 15%;\n    }\n\n    thead th:nth-child(4) {\n        width: 35%;\n    }\n\n    th, td {\n        border: 1px solid #ddd;\n        padding: 10px;\n    }\n\n    tfoot {\n        text-align: right !important;\n    }\n`;\n\n/**\n     * We're creating a new tab here for the modal table and writing CSS to it - not the most elegant solution from a UX and\n     * code standpoint, but time was of the essence for this release. Refactor down the road.\n     * \n     * The id cash-report is found on the cash report table\n     */\nexport default function printCashReport() {\n    const divToPrint = document.getElementById('cash-report');\n    const popup = window.open('', '_blank');\n    popup.document.open();\n    popup.document.write(`<html>`);\n    popup.document.write(`<head>`);\n    popup.document.write(`<title>Cash Report</title>`)\n    popup.document.write(`<style>${printStyle}</style>`);\n    popup.document.write(`</head>`);\n    popup.document.write(`<body onload=\"window.print()\">`);\n    popup.document.write(`${divToPrint.innerHTML}`);\n    popup.document.write(`</body>`);\n    popup.document.write(`</html>`);\n    popup.document.close();\n}","import React, { useState } from 'react';\nimport SearchBar from '../SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from '../makeAuthHeader';\nimport ReceivingSearchList from './ReceivingSearchList';\nimport { Segment, Header, Icon, Grid, Divider, Table } from 'semantic-ui-react'\nimport { ADD_CARD_TO_INVENTORY, GET_CARD_QTY_FROM_INVENTORY, GET_SCRYFALL_BULK_BY_TITLE } from '../api_resources';\nimport ReceivingListItem from './ReceivingListItem';\nimport ReceivingListTotals from './ReceivingListTotals';\nimport createToast from '../createToast';\nimport _ from 'lodash';\nimport uuid from 'uuid'; // Used to crete unique keys for the list\n\n// Defines whether the receivingListItem uses cash or credit for trade types\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nfunction DefaultPlaceholder({ active, headerText }) {\n    return (\n        <React.Fragment>\n            {active &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        <em>{headerText}</em>\n                    </Header>\n                </Segment>}\n        </React.Fragment>\n    )\n}\n\nexport default function Receiving() {\n    const [searchResults, setSearchResults] = useState([]);\n    const [receivingList, setReceivingList] = useState([]);\n\n    /**\n     * Fetches cards from the DB by title when a user selects a title after querying.\n     * This function merges the data (inventory quantity and card objects) from two endpoints into one array.\n     * \n     * @param {String} term - the search term\n     */\n    const handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(\n                GET_SCRYFALL_BULK_BY_TITLE,\n                {\n                    params: { title: term },\n                    headers: makeAuthHeader()\n                }\n            );\n\n            const ids = data.map(el => el.id);\n\n            // Fetches only the in-stock qty of a card tied to an `id`\n            const inventoryRes = await axios.post(\n                GET_CARD_QTY_FROM_INVENTORY,\n                { scryfallIds: ids },\n                { headers: makeAuthHeader() }\n            );\n\n            const mergedData = data.map(d => {\n                return { ...d, inventoryQty: inventoryRes.data[d.id] } // inventoryQty will be `undefined` if no qty (prop not found)\n            });\n\n            setSearchResults(mergedData);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    /**\n     * Adds a card to the receiving list, with a unique uuid for identification\n     */\n    const addToList = ({ quantity, cashPrice, marketPrice, creditPrice, finishCondition, cardInfo }) => {\n\n        const previousState = [...receivingList];\n        let initialTradeType = TRADE_TYPE.CREDIT;\n\n        // If the creditPrice is 0 default to cash\n        if (!creditPrice) initialTradeType = TRADE_TYPE.CASH;\n\n        // Each line-item represents one card. Use _.times() to repeat\n        const newState = previousState.concat(_.times(quantity, idx => {\n            return { cashPrice, marketPrice, creditPrice, finishCondition, ...cardInfo, uuid_key: uuid(), tradeType: initialTradeType }\n        }))\n\n        setReceivingList(_.sortBy(newState, 'name'));\n    }\n\n    /**\n     * Removes a card from the receiving list using the uuid\n     */\n    const removeFromList = (uuid_key) => {\n        const copiedState = [...receivingList];\n        _.remove(copiedState, e => e.uuid_key === uuid_key); // Mutates array\n        setReceivingList(copiedState);\n    }\n\n    /**\n     * Determines whether line-items use cash or credit. Changes the tradeType by reference in the receivingList array\n     * which changes the button color/active prop in ReceivingListItem\n     */\n    const activeTradeType = (uuid_key, tradeType) => {\n        const previousState = [...receivingList];\n        const card = previousState.find(e => e.uuid_key === uuid_key);\n        card.tradeType = TRADE_TYPE[tradeType];\n        setReceivingList(previousState);\n    }\n\n    /**\n     * Selects all items by their tradeType, if possible\n     * \n     * @param {String} tradeType - `CASH` or `CREDIT`\n     */\n    const selectAll = (tradeType) => {\n        const oldState = [...receivingList];\n        const { CASH, CREDIT } = TRADE_TYPE;\n\n        oldState.forEach((card, idx, arr) => {\n            if (card.tradeType !== tradeType) { // if the line-items tradeType is not the one passed\n                const otherType = card.tradeType === CASH ? CREDIT : CASH; // determine the tradeType and set it to other one (toggle)\n                const otherTypeValue = otherType === CASH ? card.cashPrice : card.creditPrice; // see what the value of the other is\n                // if the other is greater than 0, we mutate array in-place\n                if (otherTypeValue > 0) arr[idx].tradeType = otherType;\n            }\n        })\n\n        setReceivingList(oldState);\n    }\n\n    /**\n     * Persists all passed cards to inventory via Promise.all() using the addCardToInventory backend method\n     */\n    const commitToInventory = async () => {\n        const stateWithUnremovedProps = [...receivingList];\n\n        // Need to remove all the props we've been adding to the card objects\n        // when passing them to other components for state management.\n        const removedProps = stateWithUnremovedProps.map(c => {\n            return _.omit(c, [\n                \"cashPrice\",\n                \"creditPrice\",\n                \"marketPrice\",\n                \"inventoryQty\",\n                \"addToList\",\n                \"uuid_key\",\n                \"tradeType\",\n                \"activeTradeType\"\n            ])\n        })\n\n        try {\n            const promises = removedProps.map(async c => {\n                return await axios.post(ADD_CARD_TO_INVENTORY, {\n                    quantity: 1,\n                    type: c.finishCondition,\n                    finishCondition: c.finishCondition,\n                    cardInfo: _.omit(c, 'finishCondition') // remove `finishCondition` finally\n                }, { headers: makeAuthHeader() });\n            })\n\n            await Promise.all(promises);\n\n            setSearchResults([]);\n            setReceivingList([]);\n\n            createToast({\n                color: 'green',\n                header: `${receivingList.length} cards were added to inventory!`,\n                duration: 2000\n            });\n        } catch (e) {\n            console.log(e);\n            createToast({\n                color: 'red',\n                header: `Something went wrong...`,\n                duration: 2000\n            });\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <SearchBar handleSearchSelect={handleSearchSelect} />\n            <br />\n            <Grid stackable={true}>\n                <Grid.Row>\n                    <Grid.Column width=\"10\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Card Search</Header>\n                        <Divider />\n                        <DefaultPlaceholder\n                            active={!searchResults.length}\n                            headerText={\"So many cards, so little time.\"}\n                        />\n                        <ReceivingSearchList\n                            cards={searchResults}\n                            addToList={addToList}\n                        />\n                    </Grid.Column>\n                    <Grid.Column width=\"6\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Buylist</Header>\n                        {receivingList.length > 0 &&\n                            <Header floated=\"right\" style={{ display: \"inline-block\" }}>Total Cards: {receivingList.length}</Header>\n                        }\n                        <Divider />\n                        <DefaultPlaceholder\n                            active={!receivingList.length}\n                            headerText={\"If you receive it, they will come.\"}\n                        />\n                        {receivingList.length > 0 && <Table compact size=\"small\">\n                            <Table.Body>\n                                {receivingList.map(({ name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, tradeType }) => {\n                                    return <ReceivingListItem\n                                        name={name}\n                                        set={set}\n                                        rarity={rarity}\n                                        cashPrice={cashPrice}\n                                        creditPrice={creditPrice}\n                                        finishCondition={finishCondition}\n                                        uuid_key={uuid_key}\n                                        removeFromList={removeFromList}\n                                        tradeType={tradeType}\n                                        activeTradeType={activeTradeType}\n                                        key={uuid_key}\n                                    />\n                                })}\n                            </Table.Body>\n                        </Table>}\n                        {receivingList.length > 0 && <ReceivingListTotals\n                            receivingList={receivingList}\n                            selectAll={selectAll}\n                            commitToInventory={commitToInventory}\n                        />}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </React.Fragment>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GET_ALL_SALES } from '../api_resources';\nimport { Segment, Icon, Grid } from 'semantic-ui-react';\nimport Highcharts from 'highcharts';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nexport default function Reports() {\n    // const [salesData, setSalesData] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n\n            const { data } = await axios.get(GET_ALL_SALES);\n            const { sales_data, format_legalities } = data;\n\n            const groupByDay = _.groupBy(sales_data, d => moment(d.sale_data.timeStamp).startOf('day').format());\n\n            const dailySalesTotals = {};\n            const dailyAverageSales = {};\n            const rangeBuckets = {\n                0: 0, // $0.50 to $0.99\n                1: 0, // $1.00 to $4.99 \n                2: 0, // $5.00 to $9.99\n                3: 0, // $10.00 to $19.99\n                4: 0, // $20.00 to $49.99\n                5: 0, // $50.00 and above\n            };\n            const rarityCounts = {};\n\n            // Create daily sales totals\n            _.forOwn(groupByDay, (val, key) => {\n                dailySalesTotals[key] = val.reduce((acc, curr) => acc + curr.sale_data.total, 0);\n            });\n\n            // Create average sales totals\n            _.forOwn(groupByDay, (val, key) => {\n                dailyAverageSales[key] = val.reduce((acc, curr) => acc + curr.sale_data.total, 0) / val.length;\n            });\n\n            // Create range buckets for card prices\n            const cards = [];\n            sales_data.forEach(d => cards.push(...d.card_list));\n            cards.forEach(c => {\n                if (c.price >= 0.5 && c.price < 1) rangeBuckets[0] += c.qtyToSell;\n                if (c.price >= 1 && c.price < 5) rangeBuckets[1] += c.qtyToSell;\n                if (c.price >= 5 && c.price < 10) rangeBuckets[2] += c.qtyToSell;\n                if (c.price >= 10 && c.price < 20) rangeBuckets[3] += c.qtyToSell;\n                if (c.price >= 20 && c.price < 50) rangeBuckets[4] += c.qtyToSell;\n                if (c.price >= 50) rangeBuckets[5] += c.qtyToSell;\n            });\n\n            // Create rarity sales counts\n            cards.forEach(c => {\n                if (rarityCounts[c.rarity]) {\n                    rarityCounts[c.rarity] += c.qtyToSell\n                } else {\n                    rarityCounts[c.rarity] = c.qtyToSell;\n                }\n            });\n\n            // Create format legality data\n            const legalityCounts = { standard: 0, nonStandard: 0 };\n\n            format_legalities.forEach(c => {\n                const qtySold = c.qtyToSell;\n\n                if (!c.legalities) return; // Some cards may not link via mongo $lookup\n\n                if (c.legalities.standard === \"legal\") {\n                    legalityCounts.standard += qtySold;\n                } else {\n                    legalityCounts.nonStandard += qtySold;\n                }\n            });\n\n            // Format data for consumption by Highcharts API\n            const formattedDailySalesTotals = Object.entries(dailySalesTotals).map(el => [new Date(el[0]).getTime(), el[1]]);\n\n            const formattedDailyAverageSales = Object.entries(dailyAverageSales).map(el => [new Date(el[0]).getTime(), el[1]]);\n\n            const formattedRangeBuckets = Object.entries(rangeBuckets).map(d => d[1]);\n\n            const formattedRarityCounts = Object.entries(rarityCounts).map(d => ({ name: d[0], y: d[1] }));\n\n            const formattedLegalities = Object.entries(legalityCounts).map(d => ({ name: d[0], y: d[1] }));\n\n            setLoading(false);\n\n            Highcharts.setOptions({\n                lang: {\n                    thousandsSep: ','\n                }\n            });\n\n            Highcharts.chart('daily-sales', {\n                chart: {\n                    zoomType: 'x'\n                },\n                title: {\n                    text: 'Sales Over Time'\n                },\n                subtitle: {\n                    text: 'Click and drag to zoom'\n                },\n                credits: {\n                    enabled: false\n                },\n                xAxis: {\n                    type: 'datetime',\n                    title: {\n                        text: 'Date'\n                    }\n                },\n                yAxis: {\n                    title: {\n                        text: 'USD ($)'\n                    }\n                },\n                legend: {\n                    enabled: true\n                },\n                series: [{\n                    type: 'spline',\n                    data: formattedDailySalesTotals,\n                    name: 'Total Sales',\n                    tooltip: {\n                        valueDecimals: 2\n                    }\n                }, {\n                    type: 'spline',\n                    data: formattedDailyAverageSales,\n                    name: 'Average Sales',\n                    tooltip: {\n                        valueDecimals: 2\n                    }\n                }]\n            });\n\n            Highcharts.chart('price-buckets', {\n                chart: {\n                    type: 'bar'\n                },\n                title: {\n                    text: 'Cards Sold Per Price Range'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                yAxis: {\n                    min: 0,\n                    title: {\n                        text: 'Number sold'\n                    }\n                },\n                xAxis: {\n                    categories: [\n                        '$0.50 - $0.99',\n                        '$1.00 - $4.99',\n                        '$5.00 - $9.99',\n                        '$10.00 - $19.99',\n                        '$20.00 - $49.99',\n                        '$50.00 +'\n                    ]\n                },\n                plotOptions: {\n                    bar: {\n                        dataLabels: {\n                            enabled: true\n                        }\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Total cards\",\n                    data: formattedRangeBuckets\n                }]\n            });\n\n            Highcharts.chart('rarity-sales', {\n                chart: {\n                    plotBackgroundColor: null,\n                    plotBorderWidth: null,\n                    plotShadow: null,\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Cards Sold Per Rarity'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                plotOptions: {\n                    pie: {\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b><br>{point.percentage:.0f} %',\n                            distance: -50,\n                            filter: {\n                                property: 'percentage',\n                                operator: '>',\n                                value: 4\n                            }\n                        },\n                        colors: ['#7bb5ed', '#6798c8', '#4b769f', '#2d567c']\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Cards Sold\",\n                    data: formattedRarityCounts\n                }]\n            })\n\n            Highcharts.chart('format-legalities', {\n                chart: {\n                    plotBackgroundColor: null,\n                    plotBorderWidth: null,\n                    plotShadow: null,\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Standard vs Non-Standard Sales'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                plotOptions: {\n                    pie: {\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b><br>{point.percentage:.0f} %',\n                            distance: -50,\n                            filter: {\n                                property: 'percentage',\n                                operator: '>',\n                                value: 4\n                            }\n                        },\n                        colors: ['#7bb5ed', '#6798c8', '#4b769f', '#2d567c']\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Cards Sold\",\n                    data: formattedLegalities\n                }]\n            })\n        })();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Segment secondary>\n                <Icon name=\"exclamation triangle\" color=\"blue\" />\n                This feature is currently in beta. Metrics may not be entirely accurate. Please contact your development team if you have any feedback!\n            </Segment>\n            <Segment loading={loading}>\n                <div id=\"daily-sales\" style={{ width: \"100%\", height: \"400px\" }} />\n            </Segment>\n            <Grid columns={2} stackable={true}>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"price-buckets\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"rarity-sales\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"format-legalities\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Sale from './Sale';\nimport BrowseSales from './BrowseSales';\nimport PublicInventory from './PublicInventory';\nimport DeckboxClone from './DeckboxClone';\nimport Login from './Login';\nimport Logout from './Logout';\nimport Receiving from './Receiving/Receiving';\nimport Reports from './Reports/Reports'\nimport styled from 'styled-components';\nimport { Segment, Icon, Header } from 'semantic-ui-react';\n\nconst ContentContainer = styled.div`\n    padding-top: 52.63px;\n    margin-left: 20px;\n    margin-right: 20px;\n`;\n\nconst CovidAlert = () => {\n    return <Segment placeholder>\n        <Header icon>\n            <Icon name=\"exclamation circle\" color=\"blue\" />\n            A notice to our customers regarding COVID19\n        </Header>\n        <span>\n            In compliance with the Governor's order, the Clubhouse will be closed as of 3/24. Watch our Facebook and Discord for re-opening celebration announcements once the closure is lifted!\n        </span>\n        <br />\n        <span>The Clubhouse and its staff wishes all of our friends well!</span>\n    </Segment>\n}\n\nexport default function Main() {\n    return (\n        <ContentContainer>\n            <br />\n\n            <Switch>\n                <Route exact path=\"/\" component={CovidAlert} />\n                <Route exact path=\"/manage-inventory\" component={Home} />\n                <Route exact path=\"/new-sale\" component={Sale} />\n                <Route exact path=\"/browse-sales\" component={BrowseSales} />\n                <Route exact path=\"/browse-inventory\" component={DeckboxClone} />\n                <Route exact path=\"/public-inventory\" component={PublicInventory} />\n                <Route exact path=\"/receiving\" component={Receiving} />\n                <Route exact path=\"/reports\" component={Reports} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/logout\" component={Logout} />\n            </Switch>\n        </ContentContainer>\n    )\n}","import React from 'react';\nimport ballLogo from './logos/magic-ball.png'\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { AuthContext } from './AuthProvider';\n\nconst style = {\n    background: \"linear-gradient(#2185d0, #206ac6)\",\n    boxShadow: '0 3px 5px 0 rgba(0,0,0,.25)'\n}\n\nclass Header extends React.Component {\n    render() {\n        const { pathname } = this.props.location;\n\n        return (\n            <AuthContext.Consumer>\n                {({ loggedIn }) => {\n                    return (\n                        <Menu inverted fixed=\"top\" style={style}>\n                            <Menu.Item as={Link} replace to=\"/\">\n                                <img src={ballLogo} style={{ marginRight: '7px' }} alt=\"logo\" />\n                                <span><h3>Clubhouse Collection</h3></span>\n                            </Menu.Item>\n                            <Menu.Menu position=\"right\">\n                                <Menu.Item active={pathname === '/public-inventory'} position=\"right\" as={Link} replace to=\"/public-inventory\">\n                                    Search\n                                </Menu.Item>\n                                {loggedIn && <Dropdown item icon=\"bars\">\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item active={pathname === '/manage-inventory'} as={Link} replace to=\"/manage-inventory\">\n                                            <Icon name=\"plus\" color=\"blue\" />Manage Inventory\n                                        </Dropdown.Item>\n                                        <Dropdown.Item active={pathname === '/new-sale'} as={Link} replace to=\"/new-sale\" >\n                                            <Icon name=\"dollar sign\" color=\"blue\" />New Sale\n                                        </Dropdown.Item>\n                                        <Dropdown.Item active={pathname === '/receiving'} as={Link} replace to=\"/receiving\" >\n                                            <Icon name=\"list alternate outline\" color=\"blue\" />Receiving\n                                        </Dropdown.Item>\n\n                                        <Dropdown.Divider />\n\n                                        <Dropdown.Item active={pathname === '/browse-inventory'} as={Link} replace to=\"/browse-inventory\" >\n                                            <Icon name=\"box\" color=\"blue\" />Browse Inventory\n                                        </Dropdown.Item>\n                                        <Dropdown.Item active={pathname === '/browse-sales'} as={Link} replace to=\"/browse-sales\" >\n                                            <Icon name=\"eye\" color=\"blue\" />Browse Sales\n                                        </Dropdown.Item>\n                                        <Dropdown.Item active={pathname === '/reports'} as={Link} replace to=\"/reports\" >\n                                            <Icon name=\"chart bar\" color=\"blue\" />Reporting (Beta)\n                                        </Dropdown.Item>\n\n                                        <Dropdown.Divider />\n\n                                        <Dropdown.Item active={pathname === '/logout'} as={Link} replace to=\"/logout\" >\n                                            <Icon name=\"log out\" color=\"blue\" />Log out\n                                        </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                </Dropdown>}\n                                {!loggedIn && <Menu.Item active={pathname === '/login'} position=\"right\" as={Link} replace to=\"/login\">\n                                    Log in\n                                    </Menu.Item>}\n                            </Menu.Menu>\n                        </Menu >\n                    );\n                }}\n            </AuthContext.Consumer>\n        );\n    }\n}\n\nexport default withRouter(props => <Header {...props} />);\n","import React from 'react';\nimport Main from './Main';\nimport Header from './Header';\nimport AuthProvider from './AuthProvider';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <AuthProvider>\n                <Header />\n                <Main />\n            </AuthProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}