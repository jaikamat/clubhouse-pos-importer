{"version":3,"sources":["api_resources.js","logos/magic-ball.png","makeAuthHeader.js","SearchBar.js","utils/parseQoh.js","QohLabels.js","createToast.js","CardImage.js","Price.js","MarketPrice.js","ScryfallCardListItem.js","ScryfallCardList.js","Home.js","BrowseCardItem.js","BrowseCardList.js","SalePriceTotal.js","SaleLineItem.js","CustomerSaleList.js","PrintList.js","utils/sortSaleList.js","SuspendedSale.js","Sale.js","SalesListItem.js","SalesList.js","BrowseSales.js","PublicCardItem.js","PublicCardList.js","PublicInventory.js","DeckboxCloneForm.js","DeckboxCloneRow.js","DeckboxClone.js","AuthProvider.js","Login.js","Logout.js","Receiving/ReceivingSearchItem.js","Receiving/ReceivingSearchList.js","Receiving/ReceivingListItem.js","Receiving/CashReport.js","Receiving/ReceivingListTotals.js","Receiving/printCashReport.js","Receiving/Receiving.js","Main.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["env","process","REACT_APP_ENVIRONMENT","endpoints","GET_CARDS_BY_TITLE","GET_CARD_QTY_FROM_INVENTORY","FINISH_SALE","ADD_CARD_TO_INVENTORY","GET_INVENTORY_QUERY","GET_SALES_BY_TITLE","GET_SCRYFALL_BULK_BY_TITLE","GET_CARDS_BY_FILTER","GET_SET_NAMES","SUSPEND_SALE","LOGIN","SCRYFALL_AUTOCOMPLETE","SCRYFALL_SEARCH","SCRYFALL_ID_SEARCH","module","exports","makeAuthHeader","Authorization","localStorage","getItem","SearchBar","props","useState","isLoading","setIsLoading","results","setResults","handleResultSelect","e","a","result","setTimeout","$","select","handleSearchSelect","title","console","log","Search","onSearchChange","_","debounce","value","length","axios","get","headers","data","formattedResults","map","el","slice","leading","trailing","onResultSelect","loading","placeholder","selectFirstResult","id","onFocus","target","onBlur","parseQoh","inventoryQty","foilQty","nonfoilQty","FOIL_NM","FOIL_LP","FOIL_MP","FOIL_HP","NONFOIL_NM","NONFOIL_LP","NONFOIL_MP","NONFOIL_HP","QohLabels","foilColor","color","nonfoilColor","Fragment","Label","image","Detail","createToast","header","message","duration","toaster","notify","Message","compact","Header","position","style","boxShadow","zIndex","transition","CardImage","state","hovered","mouseOver","setState","mouseOut","this","image_uris","card_faces","hover","Image","src","normal","size","transform","onMouseOver","onMouseOut","React","Component","Price","num","price","Number","toFixed","isNaN","foilStyle","backgroundColor","backgroundImage","MarketPrice","finish","setPrice","setLoading","useEffect","finishStatus","prices","tag","Icon","name","finishes","key","text","cardConditions","checkCardFinish","nonfoilProp","foilProp","selectedFinish","finishDisabled","ScryfallCardListItem","quantity","nonfoil","foil","selectedCondition","submitDisable","submitLoading","handleFinishChange","handleConditionChange","handleQuantityChange","val","parseInt","handleFocus","handleBlur","handleInventoryAdd","type","post","cardInfo","qoh","focus","set_name","set","rarity","Segment","Item","Group","divided","Content","as","className","fontSize","String","toUpperCase","Description","Form","Field","control","Input","label","onChange","Select","options","disabled","Button","primary","onClick","ScryfallCardList","cards","card","showImage","showImages","quantities","Home","searchResults","inventoryQuantities","term","params","ids","scryfallIds","inventoryRes","handleImageToggle","Divider","icon","createConditionOptions","removeZeroedQuantites","pickBy","p","Object","entries","d","conditionFinish","qty","split","join","createInitialSelectedFinish","keysMapped","keys","k","uniq","indexOf","BrowseCardItem","selectedFinishCondition","selectedFinishConditionQty","quantityToSell","conditionOptions","numVal","handleSelectedFinishCondition","handlePriceChange","property","handleAddToSale","addToSaleList","Dropdown","selection","step","BrowseCardList","SalePriceTotal","saleList","total","reduce","acc","qtyToSell","SaleLineItem","finishCondition","deleteLineItem","setHovered","Table","Row","Cell","singleLine","circular","CustomerSaleList","removeFromSaleList","Body","PrintList","printClicked","print","window","saleListCards","display","float","c","sortSaleList","ORDER","helpSort","arrayConst","colorsLength","cardFace","colors","type_line","includes","sort","b","localeCompare","styled","div","ClearMargin","CharLimit","SuspendedSale","restoreSale","deleteSuspendedSale","saleListLength","suspendSale","sales","setSales","saleID","setSaleID","modalOpen","setModalOpen","customerName","setCustomerName","notes","setNotes","setDisabled","suspendBtn","restoreBtn","deleteBtn","loadingBtn","setLoadingBtn","getSales","clearFields","modalTrigger","submitSuspendSale","submitRestoreSale","submitDeleteSale","Modal","trigger","open","Grid","columns","stackable","relaxed","Column","width","substring","TextArea","fluid","s","_id","info","Actions","initialState","showModal","submitDisabled","searchTerm","suspendedSale","list","Sale","response","newCard","oldState","idx","findIndex","splice","push","sortedCards","newState","reject","delete","ops","finalizeSale","sale_data","closeModal","floated","alignItems","clearing","sub","basic","inverted","SalesListItem","saleData","quantitySold","cardList","pre","curr","moment","createTime","format","SalesList","celled","unstackable","HeaderCell","card_list","BrowseSales","salesList","cardName","Wrapper","InventoryWrapper","InventoryRow","ImageWrapper","PublicCardItem","myImage","borderRadius","displayFoil","displayNonfoil","gridStyle","flexWrap","alignContent","height","PublicCardList","PublicInventory","Subheader","formatDropdownOptions","priceFilterDropdownOptions","finishDropdownOptions","sortByDropdownOptions","sortByDirectionDropdownOptions","sortByColorDropdownOptions","setName","priceNum","priceFilter","sortBy","colorsArray","sortByDirection","setNames","DeckboxCloneForm","editionDropdownOptions","handleSearchBlur","handleChange","handleDropdownChange","setNameOptions","concatWithBlankOption","concat","widths","search","multiple","defaultValue","labelPosition","handleSubmit","conditionMap","NM","LP","MP","HP","Tooltip","image_uri","posX","posY","left","background","DeckboxCloneRow","mouseInside","mouseX","mouseY","mouseEnter","clientX","offsetLeft","clientY","offsetTop","mouseLeave","mouseMove","inventory","condition","onMouseEnter","onMouseLeave","onMouseMove","cursor","v","DeckboxClone","count","currentPage","numPages","pageArray","cachedFilters","showPages","searchTouched","fetchData","filters","page","Math","ceil","pages","range","handlePage","showLeftPageButtons","showRightPageButtons","Container","Dimmer","active","marginTop","Loader","secondary","striped","colSpan","Menu","Footer","AuthContext","createContext","AuthProvider","loggedIn","setLoggedIn","handleLogin","username","password","toLowerCase","token","setItem","authed","handleLogout","removeItem","Provider","children","btnLoading","Login","handleInputChange","Consumer","login","to","Logout","ReceivingCardItem","setQuantity","cashPrice","setCashPrice","creditPrice","setCreditPrice","setSelectedCondition","marketPrice","setMarketPrice","setSelectedFinish","validateQty","validateTradeTypes","addToList","ReceivingCardList","TRADE_TYPE","ReceivingListItem","uuid_key","removeFromList","tradeType","activeTradeType","CASH","CREDIT","whiteSpace","CashReport","receivingList","countByPriceAndID","closeCashModal","chain","filter","temp_uuid","groupBy","mapValues","mergedWithQty","uniqBy","tradeQty","totalCashOut","sumBy","ReceivingListTotals","selectAll","commitToInventory","setShowModal","showCashModal","setShowCashModal","submitToInventory","cashTotal","creditTotal","justifyContent","Or","Statistic","Value","divToPrint","document","getElementById","popup","write","innerHTML","close","printCashReport","closeOnDimmerClick","onClose","DefaultPlaceholder","headerText","Receiving","setSearchResults","setReceivingList","mergedData","copiedState","remove","previousState","find","stateWithUnremovedProps","removedProps","omit","promises","Promise","all","initialTradeType","times","uuid","forEach","arr","otherType","ContentContainer","CovidAlert","Main","exact","path","component","pathname","location","fixed","Link","replace","ballLogo","marginRight","alt","item","withRouter","App","Boolean","hostname","match","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bce86b2.chunk.js","sourcesContent":["// Maps all GCF and Scryfall API endpoints for code re-use\nconst { REACT_APP_ENVIRONMENT } = process.env;\n\n/**\n * Check the environment for dev - if dev, we reach out\n * to all endpoints appended by `_test` instead of production\n */\nconst env = REACT_APP_ENVIRONMENT === 'development' ? '_test' : '';\n\nconst endpoints = {\n    GET_CARDS_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByTitle${env}`,\n    GET_CARD_QTY_FROM_INVENTORY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsFromInventory${env}`,\n    FINISH_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/finishSale${env}`,\n    ADD_CARD_TO_INVENTORY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/addCardToInventory${env}`,\n    GET_INVENTORY_QUERY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/inventorySearchQuery${env}`,\n    GET_SALES_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getSales${env}`,\n    GET_SCRYFALL_BULK_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getScryfallBulkCardsByTitle${env}`,\n    GET_CARDS_BY_FILTER:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByFilter${env}`,\n    GET_SET_NAMES:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByFilter${env}/set_names`,\n    SUSPEND_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/suspendSale${env}`,\n    LOGIN:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getJwt${env}`,\n\n    SCRYFALL_AUTOCOMPLETE: 'https://api.scryfall.com/cards/autocomplete',\n    SCRYFALL_SEARCH: 'https://api.scryfall.com/cards/search',\n    SCRYFALL_ID_SEARCH: 'https://api.scryfall.com/cards/'\n};\n\nmodule.exports = endpoints;\n","module.exports = __webpack_public_path__ + \"static/media/magic-ball.c3fcddd6.png\";","/**\n * This function is a helper for Axios, it yields an object for Axios params\n */\nexport default function makeAuthHeader() {\n    const header = { Authorization: `Bearer ${localStorage.getItem('clubhouse_JWT')}` };\n    return header;\n}","import React, { useState } from 'react';\nimport { Search } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_AUTOCOMPLETE } from './api_resources';\nimport $ from 'jquery';\n\nexport default function SearchBar(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [results, setResults] = useState([]);\n\n    const handleSearchChange = (e, { value }) => { // `value` is the search input string\n        if (value.length < 1) {\n            setIsLoading(false);\n            setResults([]);\n            return;\n        }\n\n        if (value.length < 3) return; // Don't search if only 2 letters in input\n\n        setIsLoading(true);\n\n        setTimeout(async () => {\n            const { data } = await axios.get(\n                `${SCRYFALL_AUTOCOMPLETE}?q=${value}`,\n                { headers: makeAuthHeader() }\n            );\n\n            const formattedResults = data.data.map(el => ({ title: el })).slice(0, 7);\n\n            setResults(formattedResults);\n            setIsLoading(false);\n        }, 100);\n    };\n\n    const handleResultSelect = async (e, { result }) => {\n        // This line is a hacky way to get around the fact that if we just select(), then\n        // when the user manually clicks the first (or any) result in the resultlist, it does not select,\n        // presumably because there is some collision between selecting the resultList element and focusing the input\n        setTimeout(() => $('#searchBar').select(), 10);\n        try {\n            setIsLoading(true);\n            await props.handleSearchSelect(result.title);\n            setIsLoading(false);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <Search\n            onSearchChange={_.debounce(handleSearchChange, 500, { leading: false, trailing: true })}\n            onResultSelect={handleResultSelect}\n            loading={isLoading}\n            results={results}\n            placeholder=\"Search for a card\"\n            selectFirstResult={true}\n            id=\"searchBar\"\n            onFocus={e => e.target.select()}\n            onBlur={props.onBlur} // Used to clear state in the Browse Inventory feature\n        />\n    );\n}\n","// This function parses the `qoh` object from mongo into something more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function parseQoh(inventoryQty) {\n    let foilQty = 0;\n    let nonfoilQty = 0;\n\n    if (inventoryQty) { // Check to see if props exist\n        foilQty =\n            (inventoryQty.FOIL_NM || 0) +\n            (inventoryQty.FOIL_LP || 0) +\n            (inventoryQty.FOIL_MP || 0) +\n            (inventoryQty.FOIL_HP || 0);\n\n        nonfoilQty =\n            (inventoryQty.NONFOIL_NM || 0) +\n            (inventoryQty.NONFOIL_LP || 0) +\n            (inventoryQty.NONFOIL_MP || 0) +\n            (inventoryQty.NONFOIL_HP || 0);\n    }\n\n    return [foilQty, nonfoilQty];\n}","import React from 'react';\nimport { Label } from 'semantic-ui-react';\nimport parseQoh from './utils/parseQoh';\n\n// This component parses the `qoh` object from mongo into something\n// more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function QohLabels({ inventoryQty }) {\n    const [foilQty, nonfoilQty] = parseQoh(inventoryQty);\n\n    const foilColor = {};\n    if (foilQty > 0) { foilColor.color = 'blue'; }\n\n    const nonfoilColor = {};\n    if (nonfoilQty > 0) { nonfoilColor.color = 'blue'; }\n\n    return (\n        <React.Fragment>\n            <Label {...foilColor} image>\n                Foil\n        <Label.Detail>{foilQty}</Label.Detail>\n            </Label>\n            <Label {...nonfoilColor} image>\n                Nonfoil\n        <Label.Detail>{nonfoilQty}</Label.Detail>\n            </Label>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport toaster from 'toasted-notes';\n\nconst createToast = ({ color, header, message, duration = 2000 }) => {\n    return toaster.notify(\n        () => (\n            <Message color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </Message>\n        ),\n        {\n            position: 'bottom-right',\n            duration: duration\n        }\n    );\n}\n\nexport default createToast;","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nconst style = {\n    boxShadow: '2px 2px 5px 0 rgba(0,0,0,.25)',\n    zIndex: '10',\n    transition: 'all .2s ease-in-out'\n}\n\nclass CardImage extends React.Component {\n    state = { hovered: false };\n\n    mouseOver = () => { this.setState({ hovered: true }) };\n\n    mouseOut = () => { this.setState({ hovered: false }) };\n\n    render() {\n        const { image_uris, card_faces, hover = true } = this.props // default prop `hover` must be true\n        try {\n            // If normal prop `image_uris.normal` doesn't exist, move to catch block for flip card faces\n            return <Image\n                src={image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        } catch (e) {\n            return <Image src={\n                card_faces[0].image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        }\n    }\n};\n\nexport default CardImage;\n","import React from 'react';\n\nconst Price = ({ num }) => {\n    const price = Number(num).toFixed(2);\n    if (isNaN(price)) return <span>$0.00</span>;\n    return <span>${price}</span>;\n};\n\nexport default Price;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Price from './Price';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_ID_SEARCH } from './api_resources';\nimport { Label, Icon } from 'semantic-ui-react';\n\nconst foilStyle = {\n    backgroundColor: '#ffcfdf',\n    backgroundImage: 'linear-gradient(90deg, #ffcfdf 0%, #b0f3f1 74%)'\n}\n\nexport default function MarketPrice({ id, finish }) {\n    const [price, setPrice] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async function fetchData() {\n            setLoading(true);\n            const { data } = await axios.get(`${SCRYFALL_ID_SEARCH}${id}`, { headers: makeAuthHeader() });\n            let finishStatus = 'usd';\n\n            if (finish === 'FOIL') finishStatus += '_foil';\n\n            setPrice(Number(data.prices[finishStatus]));\n            setLoading(false);\n        })();\n    }, [id, finish]);\n\n    return (\n        <Label tag style={finish === 'FOIL' ? foilStyle : null}>\n            {loading ? <Icon loading name='spinner' /> : <span>Est. {price ? <Price num={price} /> : 'not found'}</span>}\n        </Label>\n    );\n}\n","import React, { Component } from 'react';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Item\n} from 'semantic-ui-react';\nimport axios from 'axios';\nimport QohLabels from './QohLabels';\nimport createToast from './createToast';\nimport CardImage from './CardImage';\nimport makeAuthHeader from './makeAuthHeader';\nimport MarketPrice from './MarketPrice'\nimport { ADD_CARD_TO_INVENTORY } from './api_resources';\nimport $ from 'jquery';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil`\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nfunction checkCardFinish(nonfoilProp, foilProp) {\n    if (!nonfoilProp && foilProp) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoilProp && !foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoilProp && foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default class ScryfallCardListItem extends Component {\n    state = {\n        quantity: 0,\n        selectedFinish: checkCardFinish(this.props.nonfoil, this.props.foil)\n            .selectedFinish,\n        selectedCondition: 'NM',\n        finishDisabled: checkCardFinish(this.props.nonfoil, this.props.foil)\n            .finishDisabled,\n        submitDisable: false,\n        inventoryQty: this.props.inventoryQty,\n        submitLoading: false\n    };\n\n    handleFinishChange = (e, { value }) => {\n        this.setState({ selectedFinish: value }, () => {\n            console.log(this.state);\n        });\n    };\n\n    handleConditionChange = (e, { value }) => {\n        this.setState({ selectedCondition: value }, () => {\n            console.log(this.state);\n        });\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const val = parseInt(value);\n        const quantity = isNaN(val) ? '' : val; // Check for NaN\n        this.setState({ quantity: quantity });\n    };\n\n    // Remove input placeholder when user tries to enter a number (to reduce user error)\n    handleFocus = () => {\n        if (this.state.quantity === 0) {\n            this.setState({ quantity: '' })\n        }\n    }\n\n    // Restore input placeholder when user blurs field\n    handleBlur = () => {\n        if (this.state.quantity === '') {\n            this.setState({ quantity: 0 })\n        }\n    }\n\n    handleInventoryAdd = async (e, { value }) => {\n        const { quantity, selectedFinish, selectedCondition } = this.state;\n        const { name, nonfoil, foil } = this.props;\n        // This is the identifier for quantities of different finishes/conditions in the db\n        const type = `${selectedFinish}_${selectedCondition}`;\n\n        try {\n            this.setState({ submitDisable: true, submitLoading: true });\n\n            const { data } = await axios.post(ADD_CARD_TO_INVENTORY, {\n                quantity: quantity,\n                type: type,\n                cardInfo: { ...this.props },\n            }, { headers: makeAuthHeader() });\n\n            createToast({\n                color: 'green',\n                header: `${quantity}x ${name} ${quantity > 0 ? 'added' : 'removed'}!`,\n                duration: 2000\n            });\n\n            this.setState({\n                quantity: 0,\n                selectedFinish: checkCardFinish(nonfoil, foil).selectedFinish,\n                selectedCondition: 'NM',\n                finishDisabled: checkCardFinish(nonfoil, foil).finishDisabled,\n                submitDisable: false,\n                inventoryQty: data.qoh,\n                submitLoading: false\n            });\n\n            // Highlight the input after successful card add\n            $('#searchBar').focus().select();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            selectedFinish,\n            selectedCondition,\n            finishDisabled,\n            quantity,\n            submitDisable,\n            inventoryQty,\n            submitLoading\n        } = this.state;\n        const {\n            image_uris,\n            name,\n            set_name,\n            set,\n            rarity,\n            card_faces,\n            id\n        } = this.props;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as='h3'>\n                                {name}\n                                {' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohLabels inventoryQty={inventoryQty} />\n                                {' '}\n                                <MarketPrice id={id} finish={selectedFinish} />\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity\"\n                                            value={quantity}\n                                            onChange={this.handleQuantityChange}\n                                            onFocus={this.handleFocus}\n                                            onBlur={this.handleBlur}\n                                        />\n                                        <Form.Field\n                                            label=\"Finish\"\n                                            control={Select}\n                                            value={selectedFinish}\n                                            options={finishes}\n                                            disabled={finishDisabled}\n                                            onChange={this.handleFinishChange}\n                                        />\n                                        <Form.Field\n                                            label=\"Condition\"\n                                            control={Select}\n                                            value={selectedCondition}\n                                            options={cardConditions}\n                                            onChange={this.handleConditionChange}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to Inventory?\"\n                                            control={Button}\n                                            primary\n                                            disabled={\n                                                quantity === 0 ||\n                                                quantity === '' ||\n                                                submitDisable\n                                            }\n                                            onClick={this.handleInventoryAdd}\n                                            loading={submitLoading}\n                                        >\n                                            Submit\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport ScryfallCardListItem from './ScryfallCardListItem';\n\nfunction ScryfallCardList(props) {\n    // Tie the QOH to the fetched card, if it exists!\n    const cardList = props.cards.map(card => {\n        return (\n            <ScryfallCardListItem\n                showImage={props.showImages}\n                key={card.id}\n                {...card}\n                inventoryQty={props.quantities[card.id]}\n            />\n        );\n    });\n\n    return cardList\n}\n\nexport default ScryfallCardList;\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport ScryfallCardList from './ScryfallCardList';\nimport { Segment, Header, Icon, Divider } from 'semantic-ui-react'\nimport { GET_CARD_QTY_FROM_INVENTORY, GET_SCRYFALL_BULK_BY_TITLE } from './api_resources';\n\nclass Home extends React.Component {\n    state = { searchResults: [], inventoryQuantities: [], showImages: true };\n\n    handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(\n                GET_SCRYFALL_BULK_BY_TITLE,\n                {\n                    params: { title: term },\n                    headers: makeAuthHeader()\n                }\n            );\n\n            const ids = data.map(el => el.id);\n\n            // Fetches only the in-stock qty of a card tied to an `id`\n            const inventoryRes = await axios.post(\n                GET_CARD_QTY_FROM_INVENTORY,\n                { scryfallIds: ids },\n                { headers: makeAuthHeader() }\n            );\n\n            this.setState({\n                searchResults: data,\n                inventoryQuantities: inventoryRes.data\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    handleImageToggle = () => {\n        this.setState({ showImages: !this.state.showImages });\n    };\n\n    render() {\n        const { searchResults } = this.state;\n\n        return (\n            <React.Fragment>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n\n                <Header as=\"h2\">Manage Inventory</Header>\n                <Divider />\n\n                {!searchResults.length &&\n                    <Segment placeholder>\n                        <Header icon>\n                            <Icon name=\"search\" />\n                            <em>\"Searching the future for answers often leads to further questions.\"</em>\n                        </Header>\n                    </Segment>}\n\n\n                <ScryfallCardList\n                    showImages={this.state.showImages}\n                    cards={this.state.searchResults}\n                    quantities={this.state.inventoryQuantities}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n    Segment,\n    Label,\n    Form,\n    Input,\n    Dropdown,\n    Button,\n    Item\n} from 'semantic-ui-react';\nimport CardImage from './CardImage';\nimport MarketPrice from './MarketPrice';\nimport QohLabels from './QohLabels';\nimport $ from 'jquery';\nimport _ from 'lodash';\n\n/**\n * Creates a list of conditions for the dropdown menu from the `qoh`\n * Note: Is this not needed if we default select initially?\n * @param {Object} qoh\n * @param {String} id\n */\nfunction createConditionOptions(qoh, id) {\n    const removeZeroedQuantites = _.pickBy(qoh, p => p > 0); // Quantites of zero not included\n\n    return Object.entries(removeZeroedQuantites).map(d => {\n        const [conditionFinish, qty] = d;\n\n        return {\n            text: `${conditionFinish.split('_').join(' | ')} | Qty: ${qty}`,\n            value: conditionFinish,\n            key: `${id}${conditionFinish}`\n        };\n    });\n}\n\n/**\n * Creates initial selectedFinish value, used for the MarketPrice component\n * Returns FOIL or NONFOIL depending on what's in current inventory (qoh)\n * @param {Object} qoh\n */\nfunction createInitialSelectedFinish(qoh) {\n    const removeZeroedQuantites = _.pickBy(qoh, p => p > 0);\n    // Isolate only the FOIL or NONFOIL values with mapping\n    const keysMapped = _.keys(removeZeroedQuantites).map(k => k.split('_')[0]);\n    const uniqueValues = _.uniq(keysMapped);\n    return uniqueValues.indexOf('NONFOIL') > -1 ? 'NONFOIL' : 'FOIL';\n}\n\nexport default class BrowseCardItem extends React.Component {\n    state = {\n        selectedFinishCondition: '',\n        selectedFinishConditionQty: 0,\n        quantityToSell: 0,\n        price: 0,\n        // Excludes condition ex. `FOIL` rather than `FOIL_NM`. Initialize at nonfoil unless only foil printing\n        selectedFinish: createInitialSelectedFinish(this.props.qoh),\n        conditionOptions: createConditionOptions(this.props.qoh, this.props.id)\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const { selectedFinishConditionQty } = this.state;\n        let numVal = parseInt(value);\n\n        if (numVal > selectedFinishConditionQty) {\n            numVal = selectedFinishConditionQty;\n        }\n\n        if (isNaN((numVal)) || numVal < 0) { numVal = 0; }\n\n        this.setState({ quantityToSell: numVal });\n    };\n\n    handleSelectedFinishCondition = (e, { value }) => {\n        this.setState({\n            selectedFinishCondition: value,\n            selectedFinishConditionQty: this.props.qoh[value],\n            selectedFinish: value.split('_')[0] // Change selectedFinish after user selection\n        });\n    };\n\n    handlePriceChange = (e, { value }) => {\n        let numVal = Number(value);\n        if (isNaN((numVal)) || numVal < 0) { numVal = 0; }\n        this.setState({ price: numVal });\n    };\n\n    // Remove input placeholder when user tries to enter a number (to reduce user error)\n    handleFocus = (property) => {\n        if (this.state[property] === 0) {\n            this.setState({ [property]: '' })\n        }\n    }\n\n    // Restore input placeholder when user blurs field\n    handleBlur = (property) => {\n        if (this.state[property] === '') {\n            this.setState({ [property]: 0 })\n        }\n    }\n\n    handleAddToSale = () => {\n        const { selectedFinishCondition, quantityToSell, price } = this.state;\n        const { qoh, id } = this.props;\n\n        this.props.addToSaleList(\n            { ...this.props },\n            selectedFinishCondition,\n            quantityToSell,\n            price\n        );\n\n        // Reset state\n        this.setState({\n            selectedFinishCondition: '',\n            selectedFinishConditionQty: 0,\n            quantityToSell: 0,\n            price: 0,\n            conditionOptions: createConditionOptions(qoh, id),\n            selectedFinish: createInitialSelectedFinish(qoh)\n        });\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    render() {\n        const {\n            name,\n            image_uris,\n            set,\n            set_name,\n            rarity,\n            qoh,\n            id,\n            card_faces\n        } = this.props;\n\n        const {\n            selectedFinishCondition,\n            selectedFinishConditionQty,\n            selectedFinish,\n            conditionOptions,\n            quantityToSell,\n            price\n        } = this.state;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as=\"h3\">\n                                {name}{' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohLabels inventoryQty={qoh} />\n                                {' '}\n                                <MarketPrice id={id} finish={selectedFinish} />\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Dropdown}\n                                            selection\n                                            placeholder=\"Select inventory\"\n                                            options={conditionOptions}\n                                            value={selectedFinishCondition}\n                                            label=\"Select finish/condition\"\n                                            onChange={this.handleSelectedFinishCondition}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity to sell\"\n                                            value={quantityToSell}\n                                            onChange={this.handleQuantityChange}\n                                            disabled={!selectedFinishConditionQty}\n                                            onFocus={() => this.handleFocus('quantityToSell')}\n                                            onBlur={() => this.handleBlur('quantityToSell')}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Price\"\n                                            value={price}\n                                            onChange={this.handlePriceChange}\n                                            disabled={!selectedFinishConditionQty}\n                                            onFocus={() => this.handleFocus('price')}\n                                            onBlur={() => this.handleBlur('price')}\n                                            step={0.5}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to sale?\"\n                                            control={Button}\n                                            primary\n                                            onClick={this.handleAddToSale}\n                                            disabled={!quantityToSell}\n                                        >\n                                            Sell\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport BrowseCardItem from './BrowseCardItem';\n\nexport default function BrowseCardList(props) {\n    const { cards, addToSaleList } = props;\n\n    return cards.map(card => {\n        return (\n            <BrowseCardItem\n                key={card.id}\n                {...card}\n                addToSaleList={addToSaleList}\n            />\n        );\n    });\n}\n","import React from 'react';\nimport Price from './Price';\n\nconst SalePriceTotal = ({ saleList }) => {\n    const total = saleList.length\n        ? saleList.reduce(\n              (acc, val) => acc + parseInt(val.qtyToSell) * Number(val.price),\n              0\n          )\n        : 0;\n\n    return <Price num={total} />;\n};\n\nexport default SalePriceTotal;\n","import React, { useState } from 'react';\nimport { Button, Label, Table } from 'semantic-ui-react';\nimport Price from './Price';\n\nexport default function SaleLineItem(props) {\n    const {\n        name,\n        set,\n        finishCondition,\n        qtyToSell,\n        price,\n        rarity,\n        deleteLineItem,\n        id\n    } = props;\n\n    const [hovered, setHovered] = useState(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell><h4>{name}</h4></Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                {qtyToSell}x @ <Price num={price} /> | {finishCondition}\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => deleteLineItem(id, finishCondition)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n","import React from 'react';\nimport SaleLineItem from './SaleLineItem';\nimport { Table } from 'semantic-ui-react';\n\nconst CustomerSaleList = ({ saleList, removeFromSaleList }) => {\n    return <Table>\n        <Table.Body>\n            {saleList.map(card => {\n                return <SaleLineItem\n                    {...card}\n                    key={`${card.id}${card.finishCondition}${card.qtyToSell}`}\n                    deleteLineItem={removeFromSaleList}\n                />\n            })}\n        </Table.Body>\n    </Table>\n\n};\n\nexport default CustomerSaleList;","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport Price from './Price';\nimport './PrintList.css';\nimport SalePriceTotal from './SalePriceTotal';\n\nconst Row = ({ id, name, qtyToSell, finishCondition, set_name, price }) => {\n    return <li key={id}>\n        <b>{name} | x{qtyToSell} | {finishCondition} | {set_name} | <Price num={price} /></b>\n    </li>\n}\n\nexport default class PrintList extends React.Component {\n    state = { printClicked: false }\n\n    print = () => {\n        this.setState({ printClicked: true }, () => {\n            window.print();\n            this.setState({ printClicked: false })\n        });\n    }\n\n    render() {\n        const { saleListCards } = this.props;\n        const { printClicked } = this.state;\n\n        if (saleListCards.length > 0) { // Ensure print is hidden if no cards in list\n            return (\n                <React.Fragment>\n                    <Button style={{ display: 'inline-block', float: 'right' }} onClick={this.print} icon>\n                        <Icon name=\"print\" />\n                    </Button>\n\n                    <div id=\"printme\" style={{ display: printClicked ? 'inline-block' : 'none' }}>\n                        <ul>{saleListCards.map(c => Row(c))}</ul>\n                        <span><b>Subtotal: <SalePriceTotal saleList={saleListCards} /></b></span>\n                    </div>\n                </React.Fragment >\n            )\n        } else {\n            return null;\n        }\n    }\n}","/**\n * Takes in an unordered group of cards and sorts them according to The Clubhouse's specs:\n * WUBRG, then multicolor, then colorless, then land, alphabetically within each color/category\n */\nexport default function sortSaleList(cards) {\n    const ORDER = ['W', 'U', 'B', 'R', 'G', 'MULTI', 'COLORLESS', 'LAND'];\n\n    /**\n     * Main helper function that manages sort order\n     * @param {Object} card\n     */\n    function helpSort(card) {\n        let arrayConst = null;\n\n        let colorsLength = null;\n        let cardFace = null;\n\n        try {\n            // If colors don't exist, it's a flip card or storybook frame\n            colorsLength = card.colors.length;\n            cardFace = card;\n        } catch (e) {\n            try {\n                // Storybook frames from Eldraine may throw error\n                colorsLength = card.card_faces[0].colors.length;\n                cardFace = card.card_faces[0];\n            } catch (e) {\n                colorsLength = card.colors.length;\n                cardFace = card;\n            }\n        }\n\n        // Apply logic to return correct constant enum\n        if (colorsLength === 0) {\n            arrayConst = 'COLORLESS';\n        } else if (colorsLength === 1) {\n            arrayConst = cardFace.colors[0];\n        } else if (colorsLength > 1) {\n            arrayConst = 'MULTI';\n        }\n\n        // Drill into colorless cards, if they are lands or not\n        if (arrayConst === 'COLORLESS') {\n            if (cardFace.type_line.includes('Land')) {\n                arrayConst = 'LAND';\n            }\n        }\n\n        // Final check to guard against a null arrayConst\n        if (!arrayConst) { arrayConst = 'LAND' }\n\n        return arrayConst;\n    }\n\n    const alphaSort = cards.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n    });\n\n    const sorted = alphaSort.sort((a, b) => {\n        return ORDER.indexOf(helpSort(a)) - ORDER.indexOf(helpSort(b));\n    });\n\n    return sorted;\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SUSPEND_SALE } from './api_resources';\nimport { Modal, Button, Grid, Form, Message } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst Divider = styled.div`\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n    height: 100%;\n`;\n\nconst ClearMargin = styled.div`\n    margin-top: 0px;\n    margin-bottom: 0px;\n`;\n\nconst CharLimit = styled.p`\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.2);\n    float: right;\n`;\n\nexport default function SuspendedSale({ restoreSale, deleteSuspendedSale, saleListLength, suspendSale, id }) {\n    const [sales, setSales] = useState([]);\n    const [saleID, setSaleID] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [customerName, setCustomerName] = useState('');\n    const [notes, setNotes] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const [loadingBtn, setLoadingBtn] = useState({\n        suspendBtn: false,\n        restoreBtn: false,\n        deleteBtn: false\n    });\n\n    const getSales = async () => {\n        const { data } = await axios.get(SUSPEND_SALE);\n        setSales(data);\n    }\n\n    const clearFields = () => {\n        setCustomerName('');\n        setNotes('')\n        setSaleID('');\n    }\n\n    // Get the previously suspended sales on mount and parent state (_id) change\n    useEffect(() => { getSales(); }, [id]); // If the parent-level suspended-sale _id changes, we fetch again\n\n    const modalTrigger = <Button\n        style={{ display: 'inline-block', float: 'right' }}\n        onClick={() => setModalOpen(true)}\n        icon=\"ellipsis horizontal\" />\n\n    const submitSuspendSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ suspendBtn: true });\n        await suspendSale({ customerName, notes });\n        setModalOpen(false); // Close the modal to avoid \"flicker\" when state re-renders\n        await getSales(); // Parent _id does not change, re-fetch sales\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ suspendBtn: false });\n    }\n\n    const submitRestoreSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ restoreBtn: true });\n        await restoreSale(saleID);\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ restoreBtn: false });\n    }\n\n    const submitDeleteSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ deleteBtn: true });\n        await deleteSuspendedSale();\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ deleteBtn: false });\n    }\n\n    return <React.Fragment>\n        <Modal trigger={modalTrigger} open={modalOpen}>\n            <Modal.Header>Sales menu</Modal.Header>\n            <Modal.Content>\n                <Grid columns={2} stackable relaxed=\"very\">\n                    {saleListLength > 0 && <React.Fragment>\n                        <Grid.Column width=\"7\">\n                            <h3>Suspend Sale</h3>\n                            <Form>\n                                <ClearMargin>\n                                    <Form.Input\n                                        label=\"Customer Name\"\n                                        placeholder=\"Jace, the Mind Sculptor\"\n                                        value={customerName}\n                                        onChange={(e, { value }) => setCustomerName(value.substring(0, 50))} />\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <CharLimit>{customerName.length}/50</CharLimit>\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <Form.TextArea\n                                        label=\"Notes\"\n                                        placeholder=\"Sometimes, I forget things...\"\n                                        value={notes}\n                                        onChange={(e, { value }) => setNotes(value.substring(0, 150))} />\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <CharLimit>{notes.length}/150</CharLimit>\n                                </ClearMargin>\n                                <Form.Button primary disabled={disabled || !customerName} loading={loadingBtn.suspendBtn} onClick={submitSuspendSale}>Suspend Sale</Form.Button>\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column width=\"1\"><Divider /></Grid.Column>\n                    </React.Fragment>}\n                    <Grid.Column width=\"7\">\n                        <h3>Restore Sale</h3>\n                        {sales.length > 0 && <React.Fragment>\n                            <Form>\n                                <Form.Select\n                                    fluid\n                                    label=\"Previously suspended sales\"\n                                    options={sales.map(s => {\n                                        return {\n                                            key: s._id,\n                                            text: s.name,\n                                            value: s._id\n                                        }\n                                    })}\n                                    placeholder=\"Select a sale\"\n                                    onChange={(e, { value }) => setSaleID(value)}\n                                />\n                                <Form.Button primary disabled={disabled || !saleID} loading={loadingBtn.restoreBtn} onClick={submitRestoreSale}>Restore Sale</Form.Button>\n                            </Form>\n                        </React.Fragment>}\n                        {sales.length === 0 && <Message info>\n                            <Message.Header>No sales</Message.Header>\n                            Suspend a sale first\n                        </Message>}\n                    </Grid.Column>\n                </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n                {!!id && <Button color=\"red\" disabled={disabled} loading={loadingBtn.deleteBtn} onClick={submitDeleteSale}>Delete current Sale</Button>}\n                <Button primary disabled={disabled} onClick={() => setModalOpen(false)}>Cancel</Button>\n            </Modal.Actions>\n        </Modal>\n    </React.Fragment >\n}","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Button,\n    Modal,\n    Icon,\n    Divider\n} from 'semantic-ui-react';\nimport SearchBar from './SearchBar';\nimport BrowseCardList from './BrowseCardList';\nimport SalePriceTotal from './SalePriceTotal';\nimport CustomerSaleList from './CustomerSaleList';\nimport PrintList from './PrintList';\nimport _ from 'lodash';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_CARDS_BY_TITLE, FINISH_SALE, SUSPEND_SALE } from './api_resources';\nimport createToast from './createToast';\nimport sortSaleList from './utils/sortSaleList';\nimport SuspendedSale from './SuspendedSale';\nimport $ from 'jquery';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    showModal: false,\n    submitLoading: false,\n    submitDisabled: false,\n    searchTerm: '',\n    suspendedSale: {\n        _id: '',\n        name: '',\n        notes: '',\n        list: []\n    }\n};\n\nexport default class Sale extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term },\n                headers: makeAuthHeader()\n            });\n\n            this.setState({ searchResults: data, searchTerm: term });\n\n            if (data.length === 0) { $('#searchBar').focus().select() }\n        } catch (e) {\n            console.log(e.response);\n        }\n    };\n\n    /**\n     * Adds product to the sale list\n     */\n    addToSaleList = (card, finishCondition, qtyToSell, price) => {\n        const newCard = { ...card, finishCondition, qtyToSell, price };\n        const oldState = [...this.state.saleListCards];\n\n        // Need to make sure same ID's with differing conditions are separate line-items\n        const idx = oldState.findIndex(el => {\n            return (\n                el.id === newCard.id && el.finishCondition === finishCondition\n            );\n        });\n\n        if (idx !== -1) {\n            oldState.splice(idx, 1, newCard);\n        } else {\n            oldState.push(newCard);\n        }\n\n        // Sorting the saleList cards here, on add\n        const sortedCards = sortSaleList(oldState);\n\n        this.setState({ saleListCards: sortedCards });\n    };\n\n    /**\n     * Removes product from the sale list (this function is passed to the sale line items through props)\n     */\n    removeFromSaleList = (id, finishCondition) => {\n        const newState = _.reject([...this.state.saleListCards], el => {\n            return el.id === id && el.finishCondition === finishCondition;\n        });\n\n        this.setState({ saleListCards: newState });\n    };\n\n    /**\n     * Restores a sale (assigns a saleList to state) from a suspended sale from the db\n     */\n    restoreSale = async (id) => {\n        try {\n            const { data } = await axios.get(`${SUSPEND_SALE}/${id}`);\n            this.setState({ saleListCards: data.list, suspendedSale: data });\n            createToast({ color: 'green', header: `You are viewing ${data.name}'s sale` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    }\n\n    /**\n     * Suspends a sale (persists it to mongo) via the SuspendedSale component and API\n     */\n    suspendSale = async ({ customerName, notes }) => {\n        const { _id } = this.state.suspendedSale;\n\n        try {\n            if (!!_id) await axios.delete(`${SUSPEND_SALE}/${_id}`); // If we're suspended, delete the previous to replace\n\n            const { data } = await axios.post(SUSPEND_SALE, {\n                customerName: customerName,\n                notes: notes,\n                saleList: this.state.saleListCards\n            })\n\n            this.setState(initialState);\n            createToast({ color: 'green', header: `${data.ops[0].name}'s sale was suspended` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error`, message: `${e.response.data}` });\n        }\n    }\n\n    deleteSuspendedSale = async () => {\n        try {\n            const { _id, name } = this.state.suspendedSale;\n            await axios.delete(`${SUSPEND_SALE}/${_id}`);\n\n            this.setState(initialState);\n\n            createToast({ color: 'green', header: `${name}'s sale was deleted` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    }\n\n    /**\n     * Extracts the saleList state and uses it to complete sale\n     */\n    finalizeSale = async () => {\n        const { _id } = this.state.suspendedSale;\n\n        try {\n            this.setState({ submitLoading: true, submitDisabled: true });\n\n            // Must delete currently suspended sale to faithfully restore inventory prior to sale\n            if (!!_id) await axios.delete(`${SUSPEND_SALE}/${_id}`);\n\n            const { data } = await axios.post(FINISH_SALE, {\n                cards: this.state.saleListCards\n            }, { headers: makeAuthHeader() });\n\n            const saleID = data.sale_data.Sale.saleID;\n\n            createToast({\n                color: 'green',\n                header: 'Sale created in Lightspeed!',\n                message: `The id number is #${saleID}`,\n            });\n\n            this.setState(initialState);\n        } catch (e) {\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Sale was not created`,\n            });\n\n            this.setState(initialState);\n            console.log(e.response);\n        }\n    };\n\n    closeModal = () => {\n        this.setState({ showModal: false });\n    };\n\n    render() {\n        const {\n            searchResults,\n            saleListCards,\n            showModal,\n            submitLoading,\n            submitDisabled,\n            searchTerm,\n            suspendedSale\n        } = this.state;\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p>Zero results for <em>{searchTerm}</em></p>\n            }\n            return <p>Search for inventory to sell</p>; // Default text before search\n        }\n\n        const modalTrigger = <Button floated=\"right\" primary\n            onClick={() => this.setState({ showModal: true })}>\n            Finalize sale\n        </Button>\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Row>\n                        <Grid.Column width=\"11\">\n                            <Header as=\"h2\" style={{ display: \"inline-block\" }}>Inventory</Header>\n                            <Divider />\n\n                            {!searchResults.length &&\n                                <Segment placeholder>\n                                    <Header icon>\n                                        <Icon name=\"search\" />\n                                        <span>{searchNotification()}</span>\n                                    </Header>\n                                </Segment>}\n\n                            <BrowseCardList\n                                cards={searchResults}\n                                addToSaleList={this.addToSaleList}\n                            />\n                        </Grid.Column>\n                        <Grid.Column width=\"5\">\n                            <Header as=\"h2\" style={{ display: 'inline-block' }}>\n                                {suspendedSale.name === '' ? 'Sale Items' : `${suspendedSale.name}'s Items`}\n                            </Header>\n\n                            <SuspendedSale\n                                restoreSale={this.restoreSale}\n                                suspendSale={this.suspendSale}\n                                saleListLength={saleListCards.length}\n                                deleteSuspendedSale={this.deleteSuspendedSale}\n                                id={this.state.suspendedSale._id}\n                            />\n                            <PrintList saleListCards={saleListCards} />\n\n                            <Divider />\n\n                            {saleListCards.length === 0 &&\n                                <Segment placeholder>\n                                    <Header icon>\n                                        <Icon name=\"plus\" />\n                                        View and manage customer sale list here\n                                </Header>\n                                </Segment>}\n\n                            {saleListCards.length > 0 && <React.Fragment>\n                                <CustomerSaleList\n                                    removeFromSaleList={this.removeFromSaleList}\n                                    saleList={saleListCards}\n                                />\n                            </React.Fragment>}\n\n                            {saleListCards.length > 0 && (\n                                <Segment clearing>\n                                    <Header floated=\"left\">\n                                        <Header sub>Subtotal</Header>\n                                        <SalePriceTotal\n                                            saleList={saleListCards}\n                                        />\n                                    </Header>\n                                    <Modal\n                                        basic\n                                        open={showModal}\n                                        trigger={modalTrigger}>\n                                        <Modal.Content>\n                                            <Header inverted as=\"h2\">\n                                                Finalize this sale?\n                                            </Header>\n                                            <p>\n                                                Click 'Yes' to create a sale\n                                                in Lightspeed. Ensure that\n                                                you have all cards pulled and double-checked\n                                                the customer list. Undoing this action will require manual data entry!\n                                            </p>\n                                        </Modal.Content>\n                                        <Modal.Actions>\n                                            <Button\n                                                basic\n                                                color=\"red\"\n                                                inverted\n                                                onClick={this.closeModal}>\n                                                <Icon name=\"remove\" /> No\n                                            </Button>\n                                            <Button\n                                                color=\"green\"\n                                                inverted\n                                                onClick={this.finalizeSale}\n                                                loading={submitLoading}\n                                                disabled={submitDisabled}>\n                                                <Icon name=\"checkmark\" /> Yes\n                                            </Button>\n                                        </Modal.Actions>\n                                    </Modal>\n                                </Segment>)}\n                        </Grid.Column>\n                    </Grid.Row >\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst SalesListItem = ({ saleData, cardList }) => {\n    const quantitySold = cardList.reduce(\n        (pre, curr) => pre + curr.qtyToSell,\n        0\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>{saleData.saleID}</Table.Cell>\n            <Table.Cell>\n                {moment(saleData.createTime).format('MM/DD/YYYY - h:mm A')}\n            </Table.Cell>\n            <Table.Cell>{quantitySold}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default SalesListItem;\n","import React from 'react';\nimport SalesListItem from './SalesListItem';\nimport { Table } from 'semantic-ui-react';\n\nconst SalesList = ({ list }) => {\n    return (\n        <Table celled unstackable compact>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Sale ID</Table.HeaderCell>\n                    <Table.HeaderCell>Date of Sale</Table.HeaderCell>\n                    <Table.HeaderCell>Quantity Sold</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {list.map(({ sale_data, card_list, _id }) => (\n                    <SalesListItem\n                        saleData={sale_data}\n                        cardList={card_list}\n                        key={_id}\n                    />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default SalesList;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport SalesList from './SalesList';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_SALES_BY_TITLE } from './api_resources';\nimport { Header, Divider } from 'semantic-ui-react';\n\nclass BrowseSales extends Component {\n    state = { salesList: [], cardName: '' };\n\n    handleSearchSelect = async cardName => {\n        const { data } = await axios.get(GET_SALES_BY_TITLE, {\n            params: { cardName: cardName },\n            headers: makeAuthHeader()\n        });\n\n        this.setState({ salesList: data, cardName: cardName });\n    };\n\n    render() {\n        const { salesList, cardName } = this.state;\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n\n                <Header as=\"h2\">Browse Sales</Header>\n                <Divider />\n\n                <span>\n                    <em>\n                        {cardName !== '' && (\n                            <h4>\n                                {salesList.length} results for {cardName}\n                            </h4>\n                        )}\n                    </em>\n                </span>\n                <SalesList list={salesList} />\n            </div>\n        );\n    }\n}\n\nexport default BrowseSales;\n","import React from 'react';\nimport { Image, Label } from 'semantic-ui-react';\nimport MarketPrice from './MarketPrice';\nimport styled from 'styled-components';\nimport parseQoh from './utils/parseQoh';\n\nconst Wrapper = styled.div`\n    display: inline-block;\n    margin: 10px 10px 10px 10px;\n`;\n\nconst InventoryWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5px;\n    background-color: rgba(0, 0, 0, 0.9);\n    border-radius: 10px 10px 10px 10px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n`;\n\nconst InventoryRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 5px;\n`;\n\nconst ImageWrapper = styled.div`\n    width: 300px;\n    height: 418.3px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n    background: repeating-linear-gradient(45deg, #bfbfbf, #bfbfbf 10px, #b0b0b0 10px, #b0b0b0 20px);\n    border-radius: 15px;\n`;\n\nexport default function PublicCardItem({ image_uris, card_faces, qoh, id }) {\n    let myImage;\n\n    try {\n        // If normal prop doesn't exist, move to catch block for flip card faces\n        myImage = <Image src={image_uris.normal} size=\"medium\" style={{ borderRadius: '15px' }} />\n    } catch (e) {\n        myImage = <Image src={card_faces[0].image_uris.normal} size=\"medium\" style={{ borderRadius: '15px' }} />\n    }\n\n    const [foilQty, nonfoilQty] = parseQoh(qoh);\n\n    const displayFoil = (\n        <InventoryRow>\n            <Label color='blue' image>Foil<Label.Detail>{foilQty}</Label.Detail></Label>\n            <MarketPrice id={id} finish=\"FOIL\" />\n        </InventoryRow>\n    );\n\n    const displayNonfoil = (\n        <InventoryRow>\n            <Label color='blue' image>Nonfoil<Label.Detail>{nonfoilQty}</Label.Detail></Label>\n            <MarketPrice id={id} />\n        </InventoryRow>\n    );\n\n    return <React.Fragment>\n        <Wrapper>\n            <ImageWrapper>{myImage}</ImageWrapper>\n            <InventoryWrapper>\n                {foilQty > 0 ? displayFoil : null}\n                {nonfoilQty > 0 ? displayNonfoil : null}\n            </InventoryWrapper>\n        </Wrapper>\n    </React.Fragment>\n}","import React from 'react';\nimport PublicCardItem from './PublicCardItem';\nimport { Grid } from 'semantic-ui-react';\n\nconst gridStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'space-evenly',\n    height: '100%'\n};\n\nexport default function PublicCardList(props) {\n    const { cards, addToSaleList } = props;\n\n    return (\n        <Grid style={gridStyle} >\n            {cards.map(card => {\n                return (\n                    <PublicCardItem\n                        key={card.id}\n                        {...card}\n                        addToSaleList={addToSaleList}\n                    />\n                );\n            })}\n        </ Grid>\n    );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Icon,\n    Divider,\n} from 'semantic-ui-react';\nimport SearchBar from './SearchBar';\nimport PublicCardList from './PublicCardList';\nimport { GET_CARDS_BY_TITLE } from './api_resources';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    searchTerm: ''\n};\n\nexport default class PublicInventory extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term }\n            });\n\n            this.setState({ searchResults: data, searchTerm: term });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            searchResults,\n            searchTerm\n        } = this.state;\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p><em>{searchTerm}</em> is out of stock</p>\n            }\n            return <p>Search for a card</p>; // Default text before search\n        }\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Column>\n                        <Header as=\"h2\">\n                            Inventory Search\n                            <Header.Subheader>\n                                <em>Card prices subject to change. Consult a Clubhouse employee for final estimates</em>\n                            </Header.Subheader>\n                        </Header>\n\n                        <Divider />\n\n                        {!searchResults.length &&\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"search\" />\n                                    <span>{searchNotification()}</span>\n                                </Header>\n                            </Segment>}\n\n                        <PublicCardList\n                            cards={searchResults}\n                            addToSaleList={this.addToSaleList}\n                        />\n                    </Grid.Column>\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport { GET_SET_NAMES } from './api_resources';\nimport axios from 'axios';\nimport { Form, Input, Select, Dropdown, Segment } from 'semantic-ui-react';\n\nconst formatDropdownOptions = [\n    { key: 'qw', value: \"\", text: \"None\" },\n    { key: 'we', value: \"standard\", text: \"Standard\" },\n    { key: 'er', value: \"future\", text: \"Future\" },\n    { key: 'rt', value: \"historic\", text: \"Historic\" },\n    { key: 'ty', value: \"pioneer\", text: \"Pioneer\" },\n    { key: 'yu', value: \"modern\", text: \"Modern\" },\n    { key: 'ui', value: \"legacy\", text: \"Legacy\" },\n    { key: 'io', value: \"pauper\", text: \"Pauper\" },\n    { key: 'op', value: \"vintage\", text: \"Vintage\" },\n    { key: 'as', value: \"penny\", text: \"Penny\" },\n    { key: 'sd', value: \"commander\", text: \"Commander\" },\n    { key: 'df', value: \"brawl\", text: \"Brawl\" },\n    { key: 'fg', value: \"duel\", text: \"Duel\" },\n    { key: 'gh', value: \"oldschool\", text: \"Oldschool\" }\n];\n\nconst priceFilterDropdownOptions = [\n    { key: 'gte', value: 'gte', text: '>=' },\n    { key: 'lte', value: 'lte', text: '<=' },\n    { key: 'gtx', value: 'gt', text: '>' },\n    { key: 'ltx', value: 'lt', text: '<' }\n];\n\nconst finishDropdownOptions = [\n    { key: 'nonfoil_foil', value: '', text: 'None' },\n    { key: 'nonfoil', value: 'NONFOIL', text: 'Nonfoil' },\n    { key: 'foil', value: 'FOIL', text: 'Foil' }\n];\n\nconst sortByDropdownOptions = [\n    { key: 'pricesort', value: 'price', text: 'Price' },\n    { key: 'alphasort', value: 'name', text: 'Card Name' }\n];\n\nconst sortByDirectionDropdownOptions = [\n    { key: 'descdirsort', value: 1, text: 'Ascending' },\n    { key: 'ascdirsort', value: -1, text: 'Descending' }\n];\n\nconst sortByColorDropdownOptions = [\n    { key: 'w', value: 'W', text: 'White' },\n    { key: 'u', value: 'U', text: 'Blue' },\n    { key: 'b', value: 'B', text: 'Black' },\n    { key: 'r', value: 'R', text: 'Red' },\n    { key: 'g', value: 'G', text: 'Green' }\n];\n\nconst initialState = {\n    title: '',\n    setName: '',\n    format: '',\n    priceNum: '',\n    priceFilter: 'gte',\n    finish: '',\n    sortBy: 'price',\n    colorsArray: [],\n    sortByDirection: -1,\n    setNames: []\n}\n\nexport default class DeckboxCloneForm extends React.Component {\n    state = { editionDropdownOptions: [], ...initialState };\n\n    handleSearchSelect = name => this.setState({ title: name });\n\n    // When the user blurs the search field, we need to re-set state. Otherwise it won't clear from handleSearchSelect()\n    handleSearchBlur = (e, d) => this.setState({ title: e.target.value });\n\n    handleChange = (e, { value }) => this.setState({ [e.target.name]: value });\n\n    handleDropdownChange = (e, data) => this.setState({ [data.name]: data.value });\n\n    async componentDidMount() {\n        const { data } = await axios.get(GET_SET_NAMES);\n        const setNameOptions = data.map((d, idx) => {\n            return { key: `set${idx}`, value: d, text: d };\n        })\n        const concatWithBlankOption = [{ key: 'snull', value: \"\", text: \"None\" }].concat(setNameOptions);\n        this.setState({ editionDropdownOptions: concatWithBlankOption });\n    }\n\n    render() {\n        const {\n            title,\n            setName,\n            format,\n            priceNum,\n            priceFilter,\n            finish,\n            sortBy,\n            sortByDirection,\n            colorsArray\n        } = this.state;\n\n        // Sort the colors here and concat prior to sending to the backend\n        const colors = colorsArray.sort().join('');\n\n        return (\n            <Segment>\n                <h3>Filters</h3>\n                <Form>\n                    <Form.Group widths=\"4\">\n                        <Form.Field>\n                            <label>Card Name</label>\n                            <SearchBar\n                                handleSearchSelect={this.handleSearchSelect}\n                                value={this.state.title}\n                                name=\"title\"\n                                onBlur={this.handleSearchBlur}\n                            />\n                        </Form.Field>\n                        <Form.Field\n                            control={Select}\n                            label=\"Format\"\n                            placeholder=\"Format\"\n                            options={formatDropdownOptions}\n                            name=\"format\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Edition\"\n                            placeholder=\"Edition\"\n                            search\n                            options={this.state.editionDropdownOptions}\n                            name=\"setName\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Finish\"\n                            placeholder=\"Finish\"\n                            options={finishDropdownOptions}\n                            name=\"finish\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n                    <Form.Group widths=\"4\">\n\n                        <Form.Field\n                            control={Select}\n                            multiple\n                            label=\"Colors\"\n                            placeholder=\"Colors\"\n                            options={sortByColorDropdownOptions}\n                            name=\"colorsArray\"\n                            onChange={this.handleDropdownChange}\n                        />\n\n                        <Form.Field>\n                            <label>Price Filter</label>\n                            <Input\n                                label={<Dropdown\n                                    options={priceFilterDropdownOptions}\n                                    name=\"priceFilter\"\n                                    defaultValue=\"gte\"\n                                    onChange={this.handleDropdownChange}\n                                />}\n                                placeholder=\"Enter a price\"\n                                labelPosition=\"left\"\n                                name=\"priceNum\"\n                                type=\"number\"\n                                onChange={this.handleDropdownChange}\n                            />\n                        </Form.Field>\n                        <Form.Field\n                            control={Select}\n                            label=\"Sort By\"\n                            placeholder=\"\"\n                            options={sortByDropdownOptions}\n                            defaultValue='price'\n                            name=\"sortBy\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Order\"\n                            options={sortByDirectionDropdownOptions}\n                            defaultValue={-1}\n                            name=\"sortByDirection\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Button primary onClick={() => this.props.handleSubmit({\n                            title,\n                            setName,\n                            format,\n                            priceNum,\n                            priceFilter,\n                            finish,\n                            sortBy,\n                            sortByDirection,\n                            colors\n                        })}>Submit</Form.Button>\n                    </Form.Group>\n                </Form>\n            </Segment>\n        )\n    }\n}","import React from 'react';\nimport { Table, Icon, Image } from 'semantic-ui-react';\nimport Price from './Price';\n\nconst conditionMap = {\n    NM: 'Near Mint',\n    LP: 'Light Play',\n    MP: 'Moderate Play',\n    HP: 'Heavy Play',\n};\n\nconst Tooltip = ({ image_uri, posX, posY }) => {\n    return (\n        <div style={{\n            position: 'absolute',\n            left: `${posX}px`,\n            width: '150px', // Width of the image when size=\"small\"\n            height: '209px', // Height of the image when size=\"small\"\n            borderRadius: '7px 7px 7px 7px',\n            boxShadow: '2px 2px 5px 0 rgba(0, 0, 0, 0.25)',\n            background: 'repeating-linear-gradient(45deg, #bfbfbf, #bfbfbf 10px, #b0b0b0 10px, #b0b0b0 20px)'\n        }}>\n            <Image\n                style={{ borderRadius: '7px 7px 7px 7px' }}\n                size=\"small\"\n                src={image_uri}\n            />\n        </div>\n    )\n}\n\nexport default class DeckboxCloneRow extends React.Component {\n    state = { mouseInside: false, mouseX: 0, mouseY: 0 };\n\n    mouseEnter = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseInside: true, mouseX, mouseY });\n    }\n\n    mouseLeave = (e) => this.setState({ mouseInside: false });\n\n    mouseMove = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseX, mouseY });\n    };\n\n    render() {\n        const { inventory, name, set_name, price, set, rarity, image_uri } = this.props;\n        const { mouseInside, mouseX, mouseY } = this.state;\n        const finish = inventory.k.split('_')[0];\n        const condition = inventory.k.split('_')[1];\n\n        return <Table.Row>\n            <Table.Cell>\n                <span\n                    onMouseEnter={this.mouseEnter}\n                    onMouseLeave={this.mouseLeave}\n                    onMouseMove={this.mouseMove}\n                    style={{ cursor: 'help' }}\n                >\n                    {name}{' '}\n                </span>\n                {finish === 'FOIL' && <Icon name=\"star\" color=\"blue\" />}\n                {mouseInside && <Tooltip image_uri={image_uri} posX={mouseX} posY={mouseY} />}\n            </Table.Cell>\n            <Table.Cell><i className={`ss ss-fw ss-${set} ss-${rarity}`} style={{ fontSize: '20px' }} />{\" \"}{set_name}</Table.Cell>\n            <Table.Cell>{conditionMap[condition]}</Table.Cell>\n            <Table.Cell>{inventory.v}</Table.Cell>\n            <Table.Cell><Price num={price} /></Table.Cell>\n        </Table.Row>\n    }\n}","import React from 'react'\nimport { GET_CARDS_BY_FILTER } from './api_resources';\nimport DeckboxCloneForm from './DeckboxCloneForm';\nimport DeckboxCloneRow from './DeckboxCloneRow';\nimport axios from 'axios';\nimport { Table, Menu, Icon, Dimmer, Loader, Segment, Header, Container } from 'semantic-ui-react';\nimport _ from 'lodash';\nconst LIMIT = 100 // Matching the backend for now\n\nexport default class DeckboxClone extends React.Component {\n    state = {\n        data: [],\n        count: 0,\n        currentPage: 0,\n        numPages: 0,\n        pageArray: [],\n        isLoading: false,\n        cachedFilters: {},\n        showPages: [],\n        searchTouched: false // Tracks whether the user has initially searched for the 'no results' message\n    }\n\n    fetchData = async (filters, page) => {\n        try {\n            this.setState({ isLoading: true });\n\n            const { data } = await axios.get(GET_CARDS_BY_FILTER, {\n                params: { ...filters, page }\n            });\n\n            const numPages = Math.ceil(data.total / LIMIT);\n            const pages = _.range(1, numPages + 1);\n            let showPages;\n\n            // Logic that controls the visibility of page number links \n            // Default max number pages to display is 5\n            if (page <= 3) {\n                showPages = pages.slice(0, 5);\n            } else if (page >= numPages - 2) {\n                showPages = pages.slice(numPages - 5, numPages);\n            } else {\n                showPages = pages.slice(page - 2, page + 3);\n            }\n\n            this.setState({\n                data: data.cards,\n                count: data.total,\n                isLoading: false,\n                numPages: numPages,\n                currentPage: page,\n                showPages: showPages,\n                searchTouched: true\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    handleSubmit = async (filters) => {\n        this.setState({ cachedFilters: filters }); // Set the filters for pagination requests later\n        await this.fetchData(filters, 1); // On submit, starting page mut always be 1\n    }\n\n    handlePage = async (page) => {\n        await this.fetchData(this.state.cachedFilters, page)\n        this.setState({ currentPage: page });\n    };\n\n    render() {\n        const { data, isLoading, currentPage, numPages, count } = this.state;\n        const showLeftPageButtons = !(currentPage === 1);\n        const showRightPageButtons = !(currentPage === numPages);\n\n        return <Container>\n            <Dimmer active={isLoading} inverted page style={{ marginTop: '52.63px' }}>\n                <Loader size=\"large\">Loading</Loader>\n            </Dimmer>\n            <Segment secondary>\n                <Icon name=\"exclamation triangle\" color=\"blue\" />\n                Prices from this table are updated weekly and are subject to fluctuations. Consult 'New Sale' or 'Manage Inventory' for up-to-date values\n            </Segment>\n            <DeckboxCloneForm handleSubmit={this.handleSubmit} />\n\n            {!!data.length && <Table celled striped compact>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='5'>\n                            <Menu floated=\"left\">\n                                <Menu.Item>Viewing page {currentPage} of {numPages}</Menu.Item>\n                            </Menu>\n                            <Menu floated=\"right\">\n                                {showLeftPageButtons && <Menu.Item as=\"a\" icon onClick={() => this.handlePage(currentPage - 1)} >\n                                    <Icon name='chevron left' />\n                                </Menu.Item>}\n\n                                <React.Fragment>\n                                    {this.state.showPages.map(p => {\n                                        return (\n                                            <Menu.Item\n                                                key={`page-${p}`}\n                                                onClick={() => this.handlePage(p)}\n                                                active={currentPage === p}\n                                                disabled={currentPage === p}\n                                                as=\"a\">\n                                                {p}\n                                            </Menu.Item>\n                                        )\n                                    })}\n                                </React.Fragment>\n\n                                {showRightPageButtons && <Menu.Item as=\"a\" icon onClick={() => this.handlePage(currentPage + 1)}>\n                                    <Icon name='chevron right' />\n                                </Menu.Item>}\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Edition</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Qty</Table.HeaderCell>\n                        <Table.HeaderCell>Price</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {data.map(d => <DeckboxCloneRow {...d} key={`${d._id}${d.inventory.k}`} />)}\n                </Table.Body>\n\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='5'>\n                            <Menu floated=\"left\">\n                                <Menu.Item>Total results: {count}</Menu.Item>\n                            </Menu>\n                            <Menu floated=\"right\">\n                                {showLeftPageButtons && <Menu.Item\n                                    as=\"a\"\n                                    icon\n                                    onClick={() => this.handlePage(currentPage - 1)}\n                                >\n                                    <Icon name='chevron left' />\n                                </Menu.Item>}\n\n                                <React.Fragment>\n                                    {this.state.showPages.map(p => {\n                                        return (\n                                            <Menu.Item\n                                                key={`page-${p}`}\n                                                onClick={() => this.handlePage(p)}\n                                                active={currentPage === p}\n                                                disabled={currentPage === p}\n                                                as=\"a\">\n                                                {p}\n                                            </Menu.Item>\n                                        )\n                                    })}\n                                </React.Fragment>\n\n                                {showRightPageButtons && <Menu.Item\n                                    as=\"a\"\n                                    icon\n                                    onClick={() => this.handlePage(currentPage + 1)}\n                                >\n                                    <Icon name='chevron right' />\n                                </Menu.Item>}\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>}\n\n            {!data.length &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        {this.state.searchTouched ?\n                            'No results found' :\n                            'Use the filters to browse inventory'\n                        }\n                    </Header>\n                </Segment>}\n        </Container>\n    }\n}","import React, { useState } from 'react';\nimport makeAuthHeader from './makeAuthHeader';\nimport { LOGIN } from './api_resources';\nimport axios from 'axios';\n\nexport const AuthContext = React.createContext();\n\nexport default function AuthProvider(props) {\n    const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('clubhouse_JWT'));\n\n    const handleLogin = async (username, password) => {\n        try {\n            const { data } = await axios.post(LOGIN, {\n                username: username.toLowerCase(),\n                password: password\n            }, { headers: makeAuthHeader() });\n\n            if (data.token) {\n                localStorage.setItem('clubhouse_JWT', data.token);\n                setLoggedIn(!!localStorage.getItem('clubhouse_JWT'))\n\n                return { authed: true };\n            } else {\n                return { authed: false };\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const handleLogout = async () => {\n        try {\n            localStorage.removeItem('clubhouse_JWT');\n            setLoggedIn(!!localStorage.getItem('clubhouse_JWT'));\n\n            return { authed: false };\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return <AuthContext.Provider value={{ loggedIn, handleLogin, handleLogout }}>\n        {props.children}\n    </AuthContext.Provider>\n}\n","import React from 'react';\nimport createToast from './createToast';\nimport { Form, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from './AuthProvider';\n\nconst initialState = { username: '', password: '', btnLoading: false };\n\nclass Login extends React.Component {\n    state = initialState;\n\n    handleInputChange = (e, { value }) => {\n        this.setState({ [e.target.name]: value });\n    };\n\n    render() {\n        const { username, password, btnLoading } = this.state;\n\n        return (\n            <AuthContext.Consumer>\n                {({ loggedIn, handleLogin }) => {\n                    const login = async () => {\n                        const { username, password } = this.state;\n\n                        this.setState({ btnLoading: true });\n\n                        const { authed } = await handleLogin(username, password);\n\n                        if (authed) {\n                            // Do not set state here to mitigate React setState warning after component unmounted due to redirect\n                            createToast({\n                                color: 'green',\n                                header: 'Success',\n                                message: `Enjoy your time here!`,\n                            });\n                        } else {\n                            this.setState(initialState);\n                            createToast({\n                                color: 'red',\n                                header: 'Error',\n                                message: `Username or password was incorrect`,\n                            });\n                        }\n                    };\n\n                    if (loggedIn) {\n                        return <Redirect to=\"/manage-inventory\" />;\n                    }\n\n                    return (\n                        <Form>\n                            <Form.Field>\n                                <Form.Input\n                                    name=\"username\"\n                                    placeholder=\"Username\"\n                                    label=\"Username\"\n                                    value={username}\n                                    onChange={this.handleInputChange}\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <Form.Input\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    value={password}\n                                    onChange={this.handleInputChange}\n                                />\n                            </Form.Field>\n                            <Button\n                                type=\"submit\"\n                                onClick={() => login()}\n                                disabled={!username || !password}\n                                loading={btnLoading}\n                            >\n                                Submit\n                            </Button>\n                        </Form>\n                    );\n                }}\n            </AuthContext.Consumer>\n        )\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Header, Container } from 'semantic-ui-react';\nimport { AuthContext } from './AuthProvider';\n\nclass Logout extends React.Component {\n    render() {\n        return (\n            <AuthContext.Consumer>\n                {({ loggedIn, handleLogout }) => {\n                    if (!loggedIn) {\n                        return <Redirect to=\"/login\" />;\n                    }\n\n                    return (\n                        <React.Fragment>\n                            <Container fluid>\n                                <Header as=\"h3\" color=\"grey\"><i>Until we meet again, friend...</i></Header>\n                                <Button onClick={async () => await handleLogout()}>Logout</Button>\n                            </Container>\n                        </React.Fragment>\n                    )\n                }}\n            </AuthContext.Consumer>\n        )\n    }\n};\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Item\n} from 'semantic-ui-react';\nimport QohLabels from '../QohLabels';\nimport CardImage from '../CardImage';\nimport MarketPrice from '../MarketPrice'\nimport $ from 'jquery';\nimport createToast from '../createToast';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil`\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nfunction checkCardFinish(nonfoil, foil) {\n    if (!nonfoil && foil) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoil && !foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoil && foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default function ReceivingCardItem(props) {\n    const [quantity, setQuantity] = useState(1);\n    const [cashPrice, setCashPrice] = useState(0);\n    const [creditPrice, setCreditPrice] = useState(0);\n    const [selectedCondition, setSelectedCondition] = useState('NM');\n    const [marketPrice, setMarketPrice] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(\n        checkCardFinish(props.nonfoil, props.foil).selectedFinish // seed state from props\n    );\n\n    // Determines whether the select finish dropdown is permanently disabled, seeded from props\n    const finishDisabled = checkCardFinish(props.nonfoil, props.foil).finishDisabled;\n\n    const handleFinishChange = (e, { value }) => setSelectedFinish(value);\n\n    const handleConditionChange = (e, { value }) => setSelectedCondition(value);\n\n    // Validates/sanitizes user inputs by tracking the `name` attribute of the input element\n    const handlePriceChange = (e, { value }) => {\n        let val = Number(value) || 0;\n        if (val < 0) val = 0;\n\n        switch (e.target.name) {\n            case \"cashInput\":\n                setCashPrice(val);\n                break;\n            case \"marketPriceInput\":\n                setMarketPrice(val);\n                break;\n            case \"creditInput\":\n                setCreditPrice(val);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleQuantityChange = (e, { value }) => {\n        let val = parseInt(value, 10) || 0;\n        if (val < 0) val = 0; // cannot receive less than 0\n        if (val > 50) val = 50 // set max to 50 cards per single transaction\n        setQuantity(val);\n    };\n\n\n    const handleFocus = e => {\n        switch (e.target.name) {\n            case \"cashInput\":\n                if (cashPrice === 0) setCashPrice('');\n                break;\n            case \"marketPriceInput\":\n                if (marketPrice === 0) setMarketPrice('');\n                break;\n            case \"creditInput\":\n                if (creditPrice === 0) setCreditPrice('');\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleBlur = e => {\n        switch (e.target.name) {\n            case \"cashInput\":\n                if (cashPrice === '') setCashPrice(0);\n                break;\n            case \"marketPriceInput\":\n                if (marketPrice === '') setMarketPrice(0);\n                break;\n            case \"creditInput\":\n                if (creditPrice === '') setCreditPrice(0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleInventoryAdd = () => {\n        props.addToList({\n            quantity,\n            cashPrice,\n            marketPrice,\n            creditPrice,\n            finishCondition: `${selectedFinish}_${selectedCondition}`, // ex. NONFOIL_NM\n            cardInfo: { ...props }\n        })\n\n        setQuantity(1);\n        setCashPrice(0);\n        setMarketPrice(0);\n        setCreditPrice(0);\n        setSelectedCondition('NM');\n        setSelectedFinish(checkCardFinish(props.nonfoil, props.foil).selectedFinish);\n\n        createToast({\n            color: 'green',\n            header: `${quantity}x ${props.name} added to buylist!`,\n            duration: 2000\n        });\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    /**\n     * Determines whether the `Add` button should be disabled\n     */\n    const submitDisabled = () => {\n        const validateQty = quantity === 0 || quantity === '';\n        const validateTradeTypes = !cashPrice && !creditPrice;\n        const validateMarketPrice = marketPrice === 0 || marketPrice === '';\n\n        if (cashPrice > 0) {\n            return validateQty || validateTradeTypes || validateMarketPrice;\n        }\n\n        return validateQty || validateTradeTypes;\n    }\n\n    const {\n        image_uris,\n        name,\n        set_name,\n        set,\n        rarity,\n        card_faces,\n        id\n    } = props;\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"small\">\n                        <CardImage\n                            image_uris={image_uris}\n                            card_faces={card_faces}\n                            hover={false}\n                        />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as='h3'>\n                            {name}\n                            {' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                            <QohLabels inventoryQty={props.inventoryQty} />\n                            {' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity\"\n                                        value={quantity}\n                                        onChange={handleQuantityChange}\n                                        onFocus={e => e.target.select()}\n                                    />\n                                    <Form.Field\n                                        label=\"Credit Price\"\n                                        name=\"creditInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={creditPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                    />\n                                    <Form.Field\n                                        label=\"Cash Price\"\n                                        name=\"cashInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={cashPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                    />\n                                    <Form.Field\n                                        label=\"Market Price\"\n                                        name=\"marketPriceInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={marketPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                        disabled={cashPrice === 0 || cashPrice === ''}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        label=\"Finish\"\n                                        control={Select}\n                                        value={selectedFinish}\n                                        options={finishes}\n                                        disabled={finishDisabled}\n                                        onChange={handleFinishChange}\n                                    />\n                                    <Form.Field\n                                        label=\"Condition\"\n                                        control={Select}\n                                        value={selectedCondition}\n                                        options={cardConditions}\n                                        onChange={handleConditionChange}\n                                    />\n                                    <Form.Button\n                                        label=\"Add to List?\"\n                                        control={Button}\n                                        primary\n                                        disabled={submitDisabled()}\n                                        onClick={handleInventoryAdd}\n                                    >\n                                        Add\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}","import React from 'react';\nimport ReceivingCardItem from './ReceivingSearchItem';\n\nexport default function ReceivingCardList({ cards, addToList }) {\n    return cards.map(c => {\n        return <ReceivingCardItem\n            key={c.id}\n            {...c}\n            addToList={addToList}\n        />\n    });\n}\n","import React, { useState } from 'react';\nimport { Table, Button, Label, Icon } from 'semantic-ui-react';\nimport Price from '../Price';\n\n// Defines whether it uses cash or credit for trade types\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListItem({ name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, removeFromList, tradeType, activeTradeType }) {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [hovered, setHovered] = useState(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell><b>{name}</b></Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Cash <b><Price num={cashPrice} /></b>\n                </div>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Credit <b><Price num={creditPrice} /></b>\n                </div>\n                <p>{finishCondition.split('_')[0]} | {finishCondition.split('_')[1]}</p>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CASH}\n                    color={tradeType === CASH ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CASH)}\n                    disabled={cashPrice === 0}\n                    icon\n                >\n                    <Icon name=\"dollar sign\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CREDIT}\n                    color={tradeType === CREDIT ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CREDIT)}\n                    disabled={creditPrice === 0}\n                    icon\n                >\n                    <Icon name=\"credit card outline\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => removeFromList(uuid_key)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}","import React from 'react';\nimport _ from 'lodash';\nimport Price from '../Price';\nimport { Table } from 'semantic-ui-react';\n\n// Am I crazy or is this logic really convoluted?\n// Perhaps look at this down the line for improvement...\nexport default function CashReport({ receivingList, closeCashModal }) {\n    // If id, cashPrice and marketPrice are the same, goes in one bucket\n    const countByPriceAndID = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            // Note: We're creating a unique uuid-esque comparator string based on:\n            // `id`, `cashPrice`, `marketPrice`, and `finishCondition`\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .groupBy(\"temp_uuid\")\n        .mapValues(val => val.length)\n        .value();\n\n    const uniqLineItems = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .uniqBy('temp_uuid')\n        .value();\n\n    const mergedWithQty = uniqLineItems.map(c => {\n        return { ...c, tradeQty: countByPriceAndID[c.temp_uuid] } // Add a trade quantity referencing the previous count\n    });\n\n    const totalCashOut = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .sumBy(c => c.cashPrice)\n        .value();\n\n    return <React.Fragment>\n        <div id=\"cash-report\">\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan={6}>Employee Name:</Table.HeaderCell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.HeaderCell>Card Name</Table.HeaderCell>\n                        <Table.HeaderCell>Market Value</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Offer</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Out</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {mergedWithQty.map(c => {\n                        return <Table.Row key={c.temp_uuid}>\n                            <Table.Cell>{c.name}</Table.Cell>\n                            <Table.Cell><Price num={c.marketPrice} /></Table.Cell>\n                            <Table.Cell>{c.finishCondition}</Table.Cell>\n                            <Table.Cell>{c.tradeQty}</Table.Cell>\n                            <Table.Cell><Price num={c.cashPrice} /></Table.Cell>\n                            <Table.Cell><Price num={c.tradeQty * c.cashPrice} /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n                <Table.Footer>\n                    <Table.HeaderCell colSpan={6}>Total: <Price num={totalCashOut} /></Table.HeaderCell>\n                </Table.Footer>\n            </Table>\n        </div>\n    </React.Fragment>\n}","import React, { useState } from 'react';\nimport { Segment, Statistic, Button, Modal, Header } from 'semantic-ui-react';\nimport Price from '../Price';\nimport CashReport from './CashReport';\nimport printCashReport from './printCashReport';\n\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListTotals({ receivingList, selectAll, commitToInventory }) {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [loading, setLoading] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [showCashModal, setShowCashModal] = useState(false);\n\n    const openCashModal = () => setShowCashModal(true);\n\n    const closeCashModal = () => setShowCashModal(false);\n\n    const submitToInventory = async () => {\n        setLoading(true);\n        await commitToInventory();\n        setLoading(false);\n    }\n\n    const handlePrintCashReport = () => {\n        setShowCashModal(false); // Close the modal so users don't have to after printing in new tab\n        printCashReport();\n    }\n\n    const cashTotal = receivingList.reduce((acc, curr) => {\n        let cashVal = curr.tradeType === CASH ? curr.cashPrice : 0;\n        return acc + cashVal;\n    }, 0);\n\n    const creditTotal = receivingList.reduce((acc, curr) => {\n        let creditVal = curr.tradeType === CREDIT ? curr.creditPrice : 0;\n        return acc + creditVal;\n    }, 0);\n\n    return <Segment>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Button.Group>\n                <Button onClick={() => selectAll(TRADE_TYPE.CASH)}>Select all cash</Button>\n                <Button.Or />\n                <Button onClick={() => selectAll(TRADE_TYPE.CREDIT)}>Select all credit</Button>\n            </Button.Group>\n            <div>\n                <Statistic size=\"mini\">\n                    <Statistic.Label>Cash Due:</Statistic.Label>\n                    <Statistic.Value><Price num={cashTotal} /></Statistic.Value>\n                </Statistic>\n                <Statistic size=\"mini\">\n                    <Statistic.Label>Credit Due:</Statistic.Label>\n                    <Statistic.Value><Price num={creditTotal} /></Statistic.Value>\n                </Statistic>\n            </div>\n        </div>\n\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Modal\n                open={showCashModal}\n                trigger={\n                    <Button\n                        color={cashTotal > 0 ? 'green' : null}\n                        disabled={cashTotal === 0}\n                        onClick={openCashModal}>\n                        Generate cash report\n                    </Button>\n                }>\n                <Modal.Content>\n                    <CashReport\n                        receivingList={receivingList}\n                        closeCashModal={closeCashModal} />\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={handlePrintCashReport} color=\"blue\">Print Report</Button>\n                    <Button onClick={closeCashModal}>Cancel</Button>\n                </Modal.Actions>\n            </Modal>\n\n            <Modal\n                closeOnDimmerClick={false}\n                trigger={\n                    <Button\n                        color=\"blue\"\n                        disabled={receivingList.length === 0}\n                        onClick={() => setShowModal(true)}>\n                        Commit to inventory\n                    </Button>\n                }\n                open={showModal}\n                onClose={() => setShowModal(false)}\n                basic style={{ marginTop: '50px' }} >\n                <Header>Confirm receipt of new inventory?</Header>\n                <Modal.Content>\n                    <p><b>Pressing 'Submit' will commit the following items to inventory:</b></p>\n                    <ul>\n                        {receivingList.map(c => {\n                            return <li key={c.uuid_key}>{c.name} | {c.set_name}({c.set.toUpperCase()})</li>\n                        })}\n                    </ul>\n                    <div>\n                        <p><b>The customer is owed: </b></p>\n                        <ul>\n                            {cashTotal > 0 ? <li><Price num={cashTotal} /> in cold, hard cash</li> : null}\n                            {creditTotal > 0 ? <li><Price num={creditTotal} /> in store credit</li> : null}\n                        </ul>\n                    </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button basic color=\"red\" inverted onClick={() => setShowModal(false)}>Cancel</Button>\n                    <Button color=\"green\" inverted loading={loading} disabled={loading} onClick={submitToInventory}>Submit</Button>\n                </Modal.Actions>\n            </Modal>\n        </div>\n    </Segment>\n}","const printStyle = `\n    body {\n        font-family: 'helvetica neue', helvetica, arial, sans-serif;\n    }\n\n    table {\n        table-layout: fixed;\n        width: 100%;\n        border-collapse: collapse;\n        border: 1px solid gray;\n        text-align: left;\n    }\n\n    thead th:nth-child(1) {\n        width: 30%;\n    }\n\n    thead th:nth-child(2) {\n        width: 20%;\n    }\n\n    thead th:nth-child(3) {\n        width: 15%;\n    }\n\n    thead th:nth-child(4) {\n        width: 35%;\n    }\n\n    th, td {\n        border: 1px solid #ddd;\n        padding: 10px;\n    }\n\n    tfoot {\n        text-align: right !important;\n    }\n`;\n\n/**\n     * We're creating a new tab here for the modal table and writing CSS to it - not the most elegant solution from a UX and\n     * code standpoint, but time was of the essence for this release. Refactor down the road.\n     * \n     * The id cash-report is found on the cash report table\n     */\nexport default function printCashReport() {\n    const divToPrint = document.getElementById('cash-report');\n    const popup = window.open('', '_blank');\n    popup.document.open();\n    popup.document.write(`<html>`);\n    popup.document.write(`<head>`);\n    popup.document.write(`<title>Cash Report</title>`)\n    popup.document.write(`<style>${printStyle}</style>`);\n    popup.document.write(`</head>`);\n    popup.document.write(`<body onload=\"window.print()\">`);\n    popup.document.write(`${divToPrint.innerHTML}`);\n    popup.document.write(`</body>`);\n    popup.document.write(`</html>`);\n    popup.document.close();\n}","import React, { useState } from 'react';\nimport SearchBar from '../SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from '../makeAuthHeader';\nimport ReceivingSearchList from './ReceivingSearchList';\nimport { Segment, Header, Icon, Grid, Divider, Table } from 'semantic-ui-react'\nimport { ADD_CARD_TO_INVENTORY, GET_CARD_QTY_FROM_INVENTORY, GET_SCRYFALL_BULK_BY_TITLE } from '../api_resources';\nimport ReceivingListItem from './ReceivingListItem';\nimport ReceivingListTotals from './ReceivingListTotals';\nimport createToast from '../createToast';\nimport _ from 'lodash';\nimport uuid from 'uuid'; // Used to crete unique keys for the list\n\n// Defines whether the receivingListItem uses cash or credit for trade types\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nfunction DefaultPlaceholder({ active, headerText }) {\n    return (\n        <React.Fragment>\n            {active &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        <em>{headerText}</em>\n                    </Header>\n                </Segment>}\n        </React.Fragment>\n    )\n}\n\nexport default function Receiving() {\n    const [searchResults, setSearchResults] = useState([]);\n    const [receivingList, setReceivingList] = useState([]);\n\n    /**\n     * Fetches cards from the DB by title when a user selects a title after querying.\n     * This function merges the data (inventory quantity and card objects) from two endpoints into one array.\n     * \n     * @param {String} term - the search term\n     */\n    const handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(\n                GET_SCRYFALL_BULK_BY_TITLE,\n                {\n                    params: { title: term },\n                    headers: makeAuthHeader()\n                }\n            );\n\n            const ids = data.map(el => el.id);\n\n            // Fetches only the in-stock qty of a card tied to an `id`\n            const inventoryRes = await axios.post(\n                GET_CARD_QTY_FROM_INVENTORY,\n                { scryfallIds: ids },\n                { headers: makeAuthHeader() }\n            );\n\n            const mergedData = data.map(d => {\n                return { ...d, inventoryQty: inventoryRes.data[d.id] } // inventoryQty will be `undefined` if no qty (prop not found)\n            });\n\n            setSearchResults(mergedData);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    /**\n     * Adds a card to the receiving list, with a unique uuid for identification\n     */\n    const addToList = ({ quantity, cashPrice, marketPrice, creditPrice, finishCondition, cardInfo }) => {\n\n        const previousState = [...receivingList];\n        let initialTradeType = TRADE_TYPE.CREDIT;\n\n        // If the creditPrice is 0 default to cash\n        if (!creditPrice) initialTradeType = TRADE_TYPE.CASH;\n\n        // Each line-item represents one card. Use _.times() to repeat\n        const newState = previousState.concat(_.times(quantity, idx => {\n            return { cashPrice, marketPrice, creditPrice, finishCondition, ...cardInfo, uuid_key: uuid(), tradeType: initialTradeType }\n        }))\n\n        setReceivingList(_.sortBy(newState, 'name'));\n    }\n\n    /**\n     * Removes a card from the receiving list using the uuid\n     */\n    const removeFromList = (uuid_key) => {\n        const copiedState = [...receivingList];\n        _.remove(copiedState, e => e.uuid_key === uuid_key); // Mutates array\n        setReceivingList(copiedState);\n    }\n\n    /**\n     * Determines whether line-items use cash or credit. Changes the tradeType by reference in the receivingList array\n     * which changes the button color/active prop in ReceivingListItem\n     */\n    const activeTradeType = (uuid_key, tradeType) => {\n        const previousState = [...receivingList];\n        const card = previousState.find(e => e.uuid_key === uuid_key);\n        card.tradeType = TRADE_TYPE[tradeType];\n        setReceivingList(previousState);\n    }\n\n    /**\n     * Selects all items by their tradeType, if possible\n     * \n     * @param {String} tradeType - `CASH` or `CREDIT`\n     */\n    const selectAll = (tradeType) => {\n        const oldState = [...receivingList];\n        const { CASH, CREDIT } = TRADE_TYPE;\n\n        oldState.forEach((card, idx, arr) => {\n            if (card.tradeType !== tradeType) { // if the line-items tradeType is not the one passed\n                const otherType = card.tradeType === CASH ? CREDIT : CASH; // determine the tradeType and set it to other one (toggle)\n                const otherTypeValue = otherType === CASH ? card.cashPrice : card.creditPrice; // see what the value of the other is\n                // if the other is greater than 0, we mutate array in-place\n                if (otherTypeValue > 0) arr[idx].tradeType = otherType;\n            }\n        })\n\n        setReceivingList(oldState);\n    }\n\n    /**\n     * Persists all passed cards to inventory via Promise.all() using the addCardToInventory backend method\n     */\n    const commitToInventory = async () => {\n        const stateWithUnremovedProps = [...receivingList];\n\n        // Need to remove all the props we've been adding to the card objects\n        // when passing them to other components for state management.\n        const removedProps = stateWithUnremovedProps.map(c => {\n            return _.omit(c, [\n                \"cashPrice\",\n                \"creditPrice\",\n                \"marketPrice\",\n                \"inventoryQty\",\n                \"addToList\",\n                \"uuid_key\",\n                \"tradeType\",\n                \"activeTradeType\"\n            ])\n        })\n\n        try {\n            const promises = removedProps.map(async c => {\n                return await axios.post(ADD_CARD_TO_INVENTORY, {\n                    quantity: 1,\n                    type: c.finishCondition,\n                    cardInfo: _.omit(c, 'finishCondition') // remove `finishCondition` finally\n                }, { headers: makeAuthHeader() });\n            })\n\n            await Promise.all(promises);\n\n            setSearchResults([]);\n            setReceivingList([]);\n\n            createToast({\n                color: 'green',\n                header: `${receivingList.length} cards were added to inventory!`,\n                duration: 2000\n            });\n        } catch (e) {\n            console.log(e);\n            createToast({\n                color: 'red',\n                header: `Something went wrong...`,\n                duration: 2000\n            });\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <SearchBar handleSearchSelect={handleSearchSelect} />\n            <br />\n            <Grid stackable={true}>\n                <Grid.Row>\n                    <Grid.Column width=\"10\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Card Search</Header>\n                        <Divider />\n                        <DefaultPlaceholder\n                            active={!searchResults.length}\n                            headerText={\"So many cards, so little time.\"}\n                        />\n                        <ReceivingSearchList\n                            cards={searchResults}\n                            addToList={addToList}\n                        />\n                    </Grid.Column>\n                    <Grid.Column width=\"6\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Buylist</Header>\n                        {receivingList.length > 0 &&\n                            <Header floated=\"right\" style={{ display: \"inline-block\" }}>Total Cards: {receivingList.length}</Header>\n                        }\n                        <Divider />\n                        <DefaultPlaceholder\n                            active={!receivingList.length}\n                            headerText={\"If you receive it, they will come.\"}\n                        />\n                        {receivingList.length > 0 && <Table compact size=\"small\">\n                            <Table.Body>\n                                {receivingList.map(({ name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, tradeType }) => {\n                                    return <ReceivingListItem\n                                        name={name}\n                                        set={set}\n                                        rarity={rarity}\n                                        cashPrice={cashPrice}\n                                        creditPrice={creditPrice}\n                                        finishCondition={finishCondition}\n                                        uuid_key={uuid_key}\n                                        removeFromList={removeFromList}\n                                        tradeType={tradeType}\n                                        activeTradeType={activeTradeType}\n                                        key={uuid_key}\n                                    />\n                                })}\n                            </Table.Body>\n                        </Table>}\n                        {receivingList.length > 0 && <ReceivingListTotals\n                            receivingList={receivingList}\n                            selectAll={selectAll}\n                            commitToInventory={commitToInventory}\n                        />}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Sale from './Sale';\nimport BrowseSales from './BrowseSales';\nimport PublicInventory from './PublicInventory';\nimport DeckboxClone from './DeckboxClone';\nimport Login from './Login';\nimport Logout from './Logout';\nimport Receiving from './Receiving/Receiving';\nimport styled from 'styled-components';\nimport { Segment, Icon, Header } from 'semantic-ui-react';\n\nconst ContentContainer = styled.div`\n    padding-top: 52.63px;\n    margin-left: 20px;\n    margin-right: 20px;\n`;\n\nconst CovidAlert = () => {\n    return <Segment placeholder>\n        <Header icon>\n            <Icon name=\"exclamation circle\" color=\"blue\" />\n            A notice to our customers regarding COVID19\n            </Header>\n        <span>\n            Effective immediately, we will be shutting down the entirety of our play space besides 24 seats at the 3 front tables of the store. This will be our maximum player capacity for the foreseeable future.\n            </span>\n        <br />\n        <span>\n            In addition to our play space restriction, we will also be implementing a policy in which our tables will be available for free play during business hours, excluding those taken by our scheduled events throughout the week. If we have players here for any scheduled event (Wednesday Legacy, FNM, etc.) and you are not here to play in the event, please expect us to ask you to give up your seat for players interested in participating. Your cooperation will be greatly appreciated by fellow players and by our staff.\n            </span>\n        <br />\n        <span>\n            Please don't hesitate to contact us with questions or concerns. We thank you all for your understanding.\n            </span>\n    </Segment>\n}\n\nexport default function Main() {\n    return (\n        <ContentContainer>\n            <br />\n\n            <Switch>\n                <Route exact path=\"/\" component={CovidAlert} />\n                <Route exact path=\"/manage-inventory\" component={Home} />\n                <Route exact path=\"/new-sale\" component={Sale} />\n                <Route exact path=\"/browse-sales\" component={BrowseSales} />\n                <Route exact path=\"/browse-inventory\" component={DeckboxClone} />\n                <Route exact path=\"/public-inventory\" component={PublicInventory} />\n                <Route exact path=\"/receiving\" component={Receiving} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/logout\" component={Logout} />\n            </Switch>\n        </ContentContainer>\n    )\n}","import React from 'react';\nimport ballLogo from './logos/magic-ball.png'\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { AuthContext } from './AuthProvider';\n\nconst style = {\n    background: \"linear-gradient(#2185d0, #206ac6)\",\n    boxShadow: '0 3px 5px 0 rgba(0,0,0,.25)'\n}\n\nclass Header extends React.Component {\n    render() {\n        const { pathname } = this.props.location;\n\n        return (\n            <AuthContext.Consumer>\n                {({ loggedIn }) => {\n                    return (\n                        <Menu inverted fixed=\"top\" style={style}>\n                            <Menu.Item as={Link} replace to=\"/\">\n                                <img src={ballLogo} style={{ marginRight: '7px' }} alt=\"logo\" />\n                                <span><h3>Clubhouse Collection</h3></span>\n                            </Menu.Item>\n                            <Menu.Menu position=\"right\">\n                                <Menu.Item active={pathname === '/public-inventory'} position=\"right\" as={Link} replace to=\"/public-inventory\">\n                                    Search\n                                </Menu.Item>\n                                {loggedIn && <Dropdown item icon=\"bars\">\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item active={pathname === '/manage-inventory'} as={Link} replace to=\"/manage-inventory\">\n                                            <Icon name=\"plus\" color=\"blue\" />Manage Inventory\n                                        </Dropdown.Item>\n                                        <Dropdown.Item active={pathname === '/new-sale'} as={Link} replace to=\"/new-sale\" >\n                                            <Icon name=\"dollar sign\" color=\"blue\" />New Sale\n                                        </Dropdown.Item>\n                                        <Dropdown.Item active={pathname === '/receiving'} as={Link} replace to=\"/receiving\" >\n                                            <Icon name=\"list alternate outline\" color=\"blue\" />Receiving\n                                        </Dropdown.Item>\n\n                                        <Dropdown.Divider />\n\n                                        <Dropdown.Item active={pathname === '/browse-inventory'} as={Link} replace to=\"/browse-inventory\" >\n                                            <Icon name=\"box\" color=\"blue\" />Browse Inventory\n                                        </Dropdown.Item>\n                                        <Dropdown.Item active={pathname === '/browse-sales'} as={Link} replace to=\"/browse-sales\" >\n                                            <Icon name=\"eye\" color=\"blue\" />Browse Sales\n                                        </Dropdown.Item>\n\n                                        <Dropdown.Divider />\n\n                                        <Dropdown.Item active={pathname === '/logout'} as={Link} replace to=\"/logout\" >\n                                            <Icon name=\"log out\" color=\"blue\" />Logout\n                                        </Dropdown.Item>\n                                    </Dropdown.Menu>\n                                </Dropdown>}\n                                {!loggedIn && <Menu.Item active={pathname === '/login'} position=\"right\" as={Link} replace to=\"/login\">\n                                    Log in\n                                    </Menu.Item>}\n                            </Menu.Menu>\n                        </Menu >\n                    );\n                }}\n            </AuthContext.Consumer>\n        );\n    }\n}\n\nexport default withRouter(props => <Header {...props} />);\n","import React from 'react';\nimport Main from './Main';\nimport Header from './Header';\nimport AuthProvider from './AuthProvider';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <AuthProvider>\n                <Header />\n                <Main />\n            </AuthProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}