{"version":3,"sources":["logos/magic-ball.png","api_resources.js","makeAuthHeader.js","SearchBar.js","QohParser.js","createToast.js","CardImage.js","Price.js","MarketPrice.js","ScryfallCardListItem.js","ScryfallCardList.js","Home.js","BrowseCardItem.js","BrowseCardList.js","SaleLineItem.js","SalePriceTotal.js","Sale.js","SalesListItem.js","SalesList.js","BrowseSales.js","PublicCardItem.js","PublicCardList.js","PublicInventory.js","Login.js","Logout.js","Main.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","env","process","REACT_APP_ENVIRONMENT","endpoints","GET_CARDS_BY_TITLE","GET_CARD_QTY_FROM_INVENTORY","FINISH_SALE","ADD_CARD_TO_INVENTORY","GET_INVENTORY_QUERY","GET_SALES_BY_TITLE","GET_SCRYFALL_BULK_BY_TITLE","LOGIN","SCRYFALL_AUTOCOMPLETE","SCRYFALL_SEARCH","SCRYFALL_ID_SEARCH","makeAuthHeader","Authorization","localStorage","getItem","SearchBar","state","isLoading","term","autocomplete","results","defaultSearchValue","handleSearchChange","e","value","setState","length","setTimeout","a","axios","get","headers","data","formattedResults","map","el","title","handleResultSelect","result","props","handleSearchSelect","this","Search","onSearchChange","_","debounce","trailing","onResultSelect","loading","placeholder","selectFirstResult","id","React","Component","QohParser","inventoryQty","foilQty","nonfoilQty","FOIL_NM","FOIL_LP","FOIL_MP","FOIL_HP","NONFOIL_NM","NONFOIL_LP","NONFOIL_MP","NONFOIL_HP","foilColor","color","nonfoilColor","Fragment","Label","image","Detail","createToast","header","message","duration","toaster","notify","Message","compact","Header","position","style","boxShadow","zIndex","transition","CardImage","hovered","mouseOver","mouseOut","image_uris","card_faces","Image","src","normal","size","transform","onMouseOver","onMouseOut","Price","num","price","Number","toFixed","MarketPrice","prices","usd","finishes","key","text","cardConditions","checkCardFinish","nonfoilProp","foilProp","selectedFinish","finishDisabled","ScryfallCardListItem","quantity","nonfoil","foil","selectedCondition","submitDisable","submitLoading","handleFinishChange","console","log","handleConditionChange","handleQuantityChange","val","parseInt","isNaN","handleFocus","handleBlur","handleInventoryAdd","name","type","post","cardInfo","qoh","$","focus","select","set_name","set","rarity","Segment","Item","Group","divided","Content","as","className","fontSize","String","toUpperCase","tag","Description","Form","Field","control","Input","label","onChange","onFocus","onBlur","Select","options","disabled","Button","primary","onClick","ScryfallCardList","cards","card","showImage","showImages","quantities","Home","searchResults","inventoryQuantities","params","ids","scryfallIds","inventoryRes","handleImageToggle","icon","Icon","createConditionOptions","Object","entries","d","str","conditionFinish","qty","split","join","BrowseCardItem","selectedFinishCondition","selectedFinishConditionQty","quantityToSell","conditionOptions","numVal","handleSelectedFinishCondition","handlePriceChange","property","handleAddToSale","addToSaleList","Dropdown","selection","step","BrowseCardList","SaleLineItem","finishCondition","qtyToSell","deleteLineItem","Meta","floated","SalePriceTotal","saleList","total","reduce","acc","initialState","saleListCards","showModal","searchTerm","Sale","newCard","oldState","idx","findIndex","splice","push","removeFromSaleList","newState","reject","finalizeSale","saleID","sale_data","closeModal","list","Grid","Row","display","alignItems","stackable","Column","width","Divider","clearing","sub","Modal","basic","open","trigger","inverted","Actions","SalesListItem","saleData","quantitySold","cardList","pre","curr","Table","Cell","moment","createTime","format","SalesList","celled","unstackable","HeaderCell","Body","card_list","_id","BrowseSales","salesList","cardName","wrapperStyle","overlayStyle","backgroundColor","padding","bottom","left","borderRadius","roundedStyle","PublicCardItem","gridStyle","flexWrap","alignContent","height","PublicCardList","PublicInventory","username","password","btnLoading","Login","handleInputChange","target","login","handleLogin","authed","loggedIn","to","Logout","Container","fluid","Main","paddingTop","marginLeft","marginRight","exact","path","component","render","background","Menu","fixed","ballLogo","alt","Link","item","App","toLowerCase","token","setItem","clear","Boolean","window","location","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2445ba5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magic-ball.c3fcddd6.png\";","// Maps all GCF and Scryfall API endpoints for code re-use\nconst { REACT_APP_ENVIRONMENT } = process.env;\n\n/**\n * Check the environment for dev - if dev, we reach out\n * to all endpoints appended by `_test` instead of production\n */\nconst env = REACT_APP_ENVIRONMENT === 'development' ? '_test' : '';\n\nconst endpoints = {\n    GET_CARDS_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByTitle${env}`,\n    GET_CARD_QTY_FROM_INVENTORY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsFromInventory${env}`,\n    FINISH_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/finishSale${env}`,\n    ADD_CARD_TO_INVENTORY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/addCardToInventory${env}`,\n    GET_INVENTORY_QUERY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/inventorySearchQuery${env}`,\n    GET_SALES_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getSales${env}`,\n    GET_SCRYFALL_BULK_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getScryfallBulkCardsByTitle${env}`,\n    LOGIN:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getJwt${env}`,\n\n    SCRYFALL_AUTOCOMPLETE: 'https://api.scryfall.com/cards/autocomplete',\n    SCRYFALL_SEARCH: 'https://api.scryfall.com/cards/search',\n    SCRYFALL_ID_SEARCH: 'https://api.scryfall.com/cards/'\n};\n\nmodule.exports = endpoints;\n","/**\n * This function is a helper for Axios, it yields an object for Axios params\n */\nexport default function makeAuthHeader() {\n    const header = { Authorization: `Bearer ${localStorage.getItem('clubhouse_JWT')}` };\n    return header;\n}","import React from 'react';\nimport { Search } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_AUTOCOMPLETE } from './api_resources';\n\nclass SearchBar extends React.Component {\n    state = {\n        isLoading: false,\n        term: '',\n        autocomplete: [],\n        results: [],\n        defaultSearchValue: 'Search for a card'\n    };\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, term: value });\n\n        if (this.state.term.length < 1)\n            return this.setState({\n                isLoading: false,\n                term: '',\n                results: [],\n                autocomplete: [],\n                defaultSearchValue: 'Search for a card'\n            });\n\n        setTimeout(async () => {\n            const { data } = await axios.get(\n                `${SCRYFALL_AUTOCOMPLETE}?q=${this.state.term}`,\n                { headers: makeAuthHeader() }\n            );\n\n            const formattedResults = data.data.map(el => {\n                return { title: el };\n            });\n\n            this.setState({\n                results: formattedResults,\n                isLoading: false\n            });\n        }, 300);\n    };\n\n    handleResultSelect = (e, { result }) => {\n        this.props.handleSearchSelect(result.title);\n    };\n\n    render() {\n        const { results, isLoading, defaultSearchValue } = this.state;\n\n        return (\n            <Search\n                onSearchChange={_.debounce(this.handleSearchChange, 300, {\n                    trailing: true\n                })}\n                onResultSelect={this.handleResultSelect}\n                loading={isLoading}\n                results={results}\n                placeholder={defaultSearchValue}\n                selectFirstResult={true}\n                id=\"searchBar\"\n            />\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\n// This component parses the `qoh` object from mongo into something\n// more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function QohParser({ inventoryQty }) {\n    let foilQty = 0;\n    let nonfoilQty = 0;\n\n    if (inventoryQty) { // Check to see if props exist\n        foilQty =\n            (inventoryQty.FOIL_NM || 0) +\n            (inventoryQty.FOIL_LP || 0) +\n            (inventoryQty.FOIL_MP || 0) +\n            (inventoryQty.FOIL_HP || 0);\n\n        nonfoilQty =\n            (inventoryQty.NONFOIL_NM || 0) +\n            (inventoryQty.NONFOIL_LP || 0) +\n            (inventoryQty.NONFOIL_MP || 0) +\n            (inventoryQty.NONFOIL_HP || 0);\n    }\n\n    const foilColor = {};\n    if (foilQty > 0) { foilColor.color = 'blue'; }\n\n    const nonfoilColor = {};\n    if (nonfoilQty > 0) { nonfoilColor.color = 'blue'; }\n\n    return (\n        <React.Fragment>\n            <Label {...foilColor} image>\n                Foil\n        <Label.Detail>{foilQty}</Label.Detail>\n            </Label>\n            <Label {...nonfoilColor} image>\n                Nonfoil\n        <Label.Detail>{nonfoilQty}</Label.Detail>\n            </Label>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport toaster from 'toasted-notes';\n\nconst createToast = ({ color, header, message, duration = 2000 }) => {\n    return toaster.notify(\n        () => (\n            <Message color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </Message>\n        ),\n        {\n            position: 'bottom-right',\n            duration: duration\n        }\n    );\n}\n\nexport default createToast;","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nconst style = {\n    boxShadow: '2px 2px 5px 0 rgba(0,0,0,.25)',\n    zIndex: '10',\n    transition: 'all .2s ease-in-out'\n}\n\nclass CardImage extends React.Component {\n    state = { hovered: false };\n\n    mouseOver = () => { this.setState({ hovered: true }) };\n\n    mouseOut = () => { this.setState({ hovered: false }) };\n\n    render() {\n        const { image_uris, card_faces } = this.props\n        try {\n            // If normal prop `image_uris.normal` doesn't exist, move to catch block for flip card faces\n            return <Image\n                src={image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={this.mouseOver}\n                onMouseOut={this.mouseOut}\n            />;\n        } catch (e) {\n            return <Image src={\n                card_faces[0].image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={this.mouseOver}\n                onMouseOut={this.mouseOut}\n            />;\n        }\n    }\n};\n\nexport default CardImage;\n","import React from 'react';\n\nconst Price = ({ num }) => {\n    const price = Number(num).toFixed(2);\n    return <span>${price}</span>;\n};\n\nexport default Price;\n","import React from 'react';\nimport axios from 'axios';\nimport Price from './Price';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_ID_SEARCH } from './api_resources';\n\nclass MarketPrice extends React.Component {\n    state = { price: null };\n\n    async componentDidMount() {\n        const { id } = this.props;\n        const { data } = await axios.get(`${SCRYFALL_ID_SEARCH}${id}`, { headers: makeAuthHeader() });\n\n        this.setState({ price: Number(data.prices.usd) });\n    }\n\n    render() {\n        const { price } = this.state;\n        return (\n            <span>\n                Est. {price ? <Price num={price} /> : 'not found'}\n            </span>\n        );\n    }\n}\n\nexport default MarketPrice;\n","import React, { Component } from 'react';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Item\n} from 'semantic-ui-react';\nimport axios from 'axios';\nimport QohParser from './QohParser';\nimport createToast from './createToast';\nimport CardImage from './CardImage';\nimport makeAuthHeader from './makeAuthHeader';\nimport MarketPrice from './MarketPrice'\nimport { ADD_CARD_TO_INVENTORY } from './api_resources';\nimport $ from 'jquery';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n// Use this function to seed state from props\nfunction checkCardFinish(nonfoilProp, foilProp) {\n    if (!nonfoilProp && foilProp) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoilProp && !foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoilProp && foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default class ScryfallCardListItem extends Component {\n    state = {\n        quantity: 0,\n        selectedFinish: checkCardFinish(this.props.nonfoil, this.props.foil)\n            .selectedFinish,\n        selectedCondition: 'NM',\n        finishDisabled: checkCardFinish(this.props.nonfoil, this.props.foil)\n            .finishDisabled,\n        submitDisable: false,\n        inventoryQty: this.props.inventoryQty,\n        submitLoading: false\n    };\n\n    handleFinishChange = (e, { value }) => {\n        this.setState({ selectedFinish: value }, () => {\n            console.log(this.state);\n        });\n    };\n\n    handleConditionChange = (e, { value }) => {\n        this.setState({ selectedCondition: value }, () => {\n            console.log(this.state);\n        });\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const val = parseInt(value);\n        const quantity = isNaN(val) ? '' : val; // Check for NaN\n        this.setState({ quantity: quantity });\n    };\n\n    // Remove input placeholder when user tries to enter a number (to reduce user error)\n    handleFocus = () => {\n        if (this.state.quantity === 0) {\n            this.setState({ quantity: '' })\n        }\n    }\n\n    // Restore input placeholder when user blurs field\n    handleBlur = () => {\n        if (this.state.quantity === '') {\n            this.setState({ quantity: 0 })\n        }\n    }\n\n    handleInventoryAdd = async (e, { value }) => {\n        const { quantity, selectedFinish, selectedCondition } = this.state;\n        const { name } = this.props;\n        // This is the identifier for quantities of different finishes/conditions in the db\n        const type = `${selectedFinish}_${selectedCondition}`;\n\n        try {\n            this.setState({ submitDisable: true, submitLoading: true });\n\n            const { data } = await axios.post(ADD_CARD_TO_INVENTORY, {\n                quantity: quantity,\n                type: type,\n                cardInfo: { ...this.props },\n            }, { headers: makeAuthHeader() });\n\n            createToast({\n                color: 'green',\n                header: `${quantity}x ${name} ${quantity > 0 ? 'added' : 'removed'}!`,\n                duration: 2000\n            });\n\n            this.setState({\n                quantity: 0,\n                selectedFinish: checkCardFinish(\n                    this.props.nonfoil,\n                    this.props.foil\n                ).selectedFinish,\n                selectedCondition: 'NM',\n                finishDisabled: checkCardFinish(\n                    this.props.nonfoil,\n                    this.props.foil\n                ).finishDisabled,\n                submitDisable: false,\n                inventoryQty: data.qoh,\n                submitLoading: false\n            });\n\n            // Highlight the input after successful card add\n            $('#searchBar').focus().select();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            selectedFinish,\n            selectedCondition,\n            finishDisabled,\n            quantity,\n            submitDisable,\n            inventoryQty,\n            submitLoading\n        } = this.state;\n        const {\n            image_uris,\n            name,\n            set_name,\n            set,\n            rarity,\n            card_faces,\n            id\n        } = this.props;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as='h3'>\n                                {name}\n                                {' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohParser inventoryQty={inventoryQty} />\n                                {' '}\n                                <Label tag>\n                                    <MarketPrice id={id} />\n                                </Label>\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity\"\n                                            value={quantity}\n                                            onChange={this.handleQuantityChange}\n                                            onFocus={this.handleFocus}\n                                            onBlur={this.handleBlur}\n                                        />\n                                        <Form.Field\n                                            label=\"Finish\"\n                                            control={Select}\n                                            value={selectedFinish}\n                                            options={finishes}\n                                            disabled={finishDisabled}\n                                            onChange={this.handleFinishChange}\n                                        />\n                                        <Form.Field\n                                            label=\"Condition\"\n                                            control={Select}\n                                            value={selectedCondition}\n                                            options={cardConditions}\n                                            onChange={this.handleConditionChange}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to Inventory?\"\n                                            control={Button}\n                                            primary\n                                            disabled={\n                                                quantity === 0 ||\n                                                quantity === '' ||\n                                                submitDisable\n                                            }\n                                            onClick={this.handleInventoryAdd}\n                                            loading={submitLoading}\n                                        >\n                                            Submit\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport ScryfallCardListItem from './ScryfallCardListItem';\n\nfunction ScryfallCardList(props) {\n    // Tie the QOH to the fetched card, if it exists!\n    const cardList = props.cards.map(card => {\n        return (\n            <ScryfallCardListItem\n                showImage={props.showImages}\n                key={card.id}\n                {...card}\n                inventoryQty={props.quantities[card.id]}\n            />\n        );\n    });\n\n    return cardList\n}\n\nexport default ScryfallCardList;\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport ScryfallCardList from './ScryfallCardList';\nimport { Segment, Header, Icon } from 'semantic-ui-react'\nimport { GET_CARD_QTY_FROM_INVENTORY, GET_SCRYFALL_BULK_BY_TITLE } from './api_resources';\n\nclass Home extends React.Component {\n    state = { searchResults: [], inventoryQuantities: [], showImages: true };\n\n    handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(\n                GET_SCRYFALL_BULK_BY_TITLE,\n                {\n                    params: { title: term },\n                    headers: makeAuthHeader()\n                }\n            );\n\n            const ids = data.map(el => el.id);\n\n            // Fetches only the in-stock qty of a card tied to an `id`\n            const inventoryRes = await axios.post(\n                GET_CARD_QTY_FROM_INVENTORY,\n                { scryfallIds: ids },\n                { headers: makeAuthHeader() }\n            );\n\n            this.setState({\n                searchResults: data,\n                inventoryQuantities: inventoryRes.data\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    handleImageToggle = () => {\n        this.setState({ showImages: !this.state.showImages });\n    };\n\n    render() {\n        const { searchResults } = this.state;\n\n        return (\n            <React.Fragment>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n\n                {!searchResults.length &&\n                    <Segment placeholder>\n                        <Header icon>\n                            <Icon name=\"search\" />\n                            <em>\"Searching the future for answers often leads to further questions.\"</em>\n                        </Header>\n                    </Segment>}\n\n                <ScryfallCardList\n                    showImages={this.state.showImages}\n                    cards={this.state.searchResults}\n                    quantities={this.state.inventoryQuantities}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n    Segment,\n    Label,\n    Form,\n    Input,\n    Dropdown,\n    Button,\n    Item\n} from 'semantic-ui-react';\nimport CardImage from './CardImage';\nimport MarketPrice from './MarketPrice';\nimport QohParser from './QohParser';\nimport $ from 'jquery';\n\nfunction createConditionOptions(qoh, id) {\n    return Object.entries(qoh).map(d => {\n        const [conditionFinish, qty] = d;\n\n        return {\n            text: `${removeHyphen(conditionFinish)} | Qty: ${qty}`,\n            value: conditionFinish,\n            key: `${id}${conditionFinish}`\n        };\n    });\n}\n\nfunction removeHyphen(str) {\n    return str.split('_').join(' | ');\n}\n\nexport default class BrowseCardItem extends React.Component {\n    state = {\n        selectedFinishCondition: '',\n        selectedFinishConditionQty: 0,\n        quantityToSell: 0,\n        price: 0,\n        conditionOptions: createConditionOptions(this.props.qoh, this.props.id)\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const { selectedFinishConditionQty } = this.state;\n        let numVal = parseInt(value);\n\n        if (numVal > selectedFinishConditionQty) {\n            numVal = selectedFinishConditionQty;\n        }\n\n        if (isNaN((numVal)) || numVal < 0) { numVal = 0; }\n\n        this.setState({ quantityToSell: numVal });\n    };\n\n    handleSelectedFinishCondition = (e, { value }) => {\n        this.setState({\n            selectedFinishCondition: value,\n            selectedFinishConditionQty: this.props.qoh[value]\n        });\n    };\n\n    handlePriceChange = (e, { value }) => {\n        let numVal = Number(value);\n\n        if (isNaN((numVal)) || numVal < 0) { numVal = 0; }\n\n        this.setState({ price: numVal });\n    };\n\n    // Remove input placeholder when user tries to enter a number (to reduce user error)\n    handleFocus = (property) => {\n        if (this.state[property] === 0) {\n            this.setState({ [property]: '' })\n        }\n    }\n\n    // Restore input placeholder when user blurs field\n    handleBlur = (property) => {\n        if (this.state[property] === '') {\n            this.setState({ [property]: 0 })\n        }\n    }\n\n    handleAddToSale = () => {\n        const { selectedFinishCondition, quantityToSell, price } = this.state;\n\n        this.props.addToSaleList(\n            { ...this.props },\n            selectedFinishCondition,\n            quantityToSell,\n            price\n        );\n\n        // Reset state\n        this.setState({\n            selectedFinishCondition: '',\n            selectedFinishConditionQty: 0,\n            quantityToSell: 0,\n            price: 0,\n            conditionOptions: createConditionOptions(\n                this.props.qoh,\n                this.props.id\n            )\n        });\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    render() {\n        const {\n            name,\n            image_uris,\n            set,\n            set_name,\n            rarity,\n            qoh,\n            id,\n            card_faces\n        } = this.props;\n        const {\n            selectedFinishCondition,\n            selectedFinishConditionQty,\n            conditionOptions,\n            quantityToSell,\n            price\n        } = this.state;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as=\"h3\">\n                                {name}{' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohParser inventoryQty={qoh} />\n                                {' '}\n                                <Label tag>\n                                    <MarketPrice id={id} />\n                                </Label>\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Dropdown}\n                                            selection\n                                            placeholder=\"Select inventory\"\n                                            options={conditionOptions}\n                                            value={selectedFinishCondition}\n                                            label=\"Select finish/condition\"\n                                            onChange={\n                                                this.handleSelectedFinishCondition\n                                            }\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity to sell\"\n                                            value={quantityToSell}\n                                            onChange={this.handleQuantityChange}\n                                            disabled={!selectedFinishConditionQty}\n                                            onFocus={() => this.handleFocus('quantityToSell')}\n                                            onBlur={() => this.handleBlur('quantityToSell')}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Price\"\n                                            value={price}\n                                            onChange={this.handlePriceChange}\n                                            disabled={!selectedFinishConditionQty}\n                                            onFocus={() => this.handleFocus('price')}\n                                            onBlur={() => this.handleBlur('price')}\n                                            step={0.5}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to sale?\"\n                                            control={Button}\n                                            primary\n                                            onClick={this.handleAddToSale}\n                                            disabled={!quantityToSell}\n                                        >\n                                            Sell\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport BrowseCardItem from './BrowseCardItem';\n\nexport default function BrowseCardList(props) {\n    const cardList = props.cards.map(card => {\n        return (\n            <BrowseCardItem\n                key={card.id}\n                {...card}\n                addToSaleList={props.addToSaleList}\n            />\n        );\n    });\n\n    return cardList;\n}\n","import React from 'react';\nimport { Button, Icon, Label, Item, Segment } from 'semantic-ui-react';\nimport Price from './Price';\n\nexport default function SaleLineItem(props) {\n    const {\n        name,\n        set,\n        // set_name,\n        finishCondition,\n        qtyToSell,\n        price,\n        rarity,\n        deleteLineItem,\n        id\n    } = props;\n\n    return (\n        <Segment>\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Item.Header as=\"h4\">\n                            {name}{' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set.toUpperCase()}\n                            </Label>\n                        </Item.Header>\n                        <Item.Meta>\n                            <span>\n                                {qtyToSell}x @ <Price num={price} /> | {finishCondition}\n                            </span>\n                            <Button\n                                floated=\"right\"\n                                icon\n                                onClick={() => deleteLineItem(id, finishCondition)}\n                            >\n                                <Icon name=\"cancel\"></Icon>\n                            </Button>\n                        </Item.Meta>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React from 'react';\nimport Price from './Price';\n\nconst SalePriceTotal = ({ saleList }) => {\n    const total = saleList.length\n        ? saleList.reduce(\n              (acc, val) => acc + parseInt(val.qtyToSell) * Number(val.price),\n              0\n          )\n        : 0;\n\n    return <Price num={total} />;\n};\n\nexport default SalePriceTotal;\n","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Button,\n    Modal,\n    Icon,\n    Divider,\n} from 'semantic-ui-react';\nimport SearchBar from './SearchBar';\nimport BrowseCardList from './BrowseCardList';\nimport SaleLineItem from './SaleLineItem';\nimport SalePriceTotal from './SalePriceTotal';\nimport _ from 'lodash';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_CARDS_BY_TITLE, FINISH_SALE } from './api_resources';\nimport createToast from './createToast';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    showModal: false,\n    submitLoading: false,\n    searchTerm: ''\n};\n\nexport default class Sale extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term },\n                headers: makeAuthHeader()\n            });\n\n            this.setState({ searchResults: data, searchTerm: term });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    addToSaleList = (card, finishCondition, qtyToSell, price) => {\n        const newCard = { ...card, finishCondition, qtyToSell, price };\n        const oldState = [...this.state.saleListCards];\n\n        // Need to make sure same ID's with differing conditions are separate line-items\n        const idx = oldState.findIndex(el => {\n            return (\n                el.id === newCard.id && el.finishCondition === finishCondition\n            );\n        });\n\n        if (idx !== -1) {\n            oldState.splice(idx, 1, newCard);\n        } else {\n            oldState.push(newCard);\n        }\n\n        this.setState({ saleListCards: oldState });\n    };\n\n    removeFromSaleList = (id, finishCondition) => {\n        const newState = _.reject([...this.state.saleListCards], el => {\n            return el.id === id && el.finishCondition === finishCondition;\n        });\n\n        this.setState({ saleListCards: newState });\n    };\n\n    finalizeSale = async () => {\n        try {\n            this.setState({ submitLoading: true });\n\n            const { data } = await axios.post(FINISH_SALE, {\n                cards: this.state.saleListCards\n            }, { headers: makeAuthHeader() });\n\n            const saleID = data.sale_data.Sale.saleID;\n\n            createToast({\n                color: 'green',\n                header: 'Sale created in Lightspeed!',\n                message: `The id number is #${saleID}`,\n            });\n\n            this.setState(initialState);\n        } catch (e) {\n            createToast({\n                color: 'red',\n                header: 'Error!',\n                message: `Sale was not created`,\n            });\n\n            this.setState(initialState);\n            console.log(e);\n        }\n    };\n\n    closeModal = () => {\n        this.setState({ showModal: false });\n    };\n\n    render() {\n        const {\n            searchResults,\n            saleListCards,\n            showModal,\n            submitLoading,\n            searchTerm\n        } = this.state;\n\n        const list = saleListCards.map(card => {\n            return (\n                <SaleLineItem\n                    {...card}\n                    key={`${card.id}${card.finishCondition}${card.qtyToSell}`}\n                    deleteLineItem={this.removeFromSaleList}\n                />\n            );\n        });\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p>Zero results for <em>{searchTerm}</em></p>\n            }\n            return <p>Search for inventory to sell</p>; // Default text before search\n        }\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Row>\n                        <Grid.Column width=\"11\">\n                            <Header as=\"h2\">Inventory</Header>\n                            <Divider />\n\n                            {!searchResults.length &&\n                                <Segment placeholder>\n                                    <Header icon>\n                                        <Icon name=\"search\" />\n                                        <span>{searchNotification()}</span>\n                                    </Header>\n                                </Segment>}\n\n                            <BrowseCardList\n                                cards={searchResults}\n                                addToSaleList={this.addToSaleList}\n                            />\n                        </Grid.Column>\n                        <Grid.Column width=\"5\">\n                            <Header as=\"h2\">Sale Items</Header>\n                            <Divider />\n\n                            {!saleListCards.length &&\n                                <Segment placeholder>\n                                    <Header icon>\n                                        <Icon name=\"plus\" />\n                                        View and manage customer sale list here\n                                </Header>\n                                </Segment>}\n\n                            <React.Fragment>\n                                {list}\n                            </React.Fragment>\n\n                            {saleListCards.length > 0 && (\n                                <Segment clearing>\n                                    <Header floated=\"left\">\n                                        <Header sub>Subtotal</Header>\n                                        <SalePriceTotal\n                                            saleList={saleListCards}\n                                        />\n                                    </Header>\n                                    <Modal\n                                        basic\n                                        open={showModal}\n                                        trigger={\n                                            <Button\n                                                floated=\"right\"\n                                                primary\n                                                onClick={() => {\n                                                    this.setState({\n                                                        showModal: true\n                                                    });\n                                                }}\n                                            >\n                                                Finalize sale\n                                            </Button>\n                                        }\n                                    >\n                                        <Modal.Content>\n                                            <Header inverted as=\"h2\">\n                                                Finalize this sale?\n                                            </Header>\n                                            <p>\n                                                Click 'Yes' to create a sale\n                                                in Lightspeed. Please ensure that\n                                                you have all cards in hand and double-checked\n                                                the pull list. Undoing this action will require manual data entry!\n                                            </p>\n                                        </Modal.Content>\n                                        <Modal.Actions>\n                                            <Button\n                                                basic\n                                                color=\"red\"\n                                                inverted\n                                                onClick={this.closeModal}\n                                            >\n                                                <Icon name=\"remove\" /> No\n                                            </Button>\n                                            <Button\n                                                color=\"green\"\n                                                inverted\n                                                onClick={this.finalizeSale}\n                                                loading={submitLoading}\n                                            >\n                                                <Icon name=\"checkmark\" /> Yes\n                                            </Button>\n                                        </Modal.Actions>\n                                    </Modal>\n                                </Segment>\n                            )}\n                        </Grid.Column>\n                    </Grid.Row >\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst SalesListItem = ({ saleData, cardList }) => {\n    const quantitySold = cardList.reduce(\n        (pre, curr) => pre + curr.qtyToSell,\n        0\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>{saleData.saleID}</Table.Cell>\n            <Table.Cell>\n                {moment(saleData.createTime).format('MM/DD/YYYY - h:mm A')}\n            </Table.Cell>\n            <Table.Cell>{quantitySold}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default SalesListItem;\n","import React from 'react';\nimport SalesListItem from './SalesListItem';\nimport { Table } from 'semantic-ui-react';\n\nconst SalesList = ({ list }) => {\n    return (\n        <Table celled unstackable compact>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Sale ID</Table.HeaderCell>\n                    <Table.HeaderCell>Date of Sale</Table.HeaderCell>\n                    <Table.HeaderCell>Quantity Sold</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {list.map(({ sale_data, card_list, _id }) => (\n                    <SalesListItem\n                        saleData={sale_data}\n                        cardList={card_list}\n                        key={_id}\n                    />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default SalesList;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport SalesList from './SalesList';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_SALES_BY_TITLE } from './api_resources';\n\nclass BrowseSales extends Component {\n    state = { salesList: [], cardName: '' };\n\n    handleSearchSelect = async cardName => {\n        const { data } = await axios.get(GET_SALES_BY_TITLE, {\n            params: { cardName: cardName },\n            headers: makeAuthHeader()\n        });\n\n        this.setState({ salesList: data, cardName: cardName });\n    };\n\n    render() {\n        const { salesList, cardName } = this.state;\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n                <br />\n                <span>\n                    <em>\n                        {cardName !== '' && (\n                            <h4>\n                                {salesList.length} results for {cardName}\n                            </h4>\n                        )}\n                    </em>\n                </span>\n                <SalesList list={salesList} />\n            </div>\n        );\n    }\n}\n\nexport default BrowseSales;\n","import React from 'react';\nimport QohParser from './QohParser';\nimport { Image } from 'semantic-ui-react'\n\nconst wrapperStyle = {\n    position: 'relative',\n    display: 'inline-block',\n};\n\nconst overlayStyle = {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    padding: '9px 9px 9px 9px',\n    position: 'absolute',\n    zIndex: '1',\n    bottom: '0px',\n    left: '14px',\n    borderRadius: '7px'\n};\n\nconst roundedStyle = {\n    borderRadius: '15px'\n}\n\nconst image = (image_uris, card_faces) => {\n    try {\n        // If normal prop doesn't exist, move to catch block for flip card faces\n        return <Image src={image_uris.normal} size=\"medium\" style={roundedStyle} />;\n    } catch (e) {\n        return <Image src={card_faces[0].image_uris.normal} size=\"medium\" style={roundedStyle} />;\n    }\n};\n\nexport default function PublicCardItem({ image_uris, card_faces, qoh }) {\n    return (\n        <React.Fragment>\n            <div style={wrapperStyle}>\n                {image(image_uris, card_faces)}\n                <div style={overlayStyle}>\n                    <QohParser inventoryQty={qoh} />\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport PublicCardItem from './PublicCardItem';\nimport { Grid } from 'semantic-ui-react';\n\nconst gridStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'space-evenly',\n    height: '100%'\n};\n\nexport default function PublicCardList(props) {\n    const cardList = props.cards.map(card => {\n        return (\n            <PublicCardItem\n                key={card.id}\n                {...card}\n                addToSaleList={props.addToSaleList}\n            />\n        );\n    });\n\n    return (\n        <Grid style={gridStyle} >\n            {cardList}\n        </ Grid>\n    );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Icon,\n    Divider,\n} from 'semantic-ui-react';\nimport SearchBar from './SearchBar';\nimport PublicCardList from './PublicCardList';\nimport { GET_CARDS_BY_TITLE } from './api_resources';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    searchTerm: ''\n};\n\nexport default class PublicInventory extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term }\n            });\n\n            this.setState({ searchResults: data, searchTerm: term });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            searchResults,\n            searchTerm\n        } = this.state;\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p><em>{searchTerm}</em> is out of stock</p>\n            }\n            return <p>Search for a card</p>; // Default text before search\n        }\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Column>\n                        <Header as=\"h2\">Inventory Search</Header>\n                        <Divider />\n\n                        {!searchResults.length &&\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"search\" />\n                                    <span>{searchNotification()}</span>\n                                </Header>\n                            </Segment>}\n\n                        <PublicCardList\n                            cards={searchResults}\n                            addToSaleList={this.addToSaleList}\n                        />\n                    </Grid.Column>\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport createToast from './createToast';\nimport { Form, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\n\nconst initialState = { username: '', password: '', btnLoading: false };\n\nclass Login extends React.Component {\n    state = initialState;\n\n    handleInputChange = (e, { value }) => {\n        this.setState({ [e.target.name]: value });\n    };\n\n    login = async () => {\n        const { username, password } = this.state;\n\n        this.setState({ btnLoading: true });\n\n        const { authed } = await this.props.handleLogin(username, password);\n\n        if (authed) {\n            // Do not set state here to mitigate React setState warning after component unmounted due to redirect\n            createToast({\n                color: 'green',\n                header: 'Success',\n                message: `Enjoy your time here!`,\n            });\n        } else {\n            this.setState(initialState);\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Username or password was incorrect`,\n            });\n        }\n    };\n\n    render() {\n        const { username, password, btnLoading } = this.state;\n        const { loggedIn } = this.props;\n\n        if (loggedIn) {\n            return <Redirect to=\"/manage-inventory\" />;\n        }\n\n        return (\n            <Form>\n                <Form.Field>\n                    <Form.Input\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        label=\"Username\"\n                        value={username}\n                        onChange={this.handleInputChange}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <Form.Input\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        value={password}\n                        onChange={this.handleInputChange}\n                    />\n                </Form.Field>\n                <Button\n                    type=\"submit\"\n                    onClick={this.login}\n                    disabled={!username || !password}\n                    loading={btnLoading}\n                >\n                    Submit\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Header, Container } from 'semantic-ui-react';\n\nconst Logout = props => {\n    if (!props.loggedIn) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <React.Fragment>\n            <Container fluid>\n                <Header as=\"h3\" color=\"grey\"><i>Until we meet again, friend...</i></Header>\n                <Button onClick={() => props.handleLogin('', '')}>Logout</Button>\n            </Container>\n        </React.Fragment>\n    );\n};\n\nexport default Logout;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Sale from './Sale';\nimport BrowseSales from './BrowseSales';\nimport PublicInventory from './PublicInventory';\nimport Login from './Login';\nimport Logout from './Logout';\n\nfunction Main({ handleLogin, loggedIn }) {\n    // Use the render syntax in the Login component to bind passed props\n    return (\n        <div style={{ paddingTop: '52.63px', marginLeft: '20px', marginRight: '20px' }}>\n            <br />\n            <Switch>\n                <Route exact path=\"/manage-inventory\" component={Home} />\n                <Route exact path=\"/new-sale\" component={Sale} />\n                <Route exact path=\"/browse-sales\" component={BrowseSales} />\n                <Route exact path=\"/public-inventory\" component={PublicInventory} />\n                <Route\n                    exact\n                    path=\"/login\"\n                    render={() => (\n                        <Login handleLogin={handleLogin} loggedIn={loggedIn} />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/logout\"\n                    render={() => (\n                        <Logout handleLogin={handleLogin} loggedIn={loggedIn} />\n                    )}\n                />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport ballLogo from './logos/magic-ball.png'\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst style = {\n    background: \"linear-gradient(#2185d0, #206ac6)\",\n    boxShadow: '0 3px 5px 0 rgba(0,0,0,.25)'\n}\n\nclass Header extends React.Component {\n    render() {\n        const { loggedIn } = this.props;\n        return (\n            <Menu inverted fixed=\"top\" style={style}>\n                <Menu.Item>\n                    <img src={ballLogo} style={{ marginRight: '7px' }} alt=\"logo\" />\n                    <span><h3>Clubhouse Collection</h3></span>\n                </Menu.Item>\n                <Menu.Menu position=\"right\">\n                    <Menu.Item position=\"right\" as={Link} to=\"/public-inventory\">Search</Menu.Item>\n                    {loggedIn && <Dropdown item icon=\"bars\">\n                        <Dropdown.Menu>\n                            <React.Fragment>\n                                <Dropdown.Item as={Link} to=\"/manage-inventory\"><Icon name=\"plus\" color=\"blue\" />Manage Inventory</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/new-sale\" ><Icon name=\"dollar sign\" color=\"blue\" />New Sale</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/browse-sales\" ><Icon name=\"eye\" color=\"blue\" />Browse Sales</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/logout\" ><Icon name=\"log out\" color=\"blue\" />Logout</Dropdown.Item>\n                            </React.Fragment>\n                        </Dropdown.Menu>\n                    </Dropdown>}\n                    {!loggedIn && <Menu.Item position=\"right\" as={Link} to=\"/login\">Log in</Menu.Item>}\n                </Menu.Menu>\n            </Menu >\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport Main from './Main';\nimport Header from './Header';\nimport makeAuthHeader from './makeAuthHeader';\nimport { LOGIN } from './api_resources';\nimport axios from 'axios';\n\nclass App extends React.Component {\n    state = { loggedIn: !!localStorage.getItem('clubhouse_JWT') };\n\n    // This is passed to the Login component as props to trigger a re-render of the root navbar\n    handleLogin = async (username, password) => {\n        try {\n            const { data } = await axios.post(LOGIN, {\n                username: username.toLowerCase(),\n                password: password\n            }, { headers: makeAuthHeader() });\n\n            if (data.token) {\n                localStorage.setItem('clubhouse_JWT', data.token);\n\n                this.setState({\n                    loggedIn: !!localStorage.getItem('clubhouse_JWT')\n                });\n\n                return { authed: true };\n            } else {\n                localStorage.clear();\n\n                this.setState({\n                    loggedIn: !!localStorage.getItem('clubhouse_JWT')\n                });\n\n                return { authed: false };\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <Header loggedIn={this.state.loggedIn} />\n                <Main\n                    handleLogin={this.handleLogin}\n                    loggedIn={this.state.loggedIn}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}