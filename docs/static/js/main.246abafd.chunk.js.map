{"version":3,"sources":["logos/magic-ball.png","api_resources.js","makeAuthHeader.js","SearchBar.js","QohParser.js","Price.js","CardImage.js","ScryfallCardListItem.js","ScryfallCardList.js","Home.js","MarketPrice.js","BrowseCardItem.js","BrowseCardList.js","SaleLineItem.js","SalePriceTotal.js","Sale.js","SalesListItem.js","SalesList.js","BrowseSales.js","Login.js","Logout.js","Main.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_CARDS_BY_TITLE","GET_CARDS_FROM_INVENTORY","FINISH_SALE","ADD_CARD_TO_INVENTORY","GET_INVENTORY_QUERY","GET_SALES_BY_TITLE","LOGIN","SCRYFALL_AUTOCOMPLETE","SCRYFALL_SEARCH","SCRYFALL_ID_SEARCH","makeAuthHeader","Authorization","localStorage","getItem","SearchBar","state","isLoading","term","autocomplete","results","defaultSearchValue","handleSearchChange","e","value","setState","length","setTimeout","a","async","axios","get","headers","data","formattedResults","map","el","title","handleResultSelect","result","props","handleSearchSelect","this","Search","onSearchChange","_","debounce","trailing","onResultSelect","loading","placeholder","selectFirstResult","React","Component","QohParser","inventoryQty","foilQty","nonfoilQty","FOIL_NM","FOIL_LP","FOIL_MP","FOIL_HP","NONFOIL_NM","NONFOIL_LP","NONFOIL_MP","NONFOIL_HP","foilColor","color","nonfoilColor","Fragment","Label","image","Detail","Price","num","price","Number","toFixed","style","boxShadow","CardImage","image_uris","card_faces","Image","src","normal","size","finishes","key","text","cardConditions","checkCardFinish","nonfoilProp","foilProp","selectedFinish","finishDisabled","ScryfallCardListItem","quantity","nonfoil","foil","selectedCondition","submitDisable","submitLoading","handleFinishChange","console","log","handleConditionChange","handleQuantityChange","val","parseInt","isNaN","handleInventoryAdd","name","type","post","cardInfo","toastjsx","Message","positive","compact","Header","toaster","notify","position","duration","qoh","set_name","set","rarity","id","prices","Segment","Item","Group","divided","Content","as","className","fontSize","String","toUpperCase","tag","usd","Description","Form","Field","control","Input","label","onChange","Select","options","disabled","Button","primary","onClick","ScryfallCardList","cards","card","showImage","showImages","quantities","Home","searchResults","inventoryQuantities","encodedTerm","encodeURI","searchRes","ids","scryfallIds","inventoryRes","handleImageToggle","MarketPrice","createConditionOptions","Object","entries","d","str","conditionFinish","qty","split","join","BrowseCardItem","selectedFinishCondition","selectedFinishConditionQty","quantityToSell","conditionOptions","handleSelectedFinishCondition","handlePriceChange","handleAddToSale","addToSaleList","Dropdown","selection","BrowseCardList","SaleLineItem","finishCondition","qtyToSell","deleteLineItem","Meta","floated","icon","Icon","SalePriceTotal","saleList","total","reduce","acc","createToast","header","message","initialState","saleListCards","showModal","Sale","params","newCard","oldState","idx","findIndex","splice","push","removeFromSaleList","newState","reject","finalizeSale","saleID","sale_data","closeModal","list","Grid","stackable","Row","Column","width","clearing","sub","Modal","basic","open","trigger","inverted","Actions","SalesListItem","saleData","quantitySold","cardList","pre","curr","Table","Cell","moment","createTime","format","SalesList","celled","unstackable","HeaderCell","Body","card_list","_id","BrowseSales","salesList","cardName","username","password","btnLoading","Login","handleInputChange","target","login","handleLogin","authed","loggedIn","to","Logout","Main","paddingTop","marginLeft","marginRight","exact","path","component","render","background","Menu","fixed","ballLogo","alt","item","Link","App","toLowerCase","token","setItem","clear","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.246abafd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magic-ball.c3fcddd6.png\";","// Maps all GCF and Scryfall API endpoints for code re-use\n\nmodule.exports = {\n    GET_CARDS_BY_TITLE:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByTitle',\n    GET_CARDS_FROM_INVENTORY:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsFromInventory',\n    FINISH_SALE:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/finishSale',\n    ADD_CARD_TO_INVENTORY:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/addCardToInventory',\n    GET_INVENTORY_QUERY:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/inventorySearchQuery',\n    GET_SALES_BY_TITLE:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/getSales',\n    LOGIN: 'https://us-central1-clubhouse-collection.cloudfunctions.net/getJwt',\n    SCRYFALL_AUTOCOMPLETE: 'https://api.scryfall.com/cards/autocomplete',\n    SCRYFALL_SEARCH: 'https://api.scryfall.com/cards/search',\n    SCRYFALL_ID_SEARCH: 'https://api.scryfall.com/cards/'\n};\n","/**\n * This function is a helper for Axios, it yields an object for Axios params\n */\nexport default function makeAuthHeader() {\n    const header = { Authorization: `Bearer ${localStorage.getItem('clubhouse_JWT')}` };\n    return header;\n}","import React from 'react';\nimport { Search } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_AUTOCOMPLETE } from './api_resources';\n\nclass SearchBar extends React.Component {\n    state = {\n        isLoading: false,\n        term: '',\n        autocomplete: [],\n        results: [],\n        defaultSearchValue: 'Search for a card'\n    };\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, term: value });\n\n        if (this.state.term.length < 1)\n            return this.setState({\n                isLoading: false,\n                term: '',\n                results: [],\n                autocomplete: [],\n                defaultSearchValue: 'Search for a card'\n            });\n\n        setTimeout(async () => {\n            const { data } = await axios.get(\n                `${SCRYFALL_AUTOCOMPLETE}?q=${this.state.term}`,\n                { headers: makeAuthHeader() }\n            );\n\n            const formattedResults = data.data.map(el => {\n                return { title: el };\n            });\n\n            this.setState({\n                results: formattedResults,\n                isLoading: false\n            });\n        }, 300);\n    };\n\n    handleResultSelect = (e, { result }) => {\n        this.props.handleSearchSelect(result.title);\n    };\n\n    render() {\n        const { results, isLoading, defaultSearchValue } = this.state;\n\n        return (\n            <Search\n                onSearchChange={_.debounce(this.handleSearchChange, 300, {\n                    trailing: true\n                })}\n                onResultSelect={this.handleResultSelect}\n                loading={isLoading}\n                results={results}\n                placeholder={defaultSearchValue}\n                selectFirstResult={true}\n            />\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\n// This component parses the `qoh` object from mongo into something\n// more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function QohParser({ inventoryQty }) {\n    let foilQty = 0;\n    let nonfoilQty = 0;\n\n    if (inventoryQty) { // Check to see if props exist\n        foilQty =\n            (inventoryQty.FOIL_NM || 0) +\n            (inventoryQty.FOIL_LP || 0) +\n            (inventoryQty.FOIL_MP || 0) +\n            (inventoryQty.FOIL_HP || 0);\n\n        nonfoilQty =\n            (inventoryQty.NONFOIL_NM || 0) +\n            (inventoryQty.NONFOIL_LP || 0) +\n            (inventoryQty.NONFOIL_MP || 0) +\n            (inventoryQty.NONFOIL_HP || 0);\n    }\n\n    const foilColor = {};\n    if (foilQty > 0) { foilColor.color = 'blue'; }\n\n    const nonfoilColor = {};\n    if (nonfoilQty > 0) { nonfoilColor.color = 'blue'; }\n\n    return (\n        <React.Fragment>\n            <Label {...foilColor} image>\n                Foil\n        <Label.Detail>{foilQty}</Label.Detail>\n            </Label>\n            <Label {...nonfoilColor} image>\n                Nonfoil\n        <Label.Detail>{nonfoilQty}</Label.Detail>\n            </Label>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\n\nconst Price = ({ num }) => {\n    const price = Number(num).toFixed(2);\n    return <span>${price}</span>;\n};\n\nexport default Price;\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nconst style = {\n    boxShadow: '2px 2px 5px 0 rgba(0,0,0,.25)'\n}\n\nconst CardImage = ({ image_uris, card_faces }) => {\n    try {\n        // If normal prop doesn't exist, move to catch block for flip card faces\n        return <Image src={image_uris.normal} size=\"tiny\" style={style} />;\n    } catch (e) {\n        return <Image src={card_faces[0].image_uris.normal} size=\"tiny\" style={style} />;\n\n        /**\n         * Uncomment this if they want all card faces displayed, not just the front\n         */\n        // return card_faces.map(face => {\n        //     return <Image src={face.image_uris.normal} size=\"tiny\" />;\n        // });\n    }\n};\n\nexport default CardImage;\n","import React, { Component } from 'react';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Message,\n    Item\n} from 'semantic-ui-react';\nimport axios from 'axios';\nimport QohParser from './QohParser';\nimport toaster from 'toasted-notes';\nimport Price from './Price';\nimport CardImage from './CardImage';\nimport makeAuthHeader from './makeAuthHeader';\nimport { ADD_CARD_TO_INVENTORY } from './api_resources';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n// Use this function to seed state from props\nfunction checkCardFinish(nonfoilProp, foilProp) {\n    if (!nonfoilProp && foilProp) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoilProp && !foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoilProp && foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default class ScryfallCardListItem extends Component {\n    state = {\n        quantity: 0,\n        selectedFinish: checkCardFinish(this.props.nonfoil, this.props.foil)\n            .selectedFinish,\n        selectedCondition: 'NM',\n        finishDisabled: checkCardFinish(this.props.nonfoil, this.props.foil)\n            .finishDisabled,\n        submitDisable: false,\n        inventoryQty: this.props.inventoryQty,\n        submitLoading: false\n    };\n\n    handleFinishChange = (e, { value }) => {\n        this.setState({ selectedFinish: value }, () => {\n            console.log(this.state);\n        });\n    };\n\n    handleConditionChange = (e, { value }) => {\n        this.setState({ selectedCondition: value }, () => {\n            console.log(this.state);\n        });\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const val = parseInt(value);\n        const quantity = isNaN(val) ? '' : val; // Check for NaN\n        this.setState({ quantity: quantity });\n    };\n\n    handleInventoryAdd = async (e, { value }) => {\n        const { quantity, selectedFinish, selectedCondition } = this.state;\n        const { name } = this.props;\n        // This is the identifier for quantities of different finishes/conditions in the db\n        const type = `${selectedFinish}_${selectedCondition}`;\n\n        try {\n            this.setState({ submitDisable: true, submitLoading: true });\n\n            const { data } = await axios.post(ADD_CARD_TO_INVENTORY, {\n                quantity: quantity,\n                type: type,\n                cardInfo: { ...this.props },\n            }, { headers: makeAuthHeader() });\n\n            const toastjsx = (\n                <Message positive compact>\n                    <Message.Header>\n                        {quantity}x {name} {quantity > 0 ? 'added' : 'removed'}!\n                    </Message.Header>\n                </Message>\n            );\n\n            toaster.notify(() => toastjsx, {\n                position: 'bottom-right',\n                duration: 2000\n            });\n\n            this.setState({\n                quantity: 0,\n                selectedFinish: checkCardFinish(\n                    this.props.nonfoil,\n                    this.props.foil\n                ).selectedFinish,\n                selectedCondition: 'NM',\n                finishDisabled: checkCardFinish(\n                    this.props.nonfoil,\n                    this.props.foil\n                ).finishDisabled,\n                submitDisable: false,\n                inventoryQty: data.qoh,\n                submitLoading: false\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            selectedFinish,\n            selectedCondition,\n            finishDisabled,\n            quantity,\n            submitDisable,\n            inventoryQty,\n            submitLoading\n        } = this.state;\n        const {\n            image_uris,\n            name,\n            set_name,\n            set,\n            rarity,\n            id,\n            card_faces,\n            prices\n        } = this.props;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as='h3'>\n                                {name}\n                                {' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohParser inventoryQty={inventoryQty} />\n                                {' '}\n                                <Label tag>\n                                    Est. {prices.usd ? <Price num={prices.usd} /> : 'not found'}\n                                </Label>\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity\"\n                                            value={quantity}\n                                            onChange={this.handleQuantityChange}\n                                        />\n                                        <Form.Field\n                                            label=\"Finish\"\n                                            control={Select}\n                                            value={selectedFinish}\n                                            options={finishes}\n                                            disabled={finishDisabled}\n                                            onChange={this.handleFinishChange}\n                                        />\n                                        <Form.Field\n                                            label=\"Condition\"\n                                            control={Select}\n                                            value={selectedCondition}\n                                            options={cardConditions}\n                                            onChange={this.handleConditionChange}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to Inventory?\"\n                                            control={Button}\n                                            primary\n                                            disabled={\n                                                quantity === 0 ||\n                                                quantity === '' ||\n                                                submitDisable\n                                            }\n                                            onClick={this.handleInventoryAdd}\n                                            loading={submitLoading}\n                                        >\n                                            Submit\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport ScryfallCardListItem from './ScryfallCardListItem';\n\nfunction ScryfallCardList(props) {\n    // Tie the QOH to the fetched card, if it exists!\n    const cardList = props.cards.map(card => {\n        return (\n            <ScryfallCardListItem\n                showImage={props.showImages}\n                key={card.id}\n                {...card}\n                inventoryQty={props.quantities[card.id]}\n            />\n        );\n    });\n\n    return cardList\n}\n\nexport default ScryfallCardList;\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport ScryfallCardList from './ScryfallCardList';\n// Un-comment this if hide-image feature is needed\n// import { Checkbox, Header } from 'semantic-ui-react';\nimport { SCRYFALL_SEARCH, GET_CARDS_FROM_INVENTORY } from './api_resources';\n\nclass Home extends React.Component {\n    state = { searchResults: [], inventoryQuantities: [], showImages: true };\n\n    handleSearchSelect = async term => {\n        const encodedTerm = encodeURI(`\"${term}\"`);\n\n        try {\n            const searchRes = await axios.get(\n                `${SCRYFALL_SEARCH}?q=!${encodedTerm}%20unique%3Aprints%20game%3Apaper`,\n                { headers: makeAuthHeader() }\n            );\n\n            const ids = searchRes.data.data.map(el => el.id);\n            const inventoryRes = await axios.post(GET_CARDS_FROM_INVENTORY, { scryfallIds: ids }, { headers: makeAuthHeader() });\n\n            this.setState({\n                searchResults: searchRes.data.data,\n                inventoryQuantities: inventoryRes.data\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    handleImageToggle = () => {\n        this.setState({ showImages: !this.state.showImages });\n    };\n\n    render() {\n        return (\n            <div>\n                <div>\n                    {/* <div>\n                        <Header sub>Image Toggle</Header>\n                        <Checkbox\n                            toggle\n                            onClick={this.handleImageToggle}\n                            defaultChecked\n                        ></Checkbox>\n                    </div> */}\n                    <SearchBar handleSearchSelect={this.handleSearchSelect} />\n                </div>\n                <ScryfallCardList\n                    showImages={this.state.showImages}\n                    cards={this.state.searchResults}\n                    quantities={this.state.inventoryQuantities}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport axios from 'axios';\nimport Price from './Price';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_ID_SEARCH } from './api_resources';\n\nclass MarketPrice extends React.Component {\n    state = { price: null };\n\n    async componentDidMount() {\n        const { id } = this.props;\n        const { data } = await axios.get(`${SCRYFALL_ID_SEARCH}${id}`, { headers: makeAuthHeader() });\n\n        this.setState({ price: Number(data.prices.usd) });\n    }\n\n    render() {\n        const { price } = this.state;\n        return (\n            <span>\n                Est. {price ? <Price num={price} /> : 'not found'}\n            </span>\n        );\n    }\n}\n\nexport default MarketPrice;\n","import React from 'react';\nimport {\n    Segment,\n    Label,\n    Form,\n    Input,\n    Dropdown,\n    Button,\n    Item\n} from 'semantic-ui-react';\nimport CardImage from './CardImage';\nimport MarketPrice from './MarketPrice';\nimport QohParser from './QohParser';\n\nfunction createConditionOptions(qoh, id) {\n    return Object.entries(qoh).map(d => {\n        const [conditionFinish, qty] = d;\n\n        return {\n            text: `${removeHyphen(conditionFinish)} | Qty: ${qty}`,\n            value: conditionFinish,\n            key: `${id}${conditionFinish}`\n        };\n    });\n}\n\nfunction removeHyphen(str) {\n    return str.split('_').join(' | ');\n}\n\nexport default class BrowseCardItem extends React.Component {\n    state = {\n        selectedFinishCondition: '',\n        selectedFinishConditionQty: 0,\n        quantityToSell: 0,\n        price: 0,\n        conditionOptions: createConditionOptions(this.props.qoh, this.props.id)\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const { selectedFinishConditionQty } = this.state;\n        if (value > selectedFinishConditionQty) {\n            value = selectedFinishConditionQty;\n        }\n        if (value < 0) value = 0;\n        this.setState({ quantityToSell: parseInt(value) });\n    };\n\n    handleSelectedFinishCondition = (e, { value }) => {\n        this.setState({\n            selectedFinishCondition: value,\n            selectedFinishConditionQty: this.props.qoh[value]\n        });\n    };\n\n    handlePriceChange = (e, { value }) => {\n        this.setState({\n            price: value\n        });\n    };\n\n    handleAddToSale = () => {\n        const { id, name, set } = this.props;\n        const { selectedFinishCondition, quantityToSell, price } = this.state;\n\n        this.props.addToSaleList(\n            { ...this.props },\n            selectedFinishCondition,\n            quantityToSell,\n            price\n        );\n\n        // Reset state\n        this.setState({\n            selectedFinishCondition: '',\n            selectedFinishConditionQty: 0,\n            quantityToSell: 0,\n            price: 0,\n            conditionOptions: createConditionOptions(\n                this.props.qoh,\n                this.props.id\n            )\n        });\n    };\n\n    render() {\n        const {\n            name,\n            image_uris,\n            set,\n            set_name,\n            rarity,\n            qoh,\n            id,\n            card_faces\n        } = this.props;\n        const {\n            selectedFinishCondition,\n            selectedFinishConditionQty,\n            conditionOptions,\n            quantityToSell,\n            price\n        } = this.state;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as=\"h3\">\n                                {name}{' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohParser inventoryQty={qoh} />\n                                {' '}\n                                <Label tag>\n                                    <MarketPrice id={id} />\n                                </Label>\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Dropdown}\n                                            selection\n                                            placeholder=\"Select inventory\"\n                                            options={conditionOptions}\n                                            value={selectedFinishCondition}\n                                            label=\"Select finish/condition\"\n                                            onChange={\n                                                this.handleSelectedFinishCondition\n                                            }\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity to sell\"\n                                            value={quantityToSell}\n                                            onChange={this.handleQuantityChange}\n                                            disabled={!selectedFinishConditionQty}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Price\"\n                                            value={price}\n                                            onChange={this.handlePriceChange}\n                                            disabled={!selectedFinishConditionQty}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to sale?\"\n                                            control={Button}\n                                            primary\n                                            onClick={this.handleAddToSale}\n                                            disabled={!quantityToSell}\n                                        >\n                                            Sell\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport BrowseCardItem from './BrowseCardItem';\n\nexport default function BrowseCardList(props) {\n    const cardList = props.cards.map(card => {\n        return (\n            <BrowseCardItem\n                key={card.id}\n                {...card}\n                addToSaleList={props.addToSaleList}\n            />\n        );\n    });\n\n    return cardList;\n}\n","import React from 'react';\nimport { Button, Icon, Label, Item, Segment } from 'semantic-ui-react';\nimport Price from './Price';\n\nexport default function SaleLineItem(props) {\n    const {\n        name,\n        set,\n        // set_name,\n        finishCondition,\n        qtyToSell,\n        price,\n        rarity,\n        deleteLineItem,\n        id\n    } = props;\n\n    return (\n        <Segment>\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Item.Header as=\"h4\">\n                            {name}{' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set.toUpperCase()}\n                            </Label>\n                        </Item.Header>\n                        <Item.Meta>\n                            <span>\n                                {qtyToSell}x @ <Price num={price} /> | {finishCondition}\n                            </span>\n                            <Button\n                                floated=\"right\"\n                                icon\n                                onClick={() => deleteLineItem(id, finishCondition)}\n                            >\n                                <Icon name=\"cancel\"></Icon>\n                            </Button>\n                        </Item.Meta>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React from 'react';\nimport Price from './Price';\n\nconst SalePriceTotal = ({ saleList }) => {\n    const total = saleList.length\n        ? saleList.reduce(\n              (acc, val) => acc + parseInt(val.qtyToSell) * Number(val.price),\n              0\n          )\n        : 0;\n\n    return <Price num={total} />;\n};\n\nexport default SalePriceTotal;\n","import React from 'react';\nimport axios from 'axios';\nimport toaster from 'toasted-notes';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Button,\n    Modal,\n    Icon,\n    Message\n} from 'semantic-ui-react';\nimport SearchBar from './SearchBar';\nimport BrowseCardList from './BrowseCardList';\nimport SaleLineItem from './SaleLineItem';\nimport SalePriceTotal from './SalePriceTotal';\nimport _ from 'lodash';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_CARDS_BY_TITLE, FINISH_SALE } from './api_resources';\n\n/**\n * Helper function to create toasts!\n * @param {Object} param0\n */\nconst createToast = ({ color, header, message, position }) => {\n    return toaster.notify(\n        () => (\n            <Message color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </Message>\n        ),\n        { position: position }\n    );\n};\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    showModal: false,\n    submitLoading: false\n};\n\nexport default class Sale extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term },\n                headers: makeAuthHeader()\n            });\n\n            this.setState({ searchResults: data });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    addToSaleList = (card, finishCondition, qtyToSell, price) => {\n        const newCard = { ...card, finishCondition, qtyToSell, price };\n        const oldState = [...this.state.saleListCards];\n\n        // Need to make sure same ID's with differing conditions are separate line-items\n        const idx = oldState.findIndex(el => {\n            return (\n                el.id === newCard.id && el.finishCondition === finishCondition\n            );\n        });\n\n        if (idx !== -1) {\n            oldState.splice(idx, 1, newCard);\n        } else {\n            oldState.push(newCard);\n        }\n\n        this.setState({ saleListCards: oldState });\n    };\n\n    removeFromSaleList = (id, finishCondition) => {\n        const newState = _.reject([...this.state.saleListCards], el => {\n            return el.id === id && el.finishCondition === finishCondition;\n        });\n\n        this.setState({ saleListCards: newState });\n    };\n\n    finalizeSale = async () => {\n        try {\n            this.setState({ submitLoading: true });\n\n            const { data } = await axios.post(FINISH_SALE, {\n                cards: this.state.saleListCards\n            }, { headers: makeAuthHeader() });\n\n            const saleID = data.sale_data.Sale.saleID;\n\n            createToast({\n                color: 'green',\n                header: 'Sale created in Lightspeed!',\n                message: `The id number is #${saleID}`,\n                position: 'bottom-right'\n            });\n\n            this.setState(initialState);\n        } catch (e) {\n            createToast({\n                color: 'red',\n                header: 'Error!',\n                message: `Sale was not created`,\n                position: 'bottom-right'\n            });\n\n            this.setState(initialState);\n            console.log(e);\n        }\n    };\n\n    closeModal = () => {\n        this.setState({ showModal: false });\n    };\n\n    render() {\n        const {\n            searchResults,\n            saleListCards,\n            showModal,\n            submitLoading\n        } = this.state;\n\n        const list = saleListCards.map(card => {\n            return (\n                <SaleLineItem\n                    {...card}\n                    key={`${card.id}${card.finishCondition}${card.qtyToSell}`}\n                    deleteLineItem={this.removeFromSaleList}\n                />\n            );\n        });\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleResultSelect} />\n                <Grid stackable={true}>\n                    <Grid.Row>\n                        <Grid.Column width=\"11\">\n                            <Header as=\"h2\">Inventory</Header>\n                            <Segment>\n                                <BrowseCardList\n                                    cards={searchResults}\n                                    addToSaleList={this.addToSaleList}\n                                />\n                            </Segment>\n                        </Grid.Column>\n                        <Grid.Column width=\"5\">\n                            <Header as=\"h2\">Sale Items</Header>\n                            <Segment>{list}</Segment>\n                            {saleListCards.length > 0 && (\n                                <Segment clearing>\n                                    <Header floated=\"left\">\n                                        <Header sub>Subtotal</Header>\n                                        <SalePriceTotal\n                                            saleList={saleListCards}\n                                        />\n                                    </Header>\n                                    <Modal\n                                        basic\n                                        open={showModal}\n                                        trigger={\n                                            <Button\n                                                floated=\"right\"\n                                                primary\n                                                onClick={() => {\n                                                    this.setState({\n                                                        showModal: true\n                                                    });\n                                                }}\n                                            >\n                                                Finalize sale\n                                            </Button>\n                                        }\n                                    >\n                                        <Modal.Content>\n                                            <Header inverted as=\"h2\">\n                                                Finalize this sale for\n                                                Lightspeed?\n                                            </Header>\n                                            <p>\n                                                Click 'Yes' to complete the sale\n                                                in Lightspeed. Please ensure that\n                                                you have all cards in hand and double-checked\n                                                the pull list. Undoing this action will be quite painful!\n                                            </p>\n                                        </Modal.Content>\n                                        <Modal.Actions>\n                                            <Button\n                                                basic\n                                                color=\"red\"\n                                                inverted\n                                                onClick={this.closeModal}\n                                            >\n                                                <Icon name=\"remove\" /> No\n                                            </Button>\n                                            <Button\n                                                color=\"green\"\n                                                inverted\n                                                onClick={this.finalizeSale}\n                                                loading={submitLoading}\n                                            >\n                                                <Icon name=\"checkmark\" /> Yes\n                                            </Button>\n                                        </Modal.Actions>\n                                    </Modal>\n                                </Segment>\n                            )}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst SalesListItem = ({ saleData, cardList }) => {\n    const quantitySold = cardList.reduce(\n        (pre, curr) => pre + curr.qtyToSell,\n        0\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>{saleData.saleID}</Table.Cell>\n            <Table.Cell>\n                {moment(saleData.createTime).format('MM/DD/YYYY - h:mm A')}\n            </Table.Cell>\n            <Table.Cell>{quantitySold}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default SalesListItem;\n","import React from 'react';\nimport SalesListItem from './SalesListItem';\nimport { Table } from 'semantic-ui-react';\n\nconst SalesList = ({ list }) => {\n    return (\n        <Table celled unstackable compact>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Sale ID</Table.HeaderCell>\n                    <Table.HeaderCell>Date of Sale</Table.HeaderCell>\n                    <Table.HeaderCell>Quantity Sold</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {list.map(({ sale_data, card_list, _id }) => (\n                    <SalesListItem\n                        saleData={sale_data}\n                        cardList={card_list}\n                        key={_id}\n                    />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default SalesList;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport SalesList from './SalesList';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_SALES_BY_TITLE } from './api_resources';\n\nclass BrowseSales extends Component {\n    state = { salesList: [], cardName: '' };\n\n    handleSearchSelect = async cardName => {\n        const { data } = await axios.get(GET_SALES_BY_TITLE, {\n            params: { cardName: cardName },\n            headers: makeAuthHeader()\n        });\n\n        this.setState({ salesList: data, cardName: cardName });\n    };\n\n    render() {\n        const { salesList, cardName } = this.state;\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n                <br />\n                <span>\n                    <em>\n                        {cardName !== '' && (\n                            <h4>\n                                {salesList.length} results for {cardName}\n                            </h4>\n                        )}\n                    </em>\n                </span>\n                <SalesList list={salesList} />\n            </div>\n        );\n    }\n}\n\nexport default BrowseSales;\n","import React from 'react';\nimport toaster from 'toasted-notes';\nimport { Form, Button, Message } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\n\n/**\n * Helper function to create toasts!\n * @param {Object} param0\n */\nconst createToast = ({ color, header, message, position }) => {\n    return toaster.notify(\n        () => (\n            <Message color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </Message>\n        ),\n        { position: position }\n    );\n};\n\nconst initialState = { username: '', password: '', btnLoading: false };\n\nclass Login extends React.Component {\n    state = initialState;\n\n    handleInputChange = (e, { value }) => {\n        this.setState({ [e.target.name]: value });\n    };\n\n    login = async () => {\n        const { username, password } = this.state;\n\n        this.setState({ btnLoading: true });\n\n        const { authed } = await this.props.handleLogin(username, password);\n\n        this.setState({ btnLoading: false });\n\n        if (authed) {\n            this.setState(initialState);\n            createToast({\n                color: 'green',\n                header: 'Success!',\n                message: `You were logged in`,\n                position: 'bottom-right'\n            });\n        } else {\n            this.setState(initialState);\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Login failed`,\n                position: 'bottom-right'\n            });\n        }\n    };\n\n    render() {\n        const { username, password, btnLoading } = this.state;\n        const { loggedIn } = this.props;\n\n        if (loggedIn) {\n            return <Redirect to=\"/manage-inventory\" />;\n        }\n\n        return (\n            <Form>\n                <Form.Field>\n                    <Form.Input\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        label=\"Username\"\n                        value={username}\n                        onChange={this.handleInputChange}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <Form.Input\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        value={password}\n                        onChange={this.handleInputChange}\n                    />\n                </Form.Field>\n                <Button\n                    type=\"submit\"\n                    onClick={this.login}\n                    disabled={!username || !password}\n                    loading={btnLoading}\n                >\n                    Submit\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Header } from 'semantic-ui-react';\n\nconst Logout = props => {\n    if (!props.loggedIn) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <React.Fragment>\n            <Header as=\"h3\" color=\"grey\"><i>Until we meet again, friend...</i></Header>\n            <Button onClick={() => props.handleLogin('', '')}>Logout</Button>\n        </React.Fragment>\n    );\n};\n\nexport default Logout;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Sale from './Sale';\nimport BrowseSales from './BrowseSales';\nimport Login from './Login';\nimport Logout from './Logout';\n\nfunction Main({ handleLogin, loggedIn }) {\n    // Use the render syntax in the Login component to bind passed props\n    return (\n        <div style={{ paddingTop: '52.63px', marginLeft: '20px', marginRight: '20px' }}>\n            <br />\n            <Switch>\n                <Route exact path=\"/manage-inventory\" component={Home} />\n                <Route exact path=\"/new-sale\" component={Sale} />\n                <Route exact path=\"/browse-sales\" component={BrowseSales} />\n                <Route\n                    exact\n                    path=\"/login\"\n                    render={() => (\n                        <Login handleLogin={handleLogin} loggedIn={loggedIn} />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/logout\"\n                    render={() => (\n                        <Logout handleLogin={handleLogin} loggedIn={loggedIn} />\n                    )}\n                />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport ballLogo from './logos/magic-ball.png'\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst style = {\n    background: \"linear-gradient(#2185d0, #206ac6)\",\n    boxShadow: '0 3px 5px 0 rgba(0,0,0,.25)'\n}\n\nclass Header extends React.Component {\n    render() {\n        const { loggedIn } = this.props;\n        return (\n            <Menu inverted fixed=\"top\" style={style}>\n                <Menu.Item>\n                    <img src={ballLogo} style={{ marginRight: '7px' }} alt=\"logo\" />\n                    <span><h3>Clubhouse Collection</h3></span>\n                </Menu.Item>\n                <Menu.Menu position=\"right\">\n                    {loggedIn && <Dropdown item icon=\"bars\">\n                        <Dropdown.Menu>\n                            <React.Fragment>\n                                <Dropdown.Item as={Link} to=\"/manage-inventory\"><Icon name=\"plus\" color=\"blue\" />Manage Inventory</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/new-sale\" ><Icon name=\"dollar sign\" color=\"blue\" />New Sale</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/browse-sales\" ><Icon name=\"eye\" color=\"blue\" />Browse Sales</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/logout\" ><Icon name=\"log out\" color=\"blue\" />Logout</Dropdown.Item>\n                            </React.Fragment>\n                        </Dropdown.Menu>\n                    </Dropdown>}\n                    {!loggedIn && <Menu.Item position=\"right\" as={Link} to=\"/login\">Log in</Menu.Item>}\n                </Menu.Menu>\n            </Menu >\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport Main from './Main';\nimport Header from './Header';\nimport makeAuthHeader from './makeAuthHeader';\nimport { LOGIN } from './api_resources';\nimport axios from 'axios';\n\nclass App extends React.Component {\n    state = { loggedIn: !!localStorage.getItem('clubhouse_JWT') };\n\n    // This is passed to the Login component as props to trigger a re-render of the root navbar\n    handleLogin = async (username, password) => {\n        try {\n            const { data } = await axios.post(LOGIN, {\n                username: username.toLowerCase(),\n                password: password\n            }, { headers: makeAuthHeader() });\n\n            if (data.token) {\n                localStorage.setItem('clubhouse_JWT', data.token);\n\n                this.setState({\n                    loggedIn: !!localStorage.getItem('clubhouse_JWT')\n                });\n\n                return { authed: true };\n            } else {\n                localStorage.clear();\n\n                this.setState({\n                    loggedIn: !!localStorage.getItem('clubhouse_JWT')\n                });\n\n                return { authed: false };\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <Header loggedIn={this.state.loggedIn} />\n                <Main\n                    handleLogin={this.handleLogin}\n                    loggedIn={this.state.loggedIn}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}