{"version":3,"sources":["LandingPage/clubhouse_products.png","utils/api_resources.js","LandingPage/ikoria_splash.jpg","LandingPage/core_2021_draft_booster.png","LandingPage/core_2021_collector.jpg","Header/logos/magic-ball.png","utils/makeAuthHeader.js","common/SearchBar.js","common/QohLabels.js","utils/parseQoh.js","common/createToast.js","common/CardImage.js","common/MarketPrice.js","utils/ScryfallCard.js","ManageInventory/ScryfallCardListItem.js","ManageInventory/ScryfallCardList.js","ManageInventory/Home.js","context/SaleContext.js","utils/sortSaleList.js","NewSale/BrowseCardItem.js","NewSale/BrowseCardList.js","common/Price.js","NewSale/SaleLineItem.js","NewSale/SalePriceTotal.js","NewSale/FinishSale.js","NewSale/CustomerSaleList.js","NewSale/PrintList.js","NewSale/SuspendedSale.js","NewSale/Sale.js","BrowseSales/SalesListItem.js","BrowseSales/SalesList.js","BrowseSales/BrowseSales.js","PublicInventory/PublicCardItem.js","PublicInventory/PublicCardList.js","PublicInventory/PublicInventory.js","DeckboxClone/DeckboxCloneForm.js","DeckboxClone/DeckboxCloneRow.js","DeckboxClone/DeckboxClone.js","context/AuthProvider.js","Login/Login.js","Logout/Logout.js","Receiving/ReceivingSearchItem.js","Receiving/ReceivingSearchList.js","Receiving/ReceivingListItem.js","Receiving/CashReport.js","Receiving/ReceivingListTotals.js","Receiving/printCashReport.js","Receiving/Receiving.js","Reports/Reports.js","LandingPage/LandingPage.js","Main.js","Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","env","process","REACT_APP_ENVIRONMENT","endpoints","FINISH_SALE","ADD_CARD_TO_INVENTORY","RECEIVE_CARDS","GET_INVENTORY_QUERY","GET_SALES_BY_TITLE","GET_SCRYFALL_BULK_BY_TITLE","GET_CARDS_BY_FILTER","GET_SET_NAMES","SUSPEND_SALE","LOGIN","GET_ALL_SALES","GET_CARDS_WITH_INFO","SCRYFALL_AUTOCOMPLETE","SCRYFALL_SEARCH","GET_LIVE_PRICE","makeAuthHeader","Authorization","localStorage","getItem","SearchBar","props","useState","isLoading","setIsLoading","results","setResults","handleResultSelect","e","a","result","setTimeout","$","select","handleSearchSelect","title","console","log","Search","onSearchChange","_","debounce","value","length","axios","get","headers","data","formattedResults","map","el","slice","leading","trailing","onResultSelect","loading","placeholder","selectFirstResult","id","onFocus","target","onBlur","QohLabels","inventoryQty","foilQty","nonfoilQty","FOIL_NM","FOIL_LP","FOIL_MP","FOIL_HP","NONFOIL_NM","NONFOIL_LP","NONFOIL_MP","NONFOIL_HP","parseQoh","foilColor","color","nonfoilColor","Fragment","Label","image","className","Detail","createToast","header","message","duration","toaster","notify","Message","compact","Header","position","style","boxShadow","zIndex","transition","CardImage","state","hovered","mouseOver","setState","mouseOut","this","image_uris","card_faces","hover","Image","src","size","transform","onMouseOver","onMouseOut","normal","React","Component","LabelStyle","styled","foil","MarketPrice","finish","market","setMarket","median","setMedian","setLoading","isFoil","useEffect","params","scryfallId","marketPrices","medianPrices","Math","max","loader","Icon","name","displayPrice","price","toFixed","InventoryCard","card","_qoh","qoh","quantity","qtyToSell","finishCondition","quantities","printed_name","set","set_name","rarity","nonfoil","colors","type_line","frame_effects","includes","myImage","finishes","key","text","cardConditions","checkCardFinish","nonfoilProp","foilProp","selectedFinish","finishDisabled","ScryfallCardListItem","cardImage","setQuantity","setSelectedFinish","selectedCondition","setSelectedCondition","setFinishDisabled","submitDisable","setSubmitDisable","setInventoryQty","submitLoading","setSubmitLoading","handleInventoryAdd","post","cardInfo","focus","Segment","Item","Group","divided","Content","as","fontSize","String","toUpperCase","Description","Form","Field","control","Input","type","label","onChange","val","parseInt","isNaN","Select","options","disabled","Button","primary","onClick","ScryfallCardList","cards","Home","searchResults","setSearchResults","term","matchInStock","modeledData","c","Divider","icon","SaleContext","createContext","SaleProvider","saleListCards","setSaleListCards","_id","notes","list","suspendedSale","setSuspendedSale","restoreSale","response","suspendSale","customerName","delete","saleList","resetSaleState","ops","deleteSuspendedSale","finalizeSale","saleID","sale_data","Sale","Provider","addToSaleList","newCard","oldState","modeledCard","idx","findIndex","splice","push","sortedCards","ORDER","helpSort","arrayConst","colorsLength","cardFace","sort","b","localeCompare","indexOf","sortSaleList","removeFromSaleList","newState","reject","children","createConditionOptions","removeZeroedQuantites","pickBy","p","Object","entries","d","conditionFinish","qty","split","join","createInitialSelectedFinish","keysMapped","keys","k","uniq","BrowseCardItem","selectedFinishCondition","setSelectedFinishCondition","selectedFinishConditionQty","setSelectedFinishConditionQty","quantityToSell","setQuantityToSell","setPrice","conditionOptions","setConditionOptions","useContext","Dropdown","selection","numVal","Number","step","BrowseCardList","Price","num","SaleLineItem","displayName","setHovered","Table","Row","Cell","singleLine","circular","SalePriceTotal","total","reduce","acc","FinishSale","submit","setSubmit","showModal","setShowModal","handleFinalizeSale","modalTrigger","floated","Modal","basic","open","trigger","inverted","Actions","CustomerSaleList","Body","display_name","clearing","sub","PrintList","printClicked","print","window","display","float","div","ClearMargin","CharLimit","SuspendedSale","saleListLength","sales","setSales","setSaleID","modalOpen","setModalOpen","setCustomerName","setNotes","setDisabled","suspendBtn","restoreBtn","deleteBtn","loadingBtn","setLoadingBtn","getSales","clearFields","submitSuspendSale","submitRestoreSale","submitDeleteSale","Grid","columns","stackable","relaxed","Column","width","substring","TextArea","fluid","s","info","searchTerm","setSearchTerm","alignItems","SalesListItem","saleData","quantitySold","cardList","pre","curr","moment","createTime","format","SalesList","celled","unstackable","HeaderCell","card_list","BrowseSales","salesList","cardName","Wrapper","InventoryWrapper","InventoryRow","ImageWrapper","PublicCardItem","qohParsed","displayFoil","displayNonfoil","borderRadius","gridStyle","flexWrap","alignContent","height","PublicCardList","initialState","PublicInventory","Subheader","formatDropdownOptions","priceFilterDropdownOptions","finishDropdownOptions","sortByDropdownOptions","sortByDirectionDropdownOptions","sortByColorDropdownOptions","typeLineOptions","setName","priceNum","priceFilter","sortBy","colorsArray","sortByDirection","typeLine","setNames","DeckboxCloneForm","editionDropdownOptions","handleSearchBlur","handleChange","handleDropdownChange","setNameOptions","concatWithBlankOption","concat","widths","search","multiple","defaultValue","labelPosition","handleSubmit","conditionMap","NM","LP","MP","HP","Tooltip","image_uri","posX","posY","left","background","DeckboxCloneRow","mouseInside","mouseX","mouseY","mouseEnter","clientX","offsetLeft","clientY","offsetTop","mouseLeave","mouseMove","inventory","condition","onMouseEnter","onMouseLeave","onMouseMove","cursor","v","DeckboxClone","count","currentPage","numPages","pageArray","cachedFilters","showPages","searchTouched","fetchData","filters","page","ceil","pages","range","handlePage","showLeftPageButtons","showRightPageButtons","Container","Dimmer","active","marginTop","Loader","secondary","striped","colSpan","Menu","Footer","AuthContext","AuthProvider","loggedIn","setLoggedIn","handleLogin","username","password","toLowerCase","token","setItem","authed","handleLogout","removeItem","LoginContainer","FormContainer","Login","handleInputChange","login","to","raised","Logout","ReceivingCardItem","cashPrice","setCashPrice","creditPrice","setCreditPrice","marketPrice","setMarketPrice","handlePriceChange","handleFocus","handleBlur","validateQty","validateTradeTypes","submitDisabled","addToList","ReceivingCardList","TRADE_TYPE","ReceivingListItem","uuid_key","removeFromList","tradeType","activeTradeType","CASH","CREDIT","whiteSpace","CashReport","receivingList","countByPriceAndID","closeCashModal","chain","filter","temp_uuid","groupBy","mapValues","mergedWithQty","uniqBy","tradeQty","totalCashOut","sumBy","ReceivingListTotals","selectAll","commitToInventory","showCashModal","setShowCashModal","submitToInventory","cashTotal","creditTotal","justifyContent","Or","Statistic","Value","divToPrint","document","getElementById","popup","write","innerHTML","close","printCashReport","closeOnDimmerClick","onClose","DefaultPlaceholder","headerText","Receiving","setReceivingList","copiedState","remove","previousState","find","cardsToCommit","messages","initialTradeType","times","uuid","forEach","arr","otherType","Reports","sales_data","format_legalities","groupByDay","timeStamp","startOf","dailySalesTotals","dailyAverageSales","rangeBuckets","0","1","2","3","4","5","rarityCounts","forOwn","legalityCounts","standard","nonStandard","qtySold","legalities","formattedDailySalesTotals","Date","getTime","formattedDailyAverageSales","formattedRangeBuckets","formattedRarityCounts","y","formattedLegalities","Highcharts","setOptions","lang","thousandsSep","chart","zoomType","subtitle","credits","enabled","xAxis","yAxis","legend","series","tooltip","valueDecimals","min","categories","plotOptions","bar","dataLabels","plotBackgroundColor","plotBorderWidth","plotShadow","pie","distance","property","operator","BaseContent","ContentContainer","clubhouse_products","Image2","ImageMask","ImageMask2","Divider2","FlexRow","SpanStyle","span","FlexColumn","Slogan","h1","button","img","CardContent","CardContainer","IconStyled","FooterIcon","BodyText","align","Spacer","FooterStyle","SocialMedia","Hide","Card","imageSrc","date","ServiceCard","content","InfoCard","LandingPage","href","rel","link","role","aria-label","core_2021_collector","core_2021_draft_booster","ikoria_splash","Main","exact","path","component","pathname","location","fixed","Link","replace","ballLogo","marginRight","alt","item","withRouter","App","Boolean","hostname","match","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c06789fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clubhouse_products.2a94c562.png\";","// Maps all GCF and Scryfall API endpoints for code re-use\nconst { REACT_APP_ENVIRONMENT } = process.env;\n\n/**\n * Check the environment for dev - if dev, we reach out\n * to all endpoints appended by `_test` instead of production\n */\nconst env = REACT_APP_ENVIRONMENT === 'development' ? '_test' : '';\n\nconst endpoints = {\n    FINISH_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/finishSale${env}`,\n    ADD_CARD_TO_INVENTORY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/addCardToInventory${env}`,\n    RECEIVE_CARDS:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/receiveCards${env}`,\n    GET_INVENTORY_QUERY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/inventorySearchQuery${env}`,\n    GET_SALES_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getSales${env}`,\n    GET_SCRYFALL_BULK_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getScryfallBulkCardsByTitle${env}`,\n    GET_CARDS_BY_FILTER:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByFilter${env}`,\n    GET_SET_NAMES:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByFilter${env}/set_names`,\n    SUSPEND_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/suspendSale${env}`,\n    LOGIN:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getJwt${env}`,\n    GET_ALL_SALES:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getSales${env}/sales`,\n    GET_CARDS_WITH_INFO:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsWithInfo${env}`,\n    SCRYFALL_AUTOCOMPLETE: 'https://api.scryfall.com/cards/autocomplete',\n    SCRYFALL_SEARCH: 'https://api.scryfall.com/cards/search',\n    GET_LIVE_PRICE: `https://us-central1-clubhouse-collection.cloudfunctions.net/getPriceFromTcg${env}`\n};\n\nmodule.exports = endpoints;\n","module.exports = __webpack_public_path__ + \"static/media/ikoria_splash.027133ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/core_2021_draft_booster.dcb6da2f.png\";","module.exports = __webpack_public_path__ + \"static/media/core_2021_collector.36289244.jpg\";","module.exports = __webpack_public_path__ + \"static/media/magic-ball.c3fcddd6.png\";","/**\n * This function is a helper for Axios, it yields an object for Axios params\n */\nexport default function makeAuthHeader() {\n    const header = { Authorization: `Bearer ${localStorage.getItem('clubhouse_JWT')}` };\n    return header;\n}","import React, { useState } from 'react';\nimport { Search } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { SCRYFALL_AUTOCOMPLETE } from '../utils/api_resources';\nimport $ from 'jquery';\n\nexport default function SearchBar(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [results, setResults] = useState([]);\n\n    const handleSearchChange = (e, { value }) => { // `value` is the search input string\n        if (value.length < 1) {\n            setIsLoading(false);\n            setResults([]);\n            return;\n        }\n\n        if (value.length < 3) return; // Don't search if only 2 letters in input\n\n        setIsLoading(true);\n\n        setTimeout(async () => {\n            const { data } = await axios.get(\n                `${SCRYFALL_AUTOCOMPLETE}?q=${value}`,\n                { headers: makeAuthHeader() }\n            );\n\n            const formattedResults = data.data.map(el => ({ title: el })).slice(0, 7);\n\n            setResults(formattedResults);\n            setIsLoading(false);\n        }, 100);\n    };\n\n    const handleResultSelect = async (e, { result }) => {\n        // This line is a hacky way to get around the fact that if we just select(), then\n        // when the user manually clicks the first (or any) result in the resultlist, it does not select,\n        // presumably because there is some collision between selecting the resultList element and focusing the input\n        setTimeout(() => $('#searchBar').select(), 10);\n        try {\n            setIsLoading(true);\n            await props.handleSearchSelect(result.title);\n            setIsLoading(false);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <Search\n            onSearchChange={_.debounce(handleSearchChange, 500, { leading: false, trailing: true })}\n            onResultSelect={handleResultSelect}\n            loading={isLoading}\n            results={results}\n            placeholder=\"Search for a card\"\n            selectFirstResult={true}\n            id=\"searchBar\"\n            onFocus={e => e.target.select()}\n            onBlur={props.onBlur} // Used to clear state in the Browse Inventory feature\n        />\n    );\n}\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\nimport parseQoh from '../utils/parseQoh';\n\n// This component parses the `qoh` object from mongo into something\n// more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function QohLabels({ inventoryQty }) {\n    const [foilQty, nonfoilQty] = parseQoh(inventoryQty);\n\n    const foilColor = {};\n    if (foilQty > 0) { foilColor.color = 'blue'; }\n\n    const nonfoilColor = {};\n    if (nonfoilQty > 0) { nonfoilColor.color = 'blue'; }\n\n    return (\n        <React.Fragment>\n            <Label {...foilColor} image className=\"foil-label\">\n                Foil\n        <Label.Detail className=\"foil-label-qty\">{foilQty}</Label.Detail>\n            </Label>\n            <Label {...nonfoilColor} image className=\"nonfoil-label\">\n                Nonfoil\n        <Label.Detail className=\"nonfoil-label-qty\">{nonfoilQty}</Label.Detail>\n            </Label>\n        </React.Fragment>\n    );\n}\n","// This function parses the `qoh` object from mongo into something more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function parseQoh(inventoryQty) {\n    let foilQty = 0;\n    let nonfoilQty = 0;\n\n    if (inventoryQty) { // Check to see if props exist\n        foilQty =\n            (inventoryQty.FOIL_NM || 0) +\n            (inventoryQty.FOIL_LP || 0) +\n            (inventoryQty.FOIL_MP || 0) +\n            (inventoryQty.FOIL_HP || 0);\n\n        nonfoilQty =\n            (inventoryQty.NONFOIL_NM || 0) +\n            (inventoryQty.NONFOIL_LP || 0) +\n            (inventoryQty.NONFOIL_MP || 0) +\n            (inventoryQty.NONFOIL_HP || 0);\n    }\n\n    return [foilQty, nonfoilQty];\n}","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport toaster from 'toasted-notes';\n\nconst createToast = ({ color, header, message, duration = 2000 }) => {\n    return toaster.notify(\n        () => (\n            <Message color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </Message>\n        ),\n        {\n            position: 'bottom-right',\n            duration: duration\n        }\n    );\n}\n\nexport default createToast;","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nconst style = {\n    boxShadow: '2px 2px 5px 0 rgba(0,0,0,.25)',\n    zIndex: '10',\n    transition: 'all .2s ease-in-out'\n}\n\nclass CardImage extends React.Component {\n    state = { hovered: false };\n\n    mouseOver = () => { this.setState({ hovered: true }) };\n\n    mouseOut = () => { this.setState({ hovered: false }) };\n\n    render() {\n        const { image_uris, card_faces, image, hover = true } = this.props // default prop `hover` must be true\n\n        if (image) {\n            return <Image\n                src={image}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        }\n\n        // TODO: This is obsolete logic that should be refactored out once all components ingest the ScryfallCard class,\n        // which manages the correct image URL itself\n        try {\n            // If normal prop `image_uris.normal` doesn't exist, move to catch block for flip card faces\n            return <Image\n                src={image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        } catch (e) {\n            return <Image src={\n                card_faces[0].image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        }\n    }\n};\n\nexport default CardImage;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GET_LIVE_PRICE } from '../utils/api_resources';\nimport { Label, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst LabelStyle = styled(Label)`\n    background-color: ${props => !!props.foil ? '#ffcfdf' : null} !important;\n    background-image: ${props => !!props.foil ? 'linear-gradient(90deg, #ffcfdf 0%, #b0f3f1 74%)' : null} !important;\n`;\n\nexport default function MarketPrice({ id, finish }) {\n    const [market, setMarket] = useState(null);\n    const [median, setMedian] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const isFoil = finish === 'FOIL';\n\n    useEffect(() => {\n        (async function fetchData() {\n            setLoading(true);\n\n            const { data } = await axios.get(GET_LIVE_PRICE, {\n                params: { scryfallId: id }\n            });\n            const { marketPrices, medianPrices } = data;\n            const MIN_PRICE = 0.5; // Management-set lowest price for each single card\n\n            if (isFoil) {\n                setMarket(Math.max(marketPrices.foil, MIN_PRICE));\n                setMedian(Math.max(medianPrices.foil, MIN_PRICE));\n            } else {\n                setMarket(Math.max(marketPrices.normal, MIN_PRICE));\n                setMedian(Math.max(medianPrices.normal, MIN_PRICE));\n            }\n\n            setLoading(false);\n        })();\n    }, [id, finish]);\n\n    const loader = <span>Loading <Icon loading name='spinner' /></span>;\n    const displayPrice = price => !!price ? `$${price.toFixed(2)}` : 'N/A';\n\n    return <React.Fragment>\n        <LabelStyle foil={isFoil}>\n            {loading ? loader : <span>Mkt. {displayPrice(market)}</span>}\n        </LabelStyle>\n        <LabelStyle foil={isFoil}>\n            {loading ? loader : <span>Mid. {displayPrice(median)}</span>}\n        </LabelStyle>\n    </React.Fragment>\n}\n","\n/**\n * This class wraps the Scryfall API request data and models it to something we can control.\n * Also acts as a safeguard for any future updates to Scryfall's API data model and makes\n * the code easier to maintain and debug.\n */\nexport class ScryfallCard {\n    constructor(card) {\n        this.id = card.id;\n        this.name = card.name;\n        this.printed_name = card.printed_name || null;\n        this.set = card.set;\n        this.set_name = card.set_name;\n        this.rarity = card.rarity;\n        this.image_uris = card.image_uris || null;\n        this.card_faces = card.card_faces || null;\n        this.nonfoil = card.nonfoil;\n        this.foil = card.foil;\n        this.colors = card.colors;\n        this.type_line = card.type_line;\n        this.frame_effects = card.frame_effects || [];\n    }\n\n    /**\n     * Used to display differing border treatments and alt-arts\n     */\n    get display_name() {\n        const { name, printed_name, frame_effects } = this;\n\n        if ((name !== printed_name) && printed_name) {\n            return `${name} (IP series)`;\n        } else if (frame_effects.includes('showcase')) {\n            return `${name} (Showcase)`;\n        } else if (frame_effects.includes('extendedart')) {\n            return `${name} (Extended art)`;\n        } else {\n            return name;\n        }\n    }\n\n    get cardImage() {\n        let myImage;\n\n        try {\n            // If normal prop doesn't exist, move to catch block for flip card faces\n            myImage = this.image_uris.normal;\n        } catch (e) {\n            myImage = this.card_faces[0].image_uris.normal;\n        }\n\n        return myImage;\n    }\n}\n\n/**\n * Extends the Scryfall card object and adds properties we know exist in our database.\n * Models the data and makes writing cards to Mongo a more confident process.\n */\nexport class InventoryCard extends ScryfallCard {\n    constructor(card) {\n        super(card);\n        this._qoh = card.qoh ? card.qoh : {};\n        // `quantity` and `qtyToSell` are redundant transaction props, unify them down the line\n        this.quantity = card.quantity || null;\n        this.qtyToSell = card.qtyToSell || null;\n        this.finishCondition = card.finishCondition || null;\n        this.price = card.price >= 0 ? card.price : null;\n    }\n\n    get qohParsed() {\n        const foilQty =\n            (this._qoh.FOIL_NM || 0) +\n            (this._qoh.FOIL_LP || 0) +\n            (this._qoh.FOIL_MP || 0) +\n            (this._qoh.FOIL_HP || 0);\n\n        const nonfoilQty =\n            (this._qoh.NONFOIL_NM || 0) +\n            (this._qoh.NONFOIL_LP || 0) +\n            (this._qoh.NONFOIL_MP || 0) +\n            (this._qoh.NONFOIL_HP || 0);\n\n        return [foilQty, nonfoilQty];\n    }\n\n    get qoh() {\n        return this._qoh;\n    }\n\n    set qoh(quantities) {\n        this._qoh = quantities ? quantities : {};\n    }\n}\n","import React, { useState } from 'react';\nimport { Segment, Input, Button, Form, Select, Label, Item } from 'semantic-ui-react';\nimport axios from 'axios';\nimport QohLabels from '../common/QohLabels';\nimport createToast from '../common/createToast';\nimport CardImage from '../common/CardImage';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport MarketPrice from '../common/MarketPrice'\nimport { ADD_CARD_TO_INVENTORY } from '../utils/api_resources';\nimport $ from 'jquery';\nimport { InventoryCard } from '../utils/ScryfallCard';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil`\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nfunction checkCardFinish(nonfoilProp, foilProp) {\n    if (!nonfoilProp && foilProp) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoilProp && !foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoilProp && foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default function ScryfallCardListItem({ qoh, foil, nonfoil, name, set_name, set, rarity, id, cardImage }) {\n    const [quantity, setQuantity] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(checkCardFinish(nonfoil, foil).selectedFinish);\n    const [selectedCondition, setSelectedCondition] = useState('NM');\n    const [finishDisabled, setFinishDisabled] = useState(checkCardFinish(nonfoil, foil).finishDisabled);\n    const [submitDisable, setSubmitDisable] = useState(false);\n    const [inventoryQty, setInventoryQty] = useState(qoh);\n    const [submitLoading, setSubmitLoading] = useState(false);\n\n    const handleFinishChange = (e, { value }) => setSelectedFinish(value);\n\n    const handleConditionChange = (e, { value }) => setSelectedCondition(value);\n\n    const handleQuantityChange = (e, { value }) => {\n        const val = parseInt(value);\n        const quantity = isNaN(val) ? '' : val; // Check for NaN\n        setQuantity(quantity);\n    };\n\n    // Remove input placeholder when user tries to enter a number (to reduce user error)\n    const handleFocus = () => {\n        if (quantity === 0) setQuantity('');\n    }\n\n    // Restore input placeholder when user blurs field\n    const handleBlur = () => {\n        if (quantity === '') setQuantity(0);\n    }\n\n    const handleInventoryAdd = async (e, { value }) => {\n        // This is the identifier for quantities of different finishes/conditions in the db\n        const finishCondition = `${selectedFinish}_${selectedCondition}`;\n\n        try {\n            setSubmitDisable(true);\n            setSubmitLoading(true);\n\n            const { data } = await axios.post(ADD_CARD_TO_INVENTORY, {\n                quantity: quantity,\n                finishCondition: finishCondition,\n                cardInfo: { id, name, set_name, set },\n            }, { headers: makeAuthHeader() });\n\n            createToast({\n                color: 'green',\n                header: `${quantity}x ${name} ${quantity > 0 ? 'added' : 'removed'}!`,\n                duration: 2000\n            });\n\n            setQuantity(0);\n            setSelectedFinish(checkCardFinish(nonfoil, foil).selectedFinish);\n            setSelectedCondition('NM');\n            setFinishDisabled(checkCardFinish(nonfoil, foil).finishDisabled);\n            setSubmitDisable(false);\n            setSubmitLoading(false);\n            setInventoryQty(new InventoryCard(data).qoh);\n\n            // Highlight the input after successful card add\n            $('#searchBar').focus().select();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"tiny\">\n                        <CardImage image={cardImage} />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as='h3'>\n                            {name}\n                            {' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                            <QohLabels inventoryQty={inventoryQty} />\n                            {' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group>\n                                    <Form.Field\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity\"\n                                        value={quantity}\n                                        onChange={handleQuantityChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                    />\n                                    <Form.Field\n                                        label=\"Finish\"\n                                        control={Select}\n                                        value={selectedFinish}\n                                        options={finishes}\n                                        disabled={finishDisabled}\n                                        onChange={handleFinishChange}\n                                    />\n                                    <Form.Field\n                                        label=\"Condition\"\n                                        control={Select}\n                                        value={selectedCondition}\n                                        options={cardConditions}\n                                        onChange={handleConditionChange}\n                                    />\n                                    <Form.Button\n                                        label=\"Add to Inventory?\"\n                                        control={Button}\n                                        primary\n                                        disabled={\n                                            quantity === 0 ||\n                                            quantity === '' ||\n                                            submitDisable\n                                        }\n                                        onClick={handleInventoryAdd}\n                                        loading={submitLoading}\n                                    >\n                                        Submit\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React from 'react';\nimport ScryfallCardListItem from './ScryfallCardListItem';\n\nexport default function ScryfallCardList(props) {\n    return props.cards.map(card => {\n        return <ScryfallCardListItem\n            key={card.id}\n            {...card}\n            cardImage={card.cardImage}\n            qoh={card.qoh}\n        />\n    });\n}\n","import React, { useState } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport ScryfallCardList from './ScryfallCardList';\nimport { Segment, Header, Icon, Divider } from 'semantic-ui-react'\nimport { GET_CARDS_WITH_INFO } from '../utils/api_resources';\nimport { InventoryCard } from '../utils/ScryfallCard';\n\nexport default function Home() {\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(\n                GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: false },\n                headers: makeAuthHeader()\n            });\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            setSearchResults(modeledData);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <SearchBar handleSearchSelect={handleSearchSelect} />\n\n            <Header as=\"h2\">Manage Inventory</Header>\n            <Divider />\n\n            {!searchResults.length &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        <em>\"Searching the future for answers often leads to further questions.\"</em>\n                    </Header>\n                </Segment>}\n\n            <ScryfallCardList cards={searchResults} />\n        </React.Fragment>\n    );\n}\n","import React, { useState, createContext } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash'\nimport { SUSPEND_SALE, FINISH_SALE } from '../utils/api_resources';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport sortSaleList from '../utils/sortSaleList';\nimport createToast from '../common/createToast';\nimport makeAuthHeader from '../utils/makeAuthHeader';\n\nexport const SaleContext = createContext();\n\nexport const SaleProvider = props => {\n    const [saleListCards, setSaleListCards] = useState([]);\n    const [suspendedSale, setSuspendedSale] = useState({\n        _id: '',\n        name: '',\n        notes: '',\n        list: []\n    });\n\n    /**\n     * Adds product to the sale list\n     */\n    const addToSaleList = (card, finishCondition, qtyToSell, price) => {\n        const newCard = { ...card, finishCondition, qtyToSell, price };\n        const oldState = [...saleListCards];\n        const modeledCard = new InventoryCard(newCard);\n\n        // Need to make sure same ID's with differing conditions are separate line-items\n        const idx = oldState.findIndex(el => {\n            return (\n                el.id === newCard.id && el.finishCondition === finishCondition\n            );\n        });\n\n        if (idx !== -1) {\n            oldState.splice(idx, 1, modeledCard);\n        } else {\n            oldState.push(modeledCard);\n        }\n\n        // Sorting the saleList cards here, on add\n        const sortedCards = sortSaleList(oldState);\n\n        setSaleListCards(sortedCards);\n    };\n\n    /**\n     * Removes product from the sale list\n     */\n    const removeFromSaleList = (id, finishCondition) => {\n        const newState = _.reject([...saleListCards], el => {\n            return el.id === id && el.finishCondition === finishCondition;\n        });\n\n        setSaleListCards(newState);\n    };\n\n    /**\n     * Restores a sale (assigns a saleList to state) from a suspended sale from the db\n     */\n    const restoreSale = async id => {\n        try {\n            const { data } = await axios.get(`${SUSPEND_SALE}/${id}`);\n            const modeledData = data.list.map(c => new InventoryCard(c));\n\n            setSaleListCards(modeledData);\n            setSuspendedSale(data);\n\n            createToast({ color: 'green', header: `You are viewing ${data.name}'s sale` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    }\n\n    /**\n     * Suspends a sale (persists it to mongo) via the SuspendedSale component and API\n     */\n    const suspendSale = async ({ customerName, notes }) => {\n        const { _id } = suspendedSale;\n\n        try {\n            if (!!_id) await axios.delete(`${SUSPEND_SALE}/${_id}`); // If we're suspended, delete the previous to replace\n\n            const { data } = await axios.post(SUSPEND_SALE, {\n                customerName: customerName,\n                notes: notes,\n                saleList: saleListCards\n            })\n\n            resetSaleState();\n\n            createToast({ color: 'green', header: `${data.ops[0].name}'s sale was suspended` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error`, message: `${e.response.data}` });\n        }\n    }\n\n    const deleteSuspendedSale = async () => {\n        try {\n            const { _id, name } = suspendedSale;\n            await axios.delete(`${SUSPEND_SALE}/${_id}`);\n\n            resetSaleState();\n\n            createToast({ color: 'green', header: `${name}'s sale was deleted` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    }\n\n    /**\n     * Extracts the saleList state and uses it to complete sale\n     */\n    const finalizeSale = async () => {\n        const { _id } = suspendedSale;\n\n        try {\n            // Must delete currently suspended sale to faithfully restore inventory prior to sale\n            if (!!_id) await axios.delete(`${SUSPEND_SALE}/${_id}`);\n\n            const { data } = await axios.post(FINISH_SALE, { cards: saleListCards }, { headers: makeAuthHeader() });\n\n            const saleID = data.sale_data.Sale.saleID;\n\n            createToast({\n                color: 'green',\n                header: 'Sale created in Lightspeed!',\n                message: `The id number is #${saleID}`,\n            });\n\n            resetSaleState();\n        } catch (e) {\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Sale was not created`,\n            });\n\n            resetSaleState();\n            console.log(e.response);\n        }\n    };\n\n    const resetSaleState = () => {\n        setSaleListCards([]);\n        setSuspendedSale({\n            _id: '',\n            name: '',\n            notes: '',\n            list: []\n        })\n    };\n\n    return <SaleContext.Provider value={{\n        saleListCards,\n        suspendedSale,\n        addToSaleList,\n        removeFromSaleList,\n        restoreSale,\n        suspendSale,\n        deleteSuspendedSale,\n        finalizeSale,\n        resetSaleState\n    }}>\n        {props.children}\n    </SaleContext.Provider>\n}","/**\n * Takes in an unordered group of cards and sorts them according to The Clubhouse's specs:\n * WUBRG, then multicolor, then colorless, then land, alphabetically within each color/category\n */\nexport default function sortSaleList(cards) {\n    const ORDER = ['W', 'U', 'B', 'R', 'G', 'MULTI', 'COLORLESS', 'LAND'];\n\n    /**\n     * Main helper function that manages sort order\n     * @param {Object} card\n     */\n    function helpSort(card) {\n        let arrayConst = null;\n\n        let colorsLength = null;\n        let cardFace = null;\n\n        try {\n            // If colors don't exist, it's a flip card or storybook frame\n            colorsLength = card.colors.length;\n            cardFace = card;\n        } catch (e) {\n            try {\n                // Storybook frames from Eldraine may throw error\n                colorsLength = card.card_faces[0].colors.length;\n                cardFace = card.card_faces[0];\n            } catch (e) {\n                colorsLength = card.colors.length;\n                cardFace = card;\n            }\n        }\n\n        // Apply logic to return correct constant enum\n        if (colorsLength === 0) {\n            arrayConst = 'COLORLESS';\n        } else if (colorsLength === 1) {\n            arrayConst = cardFace.colors[0];\n        } else if (colorsLength > 1) {\n            arrayConst = 'MULTI';\n        }\n\n        // Drill into colorless cards, if they are lands or not\n        if (arrayConst === 'COLORLESS') {\n            if (cardFace.type_line.includes('Land')) {\n                arrayConst = 'LAND';\n            }\n        }\n\n        // Final check to guard against a null arrayConst\n        if (!arrayConst) { arrayConst = 'LAND' }\n\n        return arrayConst;\n    }\n\n    const alphaSort = cards.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n    });\n\n    const sorted = alphaSort.sort((a, b) => {\n        return ORDER.indexOf(helpSort(a)) - ORDER.indexOf(helpSort(b));\n    });\n\n    return sorted;\n}","import React, { useState, useContext } from 'react';\nimport {\n    Segment,\n    Label,\n    Form,\n    Input,\n    Dropdown,\n    Button,\n    Item\n} from 'semantic-ui-react';\nimport CardImage from '../common/CardImage';\nimport MarketPrice from '../common/MarketPrice';\nimport QohLabels from '../common/QohLabels';\nimport { SaleContext } from '../context/SaleContext';\nimport $ from 'jquery';\nimport _ from 'lodash';\n\n/**\n * Creates a list of conditions for the dropdown menu from the `qoh`\n * Note: Is this not needed if we default select initially?\n * @param {Object} qoh\n * @param {String} id\n */\nfunction createConditionOptions(qoh, id) {\n    const removeZeroedQuantites = _.pickBy(qoh, p => p > 0); // Quantites of zero not included\n\n    return Object.entries(removeZeroedQuantites).map(d => {\n        const [conditionFinish, qty] = d;\n\n        return {\n            text: `${conditionFinish.split('_').join(' | ')} | Qty: ${qty}`,\n            value: conditionFinish,\n            key: `${id}${conditionFinish}`\n        };\n    });\n}\n\n/**\n * Creates initial selectedFinish value, used for the MarketPrice component\n * Returns FOIL or NONFOIL depending on what's in current inventory (qoh)\n * @param {Object} qoh\n */\nfunction createInitialSelectedFinish(qoh) {\n    const removeZeroedQuantites = _.pickBy(qoh, p => p > 0);\n    // Isolate only the FOIL or NONFOIL values with mapping\n    const keysMapped = _.keys(removeZeroedQuantites).map(k => k.split('_')[0]);\n    const uniqueValues = _.uniq(keysMapped);\n    return uniqueValues.indexOf('NONFOIL') > -1 ? 'NONFOIL' : 'FOIL';\n}\n\nexport default function BrowseCardItem(props) {\n    const [selectedFinishCondition, setSelectedFinishCondition] = useState('');\n    const [selectedFinishConditionQty, setSelectedFinishConditionQty] = useState(0);\n    const [quantityToSell, setQuantityToSell] = useState(0);\n    const [price, setPrice] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(createInitialSelectedFinish(props.qoh));\n    const [conditionOptions, setConditionOptions] = useState(createConditionOptions(props.qoh, props.id));\n    const { addToSaleList } = useContext(SaleContext);\n\n    const handleQuantityChange = (e, { value }) => {\n        if (value === '') {\n            setQuantityToSell('');\n            return;\n        }\n\n        let numVal = parseInt(value);\n\n        if (numVal > selectedFinishConditionQty) numVal = selectedFinishConditionQty;\n\n        if (isNaN((numVal)) || numVal < 0) numVal = 0;\n\n        setQuantityToSell(numVal);\n    };\n\n    const handleSelectedFinishCondition = (e, { value }) => {\n        setSelectedFinish(value.split('_')[0]);\n        setSelectedFinishCondition(value);\n        setSelectedFinishConditionQty(props.qoh[value]);\n        setQuantityToSell(0);\n    };\n\n    const handlePriceChange = (e, { value }) => {\n        if (value === '') {\n            setPrice('');\n            return;\n        }\n\n        let numVal = Number(value);\n\n        if (isNaN((numVal)) || numVal < 0) { numVal = 0; }\n\n        setPrice(numVal);\n    };\n\n    const handleAddToSale = () => {\n        const { qoh, id } = props;\n\n        addToSaleList(\n            { ...props },\n            selectedFinishCondition,\n            quantityToSell,\n            price\n        );\n\n        // Reset state\n        setSelectedFinishCondition('')\n        setSelectedFinishConditionQty(0)\n        setQuantityToSell(0)\n        setPrice(0)\n        setConditionOptions(createConditionOptions(qoh, id))\n        setSelectedFinish(createInitialSelectedFinish(qoh))\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    return <Segment>\n        <Item.Group divided>\n            <Item>\n                <Item.Image size=\"tiny\">\n                    <CardImage\n                        image_uris={props.image_uris}\n                        card_faces={props.card_faces}\n                    />\n                </Item.Image>\n                <Item.Content>\n                    <Item.Header as=\"h3\">\n                        {props.name}{' '}\n                        <i\n                            className={`ss ss-fw ss-${props.set} ss-${props.rarity}`}\n                            style={{ fontSize: '30px' }}\n                        />\n                        <Label color=\"grey\">\n                            {props.set_name} ({String(props.set).toUpperCase()})\n                                </Label>\n                        <QohLabels inventoryQty={props.qoh} />\n                        {' '}\n                        <MarketPrice id={props.id} finish={selectedFinish} />\n                    </Item.Header>\n                    <Item.Description>\n                        <Form>\n                            <Form.Group>\n                                <Form.Field\n                                    control={Dropdown}\n                                    selection\n                                    placeholder=\"Select inventory\"\n                                    options={conditionOptions}\n                                    value={selectedFinishCondition}\n                                    label=\"Select finish/condition\"\n                                    onChange={handleSelectedFinishCondition}\n                                />\n                                <Form.Field\n                                    control={Input}\n                                    type=\"number\"\n                                    label=\"Quantity to sell\"\n                                    value={quantityToSell}\n                                    onChange={handleQuantityChange}\n                                    disabled={!selectedFinishConditionQty}\n                                    onFocus={e => e.target.select()}\n                                />\n                                <Form.Field\n                                    control={Input}\n                                    type=\"number\"\n                                    label=\"Price\"\n                                    value={price}\n                                    onChange={handlePriceChange}\n                                    disabled={!selectedFinishConditionQty}\n                                    onFocus={e => e.target.select()}\n                                    step={0.5}\n                                />\n                                <Form.Button\n                                    label=\"Add to sale?\"\n                                    control={Button}\n                                    primary\n                                    onClick={handleAddToSale}\n                                    disabled={!quantityToSell}\n                                >\n                                    Sell\n                                    </Form.Button>\n                            </Form.Group>\n                        </Form>\n                    </Item.Description>\n                </Item.Content>\n            </Item>\n        </Item.Group>\n    </Segment>\n}\n","import React from 'react';\nimport BrowseCardItem from './BrowseCardItem';\nimport { Segment, Header, Icon } from 'semantic-ui-react';\n\nexport default function BrowseCardList({ term, cards }) {\n    // Creates text to notify the user of zero-result searches\n    const searchNotification = () => {\n        if (term && !cards.length) { // Check to make sure the user has searched and no results\n            return <p>Zero results for <em>{term}</em></p>\n        }\n        return <p>Search for inventory to sell</p>\n    }\n\n    if (cards.length === 0) {\n        return <Segment placeholder>\n            <Header icon>\n                <Icon name=\"search\" />\n                <span>{searchNotification()}</span>\n            </Header>\n        </Segment>\n    }\n\n    return cards.map(card => {\n        return <BrowseCardItem\n            key={card.id}\n            {...card}\n            qoh={card.qoh}\n        />\n    });\n}\n","import React from 'react';\n\nconst Price = ({ num }) => {\n    const price = Number(num).toFixed(2);\n    if (isNaN(price)) return <span>$0.00</span>;\n    return <span>${price}</span>;\n};\n\nexport default Price;\n","import React, { useState, useContext } from 'react';\nimport { Button, Label, Table } from 'semantic-ui-react';\nimport { SaleContext } from '../context/SaleContext';\nimport Price from '../common/Price';\n\nexport default function SaleLineItem({ displayName, set, finishCondition, qtyToSell, price, rarity, id }) {\n    const [hovered, setHovered] = useState(false);\n\n    const { removeFromSaleList } = useContext(SaleContext);\n\n    return (\n        <Table.Row>\n            <Table.Cell><h4>{displayName}</h4></Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                {qtyToSell}x @ <Price num={price} /> | {finishCondition}\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => removeFromSaleList(id, finishCondition)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n","import React from 'react';\nimport Price from '../common/Price';\n\nconst SalePriceTotal = ({ saleList }) => {\n    const total = saleList.length\n        ? saleList.reduce(\n            (acc, val) => acc + parseInt(val.qtyToSell) * Number(val.price),\n            0\n        )\n        : 0;\n\n    return <Price num={total} />;\n};\n\nexport default SalePriceTotal;\n","import React, { useState, useContext } from 'react';\nimport { Modal, Button, Header, Icon } from 'semantic-ui-react';\nimport { SaleContext } from '../context/SaleContext';\n\nexport default function FinishSale() {\n    const [submit, setSubmit] = useState({ loading: false, disabled: false });\n    const [showModal, setShowModal] = useState(false);\n    const { finalizeSale } = useContext(SaleContext);\n\n    const handleFinalizeSale = async () => {\n        setSubmit({ loading: true, disabled: true });\n        await finalizeSale();\n    }\n\n    const modalTrigger = <Button floated=\"right\" primary\n        onClick={() => setShowModal(true)}>\n        Finalize sale\n        </Button>\n\n    return <Modal\n        basic\n        open={showModal}\n        trigger={modalTrigger}>\n        <Modal.Content>\n            <Header inverted as=\"h2\">\n                Finalize this sale?\n             </Header>\n            <p>\n                Click 'Yes' to create a sale\n                in Lightspeed. Ensure that\n                you have all cards pulled and double-checked\n                the customer list. Undoing this action will require manual data entry!\n             </p>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button\n                basic\n                color=\"red\"\n                inverted\n                onClick={() => setShowModal(false)}>\n                <Icon name=\"remove\" /> No\n             </Button>\n            <Button\n                color=\"green\"\n                inverted\n                onClick={handleFinalizeSale}\n                loading={submit.loading}\n                disabled={submit.disabled}>\n                <Icon name=\"checkmark\" /> Yes\n            </Button>\n        </Modal.Actions>\n    </Modal>\n}","import React from 'react';\nimport SaleLineItem from './SaleLineItem';\nimport { Table, Segment, Header, Icon } from 'semantic-ui-react';\nimport SalePriceTotal from './SalePriceTotal';\nimport FinishSale from './FinishSale';\n\nexport default function CustomerSaleList({ saleList }) {\n    if (saleList.length === 0) {\n        return <Segment placeholder>\n            <Header icon>\n                <Icon name=\"plus\" />\n                    View and manage customer sale list here\n            </Header>\n        </Segment>\n    }\n\n    return <React.Fragment>\n        <Table>\n            <Table.Body>\n                {saleList.map(card => {\n                    return <SaleLineItem\n                        displayName={card.display_name}\n                        {...card}\n                        key={`${card.id}${card.finishCondition}${card.qtyToSell}`}\n                    />\n                })}\n            </Table.Body>\n        </Table>\n\n        <Segment clearing>\n            <Header floated=\"left\">\n                <Header sub>Subtotal</Header>\n                <SalePriceTotal saleList={saleList} />\n            </Header>\n            <FinishSale />\n        </Segment>\n    </React.Fragment>\n};","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport Price from '../common/Price';\nimport './PrintList.css';\nimport SalePriceTotal from './SalePriceTotal';\n\nconst Row = ({ id, display_name, qtyToSell, finishCondition, set_name, price }) => {\n    return <li key={id}>\n        <b>{display_name} | x{qtyToSell} | {finishCondition} | {set_name} | <Price num={price} /></b>\n    </li>\n}\n\nexport default class PrintList extends React.Component {\n    state = { printClicked: false }\n\n    print = () => {\n        this.setState({ printClicked: true }, () => {\n            window.print();\n            this.setState({ printClicked: false })\n        });\n    }\n\n    render() {\n        const { saleListCards } = this.props;\n        const { printClicked } = this.state;\n\n        if (saleListCards.length > 0) { // Ensure print is hidden if no cards in list\n            return (\n                <React.Fragment>\n                    <Button style={{ display: 'inline-block', float: 'right' }} onClick={this.print} icon>\n                        <Icon name=\"print\" />\n                    </Button>\n\n                    <div id=\"printme\" style={{ display: printClicked ? 'inline-block' : 'none' }}>\n                        <ul>{saleListCards.map(c => Row(c))}</ul>\n                        <span><b>Subtotal: <SalePriceTotal saleList={saleListCards} /></b></span>\n                    </div>\n                </React.Fragment >\n            )\n        } else {\n            return null;\n        }\n    }\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SUSPEND_SALE } from '../utils/api_resources';\nimport { Modal, Button, Grid, Form, Message } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst Divider = styled.div`\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n    height: 100%;\n`;\n\nconst ClearMargin = styled.div`\n    margin-top: 0px;\n    margin-bottom: 0px;\n`;\n\nconst CharLimit = styled.p`\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.2);\n    float: right;\n`;\n\nexport default function SuspendedSale({ restoreSale, deleteSuspendedSale, saleListLength, suspendSale, id }) {\n    const [sales, setSales] = useState([]);\n    const [saleID, setSaleID] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [customerName, setCustomerName] = useState('');\n    const [notes, setNotes] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const [loadingBtn, setLoadingBtn] = useState({\n        suspendBtn: false,\n        restoreBtn: false,\n        deleteBtn: false\n    });\n\n    const getSales = async () => {\n        const { data } = await axios.get(SUSPEND_SALE);\n        setSales(data);\n    }\n\n    const clearFields = () => {\n        setCustomerName('');\n        setNotes('')\n        setSaleID('');\n    }\n\n    // Get the previously suspended sales on mount and parent state (_id) change\n    useEffect(() => { getSales(); }, [id]); // If the parent-level suspended-sale _id changes, we fetch again\n\n    const modalTrigger = <Button\n        style={{ display: 'inline-block', float: 'right' }}\n        onClick={() => setModalOpen(true)}\n        icon=\"ellipsis horizontal\" />\n\n    const submitSuspendSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ suspendBtn: true });\n        await suspendSale({ customerName, notes });\n        setModalOpen(false); // Close the modal to avoid \"flicker\" when state re-renders\n        await getSales(); // Parent _id does not change, re-fetch sales\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ suspendBtn: false });\n    }\n\n    const submitRestoreSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ restoreBtn: true });\n        await restoreSale(saleID);\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ restoreBtn: false });\n    }\n\n    const submitDeleteSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ deleteBtn: true });\n        await deleteSuspendedSale();\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ deleteBtn: false });\n    }\n\n    return <React.Fragment>\n        <Modal trigger={modalTrigger} open={modalOpen}>\n            <Modal.Header>Sales menu</Modal.Header>\n            <Modal.Content>\n                <Grid columns={2} stackable relaxed=\"very\">\n                    {saleListLength > 0 && <React.Fragment>\n                        <Grid.Column width=\"7\">\n                            <h3>Suspend Sale</h3>\n                            <Form>\n                                <ClearMargin>\n                                    <Form.Input\n                                        label=\"Customer Name\"\n                                        placeholder=\"Jace, the Mind Sculptor\"\n                                        value={customerName}\n                                        onChange={(e, { value }) => setCustomerName(value.substring(0, 50))} />\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <CharLimit>{customerName.length}/50</CharLimit>\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <Form.TextArea\n                                        label=\"Notes\"\n                                        placeholder=\"Sometimes, I forget things...\"\n                                        value={notes}\n                                        onChange={(e, { value }) => setNotes(value.substring(0, 150))} />\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <CharLimit>{notes.length}/150</CharLimit>\n                                </ClearMargin>\n                                <Form.Button primary disabled={disabled || !customerName} loading={loadingBtn.suspendBtn} onClick={submitSuspendSale}>Suspend Sale</Form.Button>\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column width=\"1\"><Divider /></Grid.Column>\n                    </React.Fragment>}\n                    <Grid.Column width=\"7\">\n                        <h3>Restore Sale</h3>\n                        {sales.length > 0 && <React.Fragment>\n                            <Form>\n                                <Form.Select\n                                    fluid\n                                    label=\"Previously suspended sales\"\n                                    options={sales.map(s => {\n                                        return {\n                                            key: s._id,\n                                            text: s.name,\n                                            value: s._id\n                                        }\n                                    })}\n                                    placeholder=\"Select a sale\"\n                                    onChange={(e, { value }) => setSaleID(value)}\n                                />\n                                <Form.Button primary disabled={disabled || !saleID} loading={loadingBtn.restoreBtn} onClick={submitRestoreSale}>Restore Sale</Form.Button>\n                            </Form>\n                        </React.Fragment>}\n                        {sales.length === 0 && <Message info>\n                            <Message.Header>No sales</Message.Header>\n                            Suspend a sale first\n                        </Message>}\n                    </Grid.Column>\n                </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n                {!!id && <Button color=\"red\" disabled={disabled} loading={loadingBtn.deleteBtn} onClick={submitDeleteSale}>Delete current Sale</Button>}\n                <Button primary disabled={disabled} onClick={() => setModalOpen(false)}>Cancel</Button>\n            </Modal.Actions>\n        </Modal>\n    </React.Fragment >\n}","import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { Grid, Header, Divider } from 'semantic-ui-react';\nimport { GET_CARDS_WITH_INFO } from '../utils/api_resources';\nimport SearchBar from '../common/SearchBar';\nimport BrowseCardList from './BrowseCardList';\nimport CustomerSaleList from './CustomerSaleList';\nimport PrintList from './PrintList';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport SuspendedSale from './SuspendedSale';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport { SaleContext } from '../context/SaleContext';\n\nexport default function Sale() {\n    const {\n        saleListCards,\n        suspendedSale,\n        restoreSale,\n        deleteSuspendedSale,\n        suspendSale,\n        resetSaleState\n    } = useContext(SaleContext);\n\n    const [searchResults, setSearchResults] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const resetState = () => {\n        setSearchResults([]);\n        setSearchTerm('');\n        resetSaleState();\n    };\n\n    const handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: true },\n                headers: makeAuthHeader()\n            });\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            setSearchResults(modeledData);\n            setSearchTerm(term);\n\n            if (data.length === 0) { $('#searchBar').focus().select() }\n        } catch (e) {\n            console.log(e.response);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                <SearchBar handleSearchSelect={handleResultSelect} />\n            </Grid.Row>\n            <br />\n            <Grid stackable={true}>\n                <Grid.Row>\n                    <Grid.Column width=\"11\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Inventory</Header>\n\n                        <Divider />\n\n                        <BrowseCardList term={searchTerm} cards={searchResults} />\n\n                    </Grid.Column>\n                    <Grid.Column width=\"5\">\n                        <Header as=\"h2\" style={{ display: 'inline-block' }}>\n                            {suspendedSale.name === '' ? 'Sale Items' : `${suspendedSale.name}'s Items`}\n                        </Header>\n\n                        <SuspendedSale\n                            restoreSale={restoreSale}\n                            suspendSale={suspendSale}\n                            saleListLength={saleListCards.length}\n                            deleteSuspendedSale={deleteSuspendedSale}\n                            id={suspendedSale._id}\n                        />\n                        <PrintList saleListCards={saleListCards} />\n\n                        <Divider />\n\n                        <CustomerSaleList saleList={saleListCards} />\n                    </Grid.Column>\n                </Grid.Row >\n            </Grid >\n        </React.Fragment >\n    );\n}\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst SalesListItem = ({ saleData, cardList }) => {\n    const quantitySold = cardList.reduce(\n        (pre, curr) => pre + curr.qtyToSell,\n        0\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>{saleData.saleID}</Table.Cell>\n            <Table.Cell>\n                {moment(saleData.createTime).format('MM/DD/YYYY - h:mm A')}\n            </Table.Cell>\n            <Table.Cell>{quantitySold}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default SalesListItem;\n","import React from 'react';\nimport SalesListItem from './SalesListItem';\nimport { Table } from 'semantic-ui-react';\n\nconst SalesList = ({ list }) => {\n    return (\n        <Table celled unstackable compact>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Sale ID</Table.HeaderCell>\n                    <Table.HeaderCell>Date of Sale</Table.HeaderCell>\n                    <Table.HeaderCell>Quantity Sold</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {list.map(({ sale_data, card_list, _id }) => (\n                    <SalesListItem\n                        saleData={sale_data}\n                        cardList={card_list}\n                        key={_id}\n                    />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default SalesList;\n","import React, { Component } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport SalesList from './SalesList';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { GET_SALES_BY_TITLE } from '../utils/api_resources';\nimport { Header, Divider } from 'semantic-ui-react';\n\nclass BrowseSales extends Component {\n    state = { salesList: [], cardName: '' };\n\n    handleSearchSelect = async cardName => {\n        const { data } = await axios.get(GET_SALES_BY_TITLE, {\n            params: { cardName: cardName },\n            headers: makeAuthHeader()\n        });\n\n        this.setState({ salesList: data, cardName: cardName });\n    };\n\n    render() {\n        const { salesList, cardName } = this.state;\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n\n                <Header as=\"h2\">Browse Sales</Header>\n                <Divider />\n\n                <span>\n                    <em>\n                        {cardName !== '' && (\n                            <h4>\n                                {salesList.length} results for {cardName}\n                            </h4>\n                        )}\n                    </em>\n                </span>\n                <SalesList list={salesList} />\n            </div>\n        );\n    }\n}\n\nexport default BrowseSales;\n","import React from 'react';\nimport { Image, Label } from 'semantic-ui-react';\nimport MarketPrice from '../common/MarketPrice';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: inline-block;\n    margin: 10px 10px 10px 10px;\n`;\n\nconst InventoryWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5px;\n    background-color: rgba(0, 0, 0, 0.9);\n    border-radius: 10px 10px 10px 10px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n`;\n\nconst InventoryRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 5px;\n`;\n\nconst ImageWrapper = styled.div`\n    width: 300px;\n    height: 418.3px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n    background: repeating-linear-gradient(45deg, #bfbfbf, #bfbfbf 10px, #b0b0b0 10px, #b0b0b0 20px);\n    border-radius: 15px;\n`;\n\nexport default function PublicCardItem({ card }) {\n    const { id, cardImage } = card;\n    const [foilQty, nonfoilQty] = card.qohParsed;\n\n    const displayFoil = (\n        <InventoryRow>\n            <Label color='blue' image>Foil<Label.Detail>{foilQty}</Label.Detail></Label>\n            <MarketPrice id={id} finish=\"FOIL\" />\n        </InventoryRow>\n    );\n\n    const displayNonfoil = (\n        <InventoryRow>\n            <Label color='blue' image>Nonfoil<Label.Detail>{nonfoilQty}</Label.Detail></Label>\n            <MarketPrice id={id} />\n        </InventoryRow>\n    );\n\n    return <React.Fragment>\n        <Wrapper>\n            <ImageWrapper>\n                <Image src={cardImage} size=\"medium\" style={{ borderRadius: '15px' }} />\n            </ImageWrapper>\n            <InventoryWrapper>\n                {foilQty > 0 ? displayFoil : null}\n                {nonfoilQty > 0 ? displayNonfoil : null}\n            </InventoryWrapper>\n        </Wrapper>\n    </React.Fragment>\n}","import React from 'react';\nimport PublicCardItem from './PublicCardItem';\nimport { Grid } from 'semantic-ui-react';\n\nconst gridStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'space-evenly',\n    height: '100%'\n};\n\nexport default function PublicCardList({ cards }) {\n    return <Grid style={gridStyle} >\n        {cards.map(c =>\n            <PublicCardItem\n                key={c.id}\n                card={c}\n            />\n        )}\n    </ Grid>\n}\n","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Icon,\n    Divider,\n} from 'semantic-ui-react';\nimport SearchBar from '../common/SearchBar';\nimport PublicCardList from './PublicCardList';\nimport { GET_CARDS_WITH_INFO } from '../utils/api_resources';\nimport { InventoryCard } from '../utils/ScryfallCard';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    searchTerm: ''\n};\n\nexport default class PublicInventory extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: true }\n            });\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            this.setState({ searchResults: modeledData, searchTerm: term });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            searchResults,\n            searchTerm\n        } = this.state;\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p><em>{searchTerm}</em> is out of stock</p>\n            }\n            return <p>Search for a card</p>; // Default text before search\n        }\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Column>\n                        <Header as=\"h2\">\n                            Inventory Search\n                            <Header.Subheader>\n                                <em>Card prices subject to change. Consult a Clubhouse employee for final estimates</em>\n                            </Header.Subheader>\n                        </Header>\n\n                        <Divider />\n\n                        {!searchResults.length &&\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"search\" />\n                                    <span>{searchNotification()}</span>\n                                </Header>\n                            </Segment>}\n\n                        <PublicCardList cards={searchResults} />\n                    </Grid.Column>\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport SearchBar from '../common/SearchBar';\nimport { GET_SET_NAMES } from '../utils/api_resources';\nimport axios from 'axios';\nimport { Form, Input, Select, Dropdown, Segment } from 'semantic-ui-react';\n\nconst formatDropdownOptions = [\n    { key: 'qw', value: \"\", text: \"None\" },\n    { key: 'we', value: \"standard\", text: \"Standard\" },\n    { key: 'er', value: \"future\", text: \"Future\" },\n    { key: 'rt', value: \"historic\", text: \"Historic\" },\n    { key: 'ty', value: \"pioneer\", text: \"Pioneer\" },\n    { key: 'yu', value: \"modern\", text: \"Modern\" },\n    { key: 'ui', value: \"legacy\", text: \"Legacy\" },\n    { key: 'io', value: \"pauper\", text: \"Pauper\" },\n    { key: 'op', value: \"vintage\", text: \"Vintage\" },\n    { key: 'as', value: \"penny\", text: \"Penny\" },\n    { key: 'sd', value: \"commander\", text: \"Commander\" },\n    { key: 'df', value: \"brawl\", text: \"Brawl\" },\n    { key: 'fg', value: \"duel\", text: \"Duel\" },\n    { key: 'gh', value: \"oldschool\", text: \"Oldschool\" }\n];\n\nconst priceFilterDropdownOptions = [\n    { key: 'gte', value: 'gte', text: '>=' },\n    { key: 'lte', value: 'lte', text: '<=' },\n    { key: 'gtx', value: 'gt', text: '>' },\n    { key: 'ltx', value: 'lt', text: '<' }\n];\n\nconst finishDropdownOptions = [\n    { key: 'nonfoil_foil', value: '', text: 'None' },\n    { key: 'nonfoil', value: 'NONFOIL', text: 'Nonfoil' },\n    { key: 'foil', value: 'FOIL', text: 'Foil' }\n];\n\nconst sortByDropdownOptions = [\n    { key: 'pricesort', value: 'price', text: 'Price' },\n    { key: 'alphasort', value: 'name', text: 'Card Name' }\n];\n\nconst sortByDirectionDropdownOptions = [\n    { key: 'descdirsort', value: 1, text: 'Ascending' },\n    { key: 'ascdirsort', value: -1, text: 'Descending' }\n];\n\nconst sortByColorDropdownOptions = [\n    { key: 'w', value: 'W', text: 'White' },\n    { key: 'u', value: 'U', text: 'Blue' },\n    { key: 'b', value: 'B', text: 'Black' },\n    { key: 'r', value: 'R', text: 'Red' },\n    { key: 'g', value: 'G', text: 'Green' }\n];\n\nconst typeLineOptions = [\n    { key: 'na', value: '', text: 'None' },\n    { key: 'artifact', value: 'Artifact', text: 'Artifact' },\n    { key: 'creature', value: 'Creature', text: 'Creature' },\n    { key: 'enchantment', value: 'Enchantment', text: 'Enchantment' },\n    { key: 'instant', value: 'Instant', text: 'Instant' },\n    { key: 'land', value: 'Land', text: 'Land' },\n    { key: 'planeswalker', value: 'Planeswalker', text: 'Planeswalker' },\n    { key: 'sorcery', value: 'Sorcery', text: 'Sorcery' },\n    { key: 'tribal', value: 'Tribal', text: 'Tribal' }\n];\n\nconst initialState = {\n    title: '',\n    setName: '',\n    format: '',\n    priceNum: '',\n    priceFilter: 'gte',\n    finish: '',\n    sortBy: 'price',\n    colorsArray: [],\n    sortByDirection: -1,\n    typeLine: '',\n    setNames: []\n}\n\nexport default class DeckboxCloneForm extends React.Component {\n    state = { editionDropdownOptions: [], ...initialState };\n\n    handleSearchSelect = name => this.setState({ title: name });\n\n    // When the user blurs the search field, we need to re-set state. Otherwise it won't clear from handleSearchSelect()\n    handleSearchBlur = (e, d) => this.setState({ title: e.target.value });\n\n    handleChange = (e, { value }) => this.setState({ [e.target.name]: value });\n\n    handleDropdownChange = (e, data) => this.setState({ [data.name]: data.value });\n\n    async componentDidMount() {\n        const { data } = await axios.get(GET_SET_NAMES);\n        const setNameOptions = data.map((d, idx) => {\n            return { key: `set${idx}`, value: d, text: d };\n        })\n        const concatWithBlankOption = [{ key: 'snull', value: \"\", text: \"None\" }].concat(setNameOptions);\n        this.setState({ editionDropdownOptions: concatWithBlankOption });\n    }\n\n    render() {\n        const {\n            title,\n            setName,\n            format,\n            priceNum,\n            priceFilter,\n            finish,\n            sortBy,\n            sortByDirection,\n            colorsArray,\n            typeLine\n        } = this.state;\n\n        // Sort the colors here and concat prior to sending to the backend\n        const colors = colorsArray.sort().join('');\n\n        return (\n            <Segment>\n                <h3>Filters</h3>\n                <Form>\n                    <Form.Group widths=\"4\">\n                        <Form.Field>\n                            <label>Card Name</label>\n                            <SearchBar\n                                handleSearchSelect={this.handleSearchSelect}\n                                value={this.state.title}\n                                name=\"title\"\n                                onBlur={this.handleSearchBlur}\n                            />\n                        </Form.Field>\n                        <Form.Field\n                            control={Select}\n                            label=\"Format\"\n                            placeholder=\"Format\"\n                            options={formatDropdownOptions}\n                            name=\"format\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Edition\"\n                            placeholder=\"Edition\"\n                            search\n                            options={this.state.editionDropdownOptions}\n                            name=\"setName\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Finish\"\n                            placeholder=\"Finish\"\n                            options={finishDropdownOptions}\n                            name=\"finish\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n                    <Form.Group widths=\"4\">\n\n                        <Form.Field\n                            control={Select}\n                            multiple\n                            label=\"Colors\"\n                            placeholder=\"Colors\"\n                            options={sortByColorDropdownOptions}\n                            name=\"colorsArray\"\n                            onChange={this.handleDropdownChange}\n                        />\n\n                        <Form.Field\n                            control={Select}\n                            label=\"Type Line\"\n                            placeholder=\"Type Line\"\n                            options={typeLineOptions}\n                            name=\"typeLine\"\n                            onChange={this.handleDropdownChange} />\n\n                        <Form.Field>\n                            <label>Price Filter</label>\n                            <Input\n                                label={<Dropdown\n                                    options={priceFilterDropdownOptions}\n                                    name=\"priceFilter\"\n                                    defaultValue=\"gte\"\n                                    onChange={this.handleDropdownChange}\n                                />}\n                                placeholder=\"Enter a price\"\n                                labelPosition=\"left\"\n                                name=\"priceNum\"\n                                type=\"number\"\n                                onChange={this.handleDropdownChange}\n                            />\n                        </Form.Field>\n                    </Form.Group>\n\n                    <h3>{\"Sort & Order\"}</h3>\n\n                    <Form.Group>\n                        <Form.Field\n                            control={Select}\n                            label=\"Sort By\"\n                            placeholder=\"\"\n                            options={sortByDropdownOptions}\n                            defaultValue='price'\n                            name=\"sortBy\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Order\"\n                            options={sortByDirectionDropdownOptions}\n                            defaultValue={-1}\n                            name=\"sortByDirection\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Button primary onClick={() => this.props.handleSubmit({\n                            title,\n                            setName,\n                            format,\n                            priceNum,\n                            priceFilter,\n                            finish,\n                            sortBy,\n                            sortByDirection,\n                            colors,\n                            type: typeLine\n                        })}>Submit</Form.Button>\n                    </Form.Group>\n                </Form>\n            </Segment>\n        )\n    }\n}","import React from 'react';\nimport { Table, Icon, Image } from 'semantic-ui-react';\nimport Price from '../common/Price';\n\nconst conditionMap = {\n    NM: 'Near Mint',\n    LP: 'Light Play',\n    MP: 'Moderate Play',\n    HP: 'Heavy Play',\n};\n\nconst Tooltip = ({ image_uri, posX, posY }) => {\n    return (\n        <div style={{\n            position: 'absolute',\n            left: `${posX}px`,\n            width: '150px', // Width of the image when size=\"small\"\n            height: '209px', // Height of the image when size=\"small\"\n            borderRadius: '7px 7px 7px 7px',\n            boxShadow: '2px 2px 5px 0 rgba(0, 0, 0, 0.25)',\n            background: 'repeating-linear-gradient(45deg, #bfbfbf, #bfbfbf 10px, #b0b0b0 10px, #b0b0b0 20px)'\n        }}>\n            <Image\n                style={{ borderRadius: '7px 7px 7px 7px' }}\n                size=\"small\"\n                src={image_uri}\n            />\n        </div>\n    )\n}\n\nexport default class DeckboxCloneRow extends React.Component {\n    state = { mouseInside: false, mouseX: 0, mouseY: 0 };\n\n    mouseEnter = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseInside: true, mouseX, mouseY });\n    }\n\n    mouseLeave = (e) => this.setState({ mouseInside: false });\n\n    mouseMove = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseX, mouseY });\n    };\n\n    render() {\n        const { inventory, name, set_name, price, set, rarity, image_uri } = this.props;\n        const { mouseInside, mouseX, mouseY } = this.state;\n        const finish = inventory.k.split('_')[0];\n        const condition = inventory.k.split('_')[1];\n\n        return <Table.Row>\n            <Table.Cell>\n                <span\n                    onMouseEnter={this.mouseEnter}\n                    onMouseLeave={this.mouseLeave}\n                    onMouseMove={this.mouseMove}\n                    style={{ cursor: 'help' }}\n                >\n                    {name}{' '}\n                </span>\n                {finish === 'FOIL' && <Icon name=\"star\" color=\"blue\" />}\n                {mouseInside && <Tooltip image_uri={image_uri} posX={mouseX} posY={mouseY} />}\n            </Table.Cell>\n            <Table.Cell><i className={`ss ss-fw ss-${set} ss-${rarity}`} style={{ fontSize: '20px' }} />{\" \"}{set_name}</Table.Cell>\n            <Table.Cell>{conditionMap[condition]}</Table.Cell>\n            <Table.Cell>{inventory.v}</Table.Cell>\n            <Table.Cell><Price num={price} /></Table.Cell>\n        </Table.Row>\n    }\n}","import React from 'react'\nimport { GET_CARDS_BY_FILTER } from '../utils/api_resources';\nimport DeckboxCloneForm from './DeckboxCloneForm';\nimport DeckboxCloneRow from './DeckboxCloneRow';\nimport axios from 'axios';\nimport { Table, Menu, Icon, Dimmer, Loader, Segment, Header, Container } from 'semantic-ui-react';\nimport _ from 'lodash';\nconst LIMIT = 100 // Matching the backend for now\n\nexport default class DeckboxClone extends React.Component {\n    state = {\n        data: [],\n        count: 0,\n        currentPage: 0,\n        numPages: 0,\n        pageArray: [],\n        isLoading: false,\n        cachedFilters: {},\n        showPages: [],\n        searchTouched: false // Tracks whether the user has initially searched for the 'no results' message\n    }\n\n    fetchData = async (filters, page) => {\n        try {\n            this.setState({ isLoading: true });\n\n            const { data } = await axios.get(GET_CARDS_BY_FILTER, {\n                params: { ...filters, page }\n            });\n\n            const numPages = Math.ceil(data.total / LIMIT);\n            const pages = _.range(1, numPages + 1);\n            let showPages;\n\n            // Logic that controls the visibility of page number links \n            // Default max number pages to display is 5\n            if (page <= 3) {\n                showPages = pages.slice(0, 5);\n            } else if (page >= numPages - 2) {\n                showPages = pages.slice(numPages - 5, numPages);\n            } else {\n                showPages = pages.slice(page - 2, page + 3);\n            }\n\n            this.setState({\n                data: data.cards,\n                count: data.total,\n                isLoading: false,\n                numPages: numPages,\n                currentPage: page,\n                showPages: showPages,\n                searchTouched: true\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    handleSubmit = async (filters) => {\n        this.setState({ cachedFilters: filters }); // Set the filters for pagination requests later\n        await this.fetchData(filters, 1); // On submit, starting page mut always be 1\n    }\n\n    handlePage = async (page) => {\n        await this.fetchData(this.state.cachedFilters, page)\n        this.setState({ currentPage: page });\n    };\n\n    render() {\n        const { data, isLoading, currentPage, numPages, count } = this.state;\n        const showLeftPageButtons = !(currentPage === 1);\n        const showRightPageButtons = !(currentPage === numPages);\n\n        return <Container>\n            <Dimmer active={isLoading} inverted page style={{ marginTop: '52.63px' }}>\n                <Loader size=\"large\">Loading</Loader>\n            </Dimmer>\n            <Segment secondary>\n                <Icon name=\"exclamation triangle\" color=\"blue\" />\n                Prices from this table are updated weekly and are subject to fluctuations. Consult 'New Sale' or 'Manage Inventory' for up-to-date values\n            </Segment>\n            <DeckboxCloneForm handleSubmit={this.handleSubmit} />\n\n            {!!data.length && <Table celled striped compact>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='5'>\n                            <Menu floated=\"left\">\n                                <Menu.Item>Viewing page {currentPage} of {numPages}</Menu.Item>\n                            </Menu>\n                            <Menu floated=\"right\">\n                                {showLeftPageButtons && <Menu.Item as=\"a\" icon onClick={() => this.handlePage(currentPage - 1)} >\n                                    <Icon name='chevron left' />\n                                </Menu.Item>}\n\n                                <React.Fragment>\n                                    {this.state.showPages.map(p => {\n                                        return (\n                                            <Menu.Item\n                                                key={`page-${p}`}\n                                                onClick={() => this.handlePage(p)}\n                                                active={currentPage === p}\n                                                disabled={currentPage === p}\n                                                as=\"a\">\n                                                {p}\n                                            </Menu.Item>\n                                        )\n                                    })}\n                                </React.Fragment>\n\n                                {showRightPageButtons && <Menu.Item as=\"a\" icon onClick={() => this.handlePage(currentPage + 1)}>\n                                    <Icon name='chevron right' />\n                                </Menu.Item>}\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Edition</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Qty</Table.HeaderCell>\n                        <Table.HeaderCell>Price</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {data.map(d => <DeckboxCloneRow {...d} key={`${d._id}${d.inventory.k}`} />)}\n                </Table.Body>\n\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='5'>\n                            <Menu floated=\"left\">\n                                <Menu.Item>Total results: {count}</Menu.Item>\n                            </Menu>\n                            <Menu floated=\"right\">\n                                {showLeftPageButtons && <Menu.Item\n                                    as=\"a\"\n                                    icon\n                                    onClick={() => this.handlePage(currentPage - 1)}\n                                >\n                                    <Icon name='chevron left' />\n                                </Menu.Item>}\n\n                                <React.Fragment>\n                                    {this.state.showPages.map(p => {\n                                        return (\n                                            <Menu.Item\n                                                key={`page-${p}`}\n                                                onClick={() => this.handlePage(p)}\n                                                active={currentPage === p}\n                                                disabled={currentPage === p}\n                                                as=\"a\">\n                                                {p}\n                                            </Menu.Item>\n                                        )\n                                    })}\n                                </React.Fragment>\n\n                                {showRightPageButtons && <Menu.Item\n                                    as=\"a\"\n                                    icon\n                                    onClick={() => this.handlePage(currentPage + 1)}\n                                >\n                                    <Icon name='chevron right' />\n                                </Menu.Item>}\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>}\n\n            {!data.length &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        {this.state.searchTouched ?\n                            'No results found' :\n                            'Use the filters to browse inventory'\n                        }\n                    </Header>\n                </Segment>}\n        </Container>\n    }\n}","import React, { useState } from 'react';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { LOGIN } from '../utils/api_resources';\nimport axios from 'axios';\n\nexport const AuthContext = React.createContext();\n\nexport default function AuthProvider(props) {\n    const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('clubhouse_JWT'));\n\n    const handleLogin = async (username, password) => {\n        try {\n            const { data } = await axios.post(LOGIN, {\n                username: username.toLowerCase(),\n                password: password\n            }, { headers: makeAuthHeader() });\n\n            if (data.token) {\n                localStorage.setItem('clubhouse_JWT', data.token);\n                setLoggedIn(!!localStorage.getItem('clubhouse_JWT'))\n\n                return { authed: true };\n            } else {\n                return { authed: false };\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const handleLogout = async () => {\n        try {\n            localStorage.removeItem('clubhouse_JWT');\n            setLoggedIn(!!localStorage.getItem('clubhouse_JWT'));\n\n            return { authed: false };\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return <AuthContext.Provider value={{ loggedIn, handleLogin, handleLogout }}>\n        {props.children}\n    </AuthContext.Provider>\n}\n","import React, { useState, useContext } from 'react';\nimport createToast from '../common/createToast';\nimport { Form, Button, Segment } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthProvider';\nimport styled from 'styled-components';\n\nconst LoginContainer = styled.div`\n    margin-top: 15px;\n    display: flex;\n    justify-content: center;\n`;\n\nconst FormContainer = styled(Segment)`\n    width: 400px;\n    padding: 25px 25px 25px 25px !important;\n`;\n\nconst initialState = { username: '', password: '', loading: false };\n\nexport default function Login() {\n    const [state, setState] = useState(initialState);\n    const { loggedIn, handleLogin } = useContext(AuthContext);\n\n    const handleInputChange = (e, { value }) => setState({ ...state, [e.target.name]: value });\n\n    const login = async () => {\n        setState({ loading: true });\n\n        const { authed } = await handleLogin(state.username, state.password);\n\n        if (authed) {\n            // Do not set state here to mitigate React setState warning after component unmounted due to redirect\n            createToast({\n                color: 'green',\n                header: 'Success',\n                message: `Enjoy your time here!`,\n            });\n        } else {\n            setState(initialState);\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Username or password was incorrect`,\n            });\n        }\n    };\n\n    if (loggedIn) return <Redirect to=\"/manage-inventory\" />\n\n    return <LoginContainer>\n        <FormContainer raised loading={state.loading}>\n            <Form>\n                <Form.Field>\n                    <Form.Input\n                        className=\"username-input\"\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        label=\"Username\"\n                        value={state.username || ''}\n                        onChange={handleInputChange}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <Form.Input\n                        className=\"password-input\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        value={state.password || ''}\n                        onChange={handleInputChange}\n                    />\n                </Form.Field>\n                <Button\n                    primary\n                    fluid\n                    floated=\"right\"\n                    type=\"submit\"\n                    onClick={login}\n                    className=\"login-btn\"\n                    disabled={!state.username || !state.password}>\n                    Submit\n            </Button>\n            </Form>\n        </FormContainer>\n    </LoginContainer>\n}\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthProvider';\n\nfunction Logout() {\n    const { handleLogout } = useContext(AuthContext);\n\n    handleLogout();\n\n    return <Redirect to=\"/login\" />\n};\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Item\n} from 'semantic-ui-react';\nimport QohLabels from '../common/QohLabels';\nimport CardImage from '../common/CardImage';\nimport MarketPrice from '../common/MarketPrice'\nimport $ from 'jquery';\nimport createToast from '../common/createToast';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil`\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nfunction checkCardFinish(nonfoil, foil) {\n    if (!nonfoil && foil) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoil && !foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoil && foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default function ReceivingCardItem(props) {\n    const [quantity, setQuantity] = useState(1);\n    const [cashPrice, setCashPrice] = useState(0);\n    const [creditPrice, setCreditPrice] = useState(0);\n    const [selectedCondition, setSelectedCondition] = useState('NM');\n    const [marketPrice, setMarketPrice] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(\n        checkCardFinish(props.nonfoil, props.foil).selectedFinish // seed state from props\n    );\n\n    // Determines whether the select finish dropdown is permanently disabled, seeded from props\n    const finishDisabled = checkCardFinish(props.nonfoil, props.foil).finishDisabled;\n\n    const handleFinishChange = (e, { value }) => setSelectedFinish(value);\n\n    const handleConditionChange = (e, { value }) => setSelectedCondition(value);\n\n    // Validates/sanitizes user inputs by tracking the `name` attribute of the input element\n    const handlePriceChange = (e, { value }) => {\n        let val = Number(value) || 0;\n        if (val < 0) val = 0;\n\n        switch (e.target.name) {\n            case \"cashInput\":\n                setCashPrice(val);\n                break;\n            case \"marketPriceInput\":\n                setMarketPrice(val);\n                break;\n            case \"creditInput\":\n                setCreditPrice(val);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleQuantityChange = (e, { value }) => {\n        let val = parseInt(value, 10) || 0;\n        if (val < 0) val = 0; // cannot receive less than 0\n        if (val > 50) val = 50 // set max to 50 cards per single transaction\n        setQuantity(val);\n    };\n\n\n    const handleFocus = e => {\n        switch (e.target.name) {\n            case \"cashInput\":\n                if (cashPrice === 0) setCashPrice('');\n                break;\n            case \"marketPriceInput\":\n                if (marketPrice === 0) setMarketPrice('');\n                break;\n            case \"creditInput\":\n                if (creditPrice === 0) setCreditPrice('');\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleBlur = e => {\n        switch (e.target.name) {\n            case \"cashInput\":\n                if (cashPrice === '') setCashPrice(0);\n                break;\n            case \"marketPriceInput\":\n                if (marketPrice === '') setMarketPrice(0);\n                break;\n            case \"creditInput\":\n                if (creditPrice === '') setCreditPrice(0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleInventoryAdd = () => {\n        props.addToList({\n            quantity,\n            cashPrice,\n            marketPrice,\n            creditPrice,\n            finishCondition: `${selectedFinish}_${selectedCondition}`, // ex. NONFOIL_NM\n            cardInfo: { ...props }\n        })\n\n        setQuantity(1);\n        setCashPrice(0);\n        setMarketPrice(0);\n        setCreditPrice(0);\n        setSelectedCondition('NM');\n        setSelectedFinish(checkCardFinish(props.nonfoil, props.foil).selectedFinish);\n\n        createToast({\n            color: 'green',\n            header: `${quantity}x ${props.name} added to buylist!`,\n            duration: 2000\n        });\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    /**\n     * Determines whether the `Add` button should be disabled\n     */\n    const submitDisabled = () => {\n        const validateQty = quantity === 0 || quantity === '';\n        const validateTradeTypes = !cashPrice && !creditPrice;\n        const validateMarketPrice = marketPrice === 0 || marketPrice === '';\n\n        if (cashPrice > 0) {\n            return validateQty || validateTradeTypes || validateMarketPrice;\n        }\n\n        return validateQty || validateTradeTypes;\n    }\n\n    const {\n        image_uris,\n        name,\n        set_name,\n        set,\n        rarity,\n        card_faces,\n        id\n    } = props;\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"small\">\n                        <CardImage\n                            image_uris={image_uris}\n                            card_faces={card_faces}\n                            hover={false}\n                        />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as='h3'>\n                            {name}\n                            {' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                            <QohLabels inventoryQty={props.qoh} />\n                            {' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity\"\n                                        value={quantity}\n                                        onChange={handleQuantityChange}\n                                        onFocus={e => e.target.select()}\n                                    />\n                                    <Form.Field\n                                        label=\"Credit Price\"\n                                        name=\"creditInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={creditPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                    />\n                                    <Form.Field\n                                        label=\"Cash Price\"\n                                        name=\"cashInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={cashPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                    />\n                                    <Form.Field\n                                        label=\"Market Price\"\n                                        name=\"marketPriceInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={marketPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                        step=\"0.25\"\n                                        disabled={cashPrice === 0 || cashPrice === ''}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        label=\"Finish\"\n                                        control={Select}\n                                        value={selectedFinish}\n                                        options={finishes}\n                                        disabled={finishDisabled}\n                                        onChange={handleFinishChange}\n                                    />\n                                    <Form.Field\n                                        label=\"Condition\"\n                                        control={Select}\n                                        value={selectedCondition}\n                                        options={cardConditions}\n                                        onChange={handleConditionChange}\n                                    />\n                                    <Form.Button\n                                        label=\"Add to List?\"\n                                        control={Button}\n                                        primary\n                                        disabled={submitDisabled()}\n                                        onClick={handleInventoryAdd}\n                                    >\n                                        Add\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}","import React from 'react';\nimport ReceivingCardItem from './ReceivingSearchItem';\n\nexport default function ReceivingCardList({ cards, addToList }) {\n    return cards.map(c => {\n        return <ReceivingCardItem\n            key={c.id}\n            {...c}\n            addToList={addToList}\n        />\n    });\n}\n","import React, { useState } from 'react';\nimport { Table, Button, Label, Icon } from 'semantic-ui-react';\nimport Price from '../common/Price';\n\n// Defines whether it uses cash or credit for trade types\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListItem({ name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, removeFromList, tradeType, activeTradeType }) {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [hovered, setHovered] = useState(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell><b>{name}</b></Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Cash <b><Price num={cashPrice} /></b>\n                </div>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Credit <b><Price num={creditPrice} /></b>\n                </div>\n                <p>{finishCondition.split('_')[0]} | {finishCondition.split('_')[1]}</p>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CASH}\n                    color={tradeType === CASH ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CASH)}\n                    disabled={cashPrice === 0}\n                    icon\n                >\n                    <Icon name=\"dollar sign\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CREDIT}\n                    color={tradeType === CREDIT ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CREDIT)}\n                    disabled={creditPrice === 0}\n                    icon\n                >\n                    <Icon name=\"credit card outline\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => removeFromList(uuid_key)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}","import React from 'react';\nimport _ from 'lodash';\nimport Price from '../common/Price';\nimport { Table } from 'semantic-ui-react';\n\n// Am I crazy or is this logic really convoluted?\n// Perhaps look at this down the line for improvement...\nexport default function CashReport({ receivingList, closeCashModal }) {\n    // If id, cashPrice and marketPrice are the same, goes in one bucket\n    const countByPriceAndID = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            // Note: We're creating a unique uuid-esque comparator string based on:\n            // `id`, `cashPrice`, `marketPrice`, and `finishCondition`\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .groupBy(\"temp_uuid\")\n        .mapValues(val => val.length)\n        .value();\n\n    const uniqLineItems = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .uniqBy('temp_uuid')\n        .value();\n\n    const mergedWithQty = uniqLineItems.map(c => {\n        return { ...c, tradeQty: countByPriceAndID[c.temp_uuid] } // Add a trade quantity referencing the previous count\n    });\n\n    const totalCashOut = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .sumBy(c => c.cashPrice)\n        .value();\n\n    return <React.Fragment>\n        <div id=\"cash-report\">\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan={6}>Employee Name:</Table.HeaderCell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.HeaderCell>Card Name</Table.HeaderCell>\n                        <Table.HeaderCell>Market Value</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Offer</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Out</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {mergedWithQty.map(c => {\n                        return <Table.Row key={c.temp_uuid}>\n                            <Table.Cell>{c.name}</Table.Cell>\n                            <Table.Cell><Price num={c.marketPrice} /></Table.Cell>\n                            <Table.Cell>{c.finishCondition}</Table.Cell>\n                            <Table.Cell>{c.tradeQty}</Table.Cell>\n                            <Table.Cell><Price num={c.cashPrice} /></Table.Cell>\n                            <Table.Cell><Price num={c.tradeQty * c.cashPrice} /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n                <Table.Footer>\n                    <Table.HeaderCell colSpan={6}>Total: <Price num={totalCashOut} /></Table.HeaderCell>\n                </Table.Footer>\n            </Table>\n        </div>\n    </React.Fragment>\n}","import React, { useState } from 'react';\nimport { Segment, Statistic, Button, Modal, Header } from 'semantic-ui-react';\nimport Price from '../common/Price';\nimport CashReport from './CashReport';\nimport printCashReport from './printCashReport';\n\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListTotals({ receivingList, selectAll, commitToInventory }) {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [loading, setLoading] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [showCashModal, setShowCashModal] = useState(false);\n\n    const openCashModal = () => setShowCashModal(true);\n\n    const closeCashModal = () => setShowCashModal(false);\n\n    const submitToInventory = async () => {\n        setLoading(true);\n        await commitToInventory();\n        setLoading(false);\n    }\n\n    const handlePrintCashReport = () => {\n        setShowCashModal(false); // Close the modal so users don't have to after printing in new tab\n        printCashReport();\n    }\n\n    const cashTotal = receivingList.reduce((acc, curr) => {\n        let cashVal = curr.tradeType === CASH ? curr.cashPrice : 0;\n        return acc + cashVal;\n    }, 0);\n\n    const creditTotal = receivingList.reduce((acc, curr) => {\n        let creditVal = curr.tradeType === CREDIT ? curr.creditPrice : 0;\n        return acc + creditVal;\n    }, 0);\n\n    return <Segment>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Button.Group>\n                <Button onClick={() => selectAll(TRADE_TYPE.CASH)}>Select all cash</Button>\n                <Button.Or />\n                <Button onClick={() => selectAll(TRADE_TYPE.CREDIT)}>Select all credit</Button>\n            </Button.Group>\n            <div>\n                <Statistic size=\"mini\">\n                    <Statistic.Label>Cash Due:</Statistic.Label>\n                    <Statistic.Value><Price num={cashTotal} /></Statistic.Value>\n                </Statistic>\n                <Statistic size=\"mini\">\n                    <Statistic.Label>Credit Due:</Statistic.Label>\n                    <Statistic.Value><Price num={creditTotal} /></Statistic.Value>\n                </Statistic>\n            </div>\n        </div>\n\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Modal\n                open={showCashModal}\n                trigger={\n                    <Button\n                        color={cashTotal > 0 ? 'green' : null}\n                        disabled={cashTotal === 0}\n                        onClick={openCashModal}>\n                        Generate cash report\n                    </Button>\n                }>\n                <Modal.Content>\n                    <CashReport\n                        receivingList={receivingList}\n                        closeCashModal={closeCashModal} />\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={handlePrintCashReport} color=\"blue\">Print Report</Button>\n                    <Button onClick={closeCashModal}>Cancel</Button>\n                </Modal.Actions>\n            </Modal>\n\n            <Modal\n                closeOnDimmerClick={false}\n                trigger={\n                    <Button\n                        color=\"blue\"\n                        disabled={receivingList.length === 0}\n                        onClick={() => setShowModal(true)}>\n                        Commit to inventory\n                    </Button>\n                }\n                open={showModal}\n                onClose={() => setShowModal(false)}\n                basic style={{ marginTop: '50px' }} >\n                <Header>Confirm receipt of new inventory?</Header>\n                <Modal.Content>\n                    <p><b>Pressing 'Submit' will commit the following items to inventory:</b></p>\n                    <ul>\n                        {receivingList.map(c => {\n                            return <li key={c.uuid_key}>{c.name} | {c.set_name}({c.set.toUpperCase()})</li>\n                        })}\n                    </ul>\n                    <div>\n                        <p><b>The customer is owed: </b></p>\n                        <ul>\n                            {cashTotal > 0 ? <li><Price num={cashTotal} /> in cold, hard cash</li> : null}\n                            {creditTotal > 0 ? <li><Price num={creditTotal} /> in store credit</li> : null}\n                        </ul>\n                    </div>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button basic color=\"red\" inverted onClick={() => setShowModal(false)}>Cancel</Button>\n                    <Button color=\"green\" inverted loading={loading} disabled={loading} onClick={submitToInventory}>Submit</Button>\n                </Modal.Actions>\n            </Modal>\n        </div>\n    </Segment>\n}","const printStyle = `\n    body {\n        font-family: 'helvetica neue', helvetica, arial, sans-serif;\n    }\n\n    table {\n        table-layout: fixed;\n        width: 100%;\n        border-collapse: collapse;\n        border: 1px solid gray;\n        text-align: left;\n    }\n\n    thead th:nth-child(1) {\n        width: 30%;\n    }\n\n    thead th:nth-child(2) {\n        width: 20%;\n    }\n\n    thead th:nth-child(3) {\n        width: 15%;\n    }\n\n    thead th:nth-child(4) {\n        width: 35%;\n    }\n\n    th, td {\n        border: 1px solid #ddd;\n        padding: 10px;\n    }\n\n    tfoot {\n        text-align: right !important;\n    }\n`;\n\n/**\n     * We're creating a new tab here for the modal table and writing CSS to it - not the most elegant solution from a UX and\n     * code standpoint, but time was of the essence for this release. Refactor down the road.\n     * \n     * The id cash-report is found on the cash report table\n     */\nexport default function printCashReport() {\n    const divToPrint = document.getElementById('cash-report');\n    const popup = window.open('', '_blank');\n    popup.document.open();\n    popup.document.write(`<html>`);\n    popup.document.write(`<head>`);\n    popup.document.write(`<title>Cash Report</title>`)\n    popup.document.write(`<style>${printStyle}</style>`);\n    popup.document.write(`</head>`);\n    popup.document.write(`<body onload=\"window.print()\">`);\n    popup.document.write(`${divToPrint.innerHTML}`);\n    popup.document.write(`</body>`);\n    popup.document.write(`</html>`);\n    popup.document.close();\n}","import React, { useState } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport ReceivingSearchList from './ReceivingSearchList';\nimport { Segment, Header, Icon, Grid, Divider, Table } from 'semantic-ui-react'\nimport { RECEIVE_CARDS, GET_CARDS_WITH_INFO } from '../utils/api_resources';\nimport ReceivingListItem from './ReceivingListItem';\nimport ReceivingListTotals from './ReceivingListTotals';\nimport createToast from '../common/createToast';\nimport _ from 'lodash';\nimport uuid from 'uuid'; // Used to crete unique keys for the list\n\n// Defines whether the receivingListItem uses cash or credit for trade types\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nfunction DefaultPlaceholder({ active, headerText }) {\n    return (\n        <React.Fragment>\n            {active &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        <em>{headerText}</em>\n                    </Header>\n                </Segment>}\n        </React.Fragment>\n    )\n}\n\nexport default function Receiving() {\n    const [searchResults, setSearchResults] = useState([]);\n    const [receivingList, setReceivingList] = useState([]);\n\n    /**\n     * Fetches cards from the DB by title when a user selects a title after querying.\n     * This function merges the data (inventory quantity and card objects) from two endpoints into one array.\n     * \n     * @param {String} term - the search term\n     */\n    const handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: false },\n                headers: makeAuthHeader()\n            });\n\n            setSearchResults(data);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    /**\n     * Adds a card to the receiving list, with a unique uuid for identification\n     */\n    const addToList = ({ quantity, cashPrice, marketPrice, creditPrice, finishCondition, cardInfo }) => {\n\n        const previousState = [...receivingList];\n        let initialTradeType = TRADE_TYPE.CREDIT;\n\n        // If the creditPrice is 0 default to cash\n        if (!creditPrice) initialTradeType = TRADE_TYPE.CASH;\n\n        // Each line-item represents one card. Use _.times() to repeat\n        const newState = previousState.concat(_.times(quantity, idx => {\n            return { cashPrice, marketPrice, creditPrice, finishCondition, ...cardInfo, uuid_key: uuid(), tradeType: initialTradeType }\n        }))\n\n        setReceivingList(_.sortBy(newState, 'name'));\n    }\n\n    /**\n     * Removes a card from the receiving list using the uuid\n     */\n    const removeFromList = (uuid_key) => {\n        const copiedState = [...receivingList];\n        _.remove(copiedState, e => e.uuid_key === uuid_key); // Mutates array\n        setReceivingList(copiedState);\n    }\n\n    /**\n     * Determines whether line-items use cash or credit. Changes the tradeType by reference in the receivingList array\n     * which changes the button color/active prop in ReceivingListItem\n     */\n    const activeTradeType = (uuid_key, tradeType) => {\n        const previousState = [...receivingList];\n        const card = previousState.find(e => e.uuid_key === uuid_key);\n        card.tradeType = TRADE_TYPE[tradeType];\n        setReceivingList(previousState);\n    }\n\n    /**\n     * Selects all items by their tradeType, if possible\n     * \n     * @param {String} tradeType - `CASH` or `CREDIT`\n     */\n    const selectAll = (tradeType) => {\n        const oldState = [...receivingList];\n        const { CASH, CREDIT } = TRADE_TYPE;\n\n        oldState.forEach((card, idx, arr) => {\n            if (card.tradeType !== tradeType) { // if the line-items tradeType is not the one passed\n                const otherType = card.tradeType === CASH ? CREDIT : CASH; // determine the tradeType and set it to other one (toggle)\n                const otherTypeValue = otherType === CASH ? card.cashPrice : card.creditPrice; // see what the value of the other is\n                // if the other is greater than 0, we mutate array in-place\n                if (otherTypeValue > 0) arr[idx].tradeType = otherType;\n            }\n        })\n\n        setReceivingList(oldState);\n    }\n\n    /**\n     * Persists all passed cards to inventory via Promise.all() using the addCardToInventory backend method\n     */\n    const commitToInventory = async () => {\n        try {\n            const cardsToCommit = receivingList.map(card => {\n                const { finishCondition, id, name, set_name, set } = card;\n                return { quantity: 1, finishCondition, id, name, set_name, set }; // Only committing one per line-item\n            })\n\n            const messages = await axios.post(RECEIVE_CARDS, { cards: cardsToCommit }, { headers: makeAuthHeader() });\n\n            console.log(messages);\n\n            setSearchResults([]);\n            setReceivingList([]);\n\n            createToast({\n                color: 'green',\n                header: `${receivingList.length} cards were added to inventory!`,\n                duration: 2000\n            });\n        } catch (e) {\n            console.log(e);\n            createToast({\n                color: 'red',\n                header: `Something went wrong...`,\n                duration: 2000\n            });\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <SearchBar handleSearchSelect={handleSearchSelect} />\n            <br />\n            <Grid stackable={true}>\n                <Grid.Row>\n                    <Grid.Column width=\"10\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Card Search</Header>\n                        <Divider />\n                        <DefaultPlaceholder\n                            active={!searchResults.length}\n                            headerText={\"So many cards, so little time.\"}\n                        />\n                        <ReceivingSearchList\n                            cards={searchResults}\n                            addToList={addToList}\n                        />\n                    </Grid.Column>\n                    <Grid.Column width=\"6\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Buylist</Header>\n                        {receivingList.length > 0 &&\n                            <Header floated=\"right\" style={{ display: \"inline-block\" }}>Total Cards: {receivingList.length}</Header>\n                        }\n                        <Divider />\n                        <DefaultPlaceholder\n                            active={!receivingList.length}\n                            headerText={\"If you receive it, they will come.\"}\n                        />\n                        {receivingList.length > 0 && <Table compact size=\"small\">\n                            <Table.Body>\n                                {receivingList.map(({ name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, tradeType }) => {\n                                    return <ReceivingListItem\n                                        name={name}\n                                        set={set}\n                                        rarity={rarity}\n                                        cashPrice={cashPrice}\n                                        creditPrice={creditPrice}\n                                        finishCondition={finishCondition}\n                                        uuid_key={uuid_key}\n                                        removeFromList={removeFromList}\n                                        tradeType={tradeType}\n                                        activeTradeType={activeTradeType}\n                                        key={uuid_key}\n                                    />\n                                })}\n                            </Table.Body>\n                        </Table>}\n                        {receivingList.length > 0 && <ReceivingListTotals\n                            receivingList={receivingList}\n                            selectAll={selectAll}\n                            commitToInventory={commitToInventory}\n                        />}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </React.Fragment>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GET_ALL_SALES } from '../utils/api_resources';\nimport { Segment, Icon, Grid } from 'semantic-ui-react';\nimport Highcharts from 'highcharts';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nexport default function Reports() {\n    // const [salesData, setSalesData] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n\n            const { data } = await axios.get(GET_ALL_SALES);\n            const { sales_data, format_legalities } = data;\n\n            const groupByDay = _.groupBy(sales_data, d => moment(d.sale_data.timeStamp).startOf('day').format());\n\n            const dailySalesTotals = {};\n            const dailyAverageSales = {};\n            const rangeBuckets = {\n                0: 0, // $0.50 to $0.99\n                1: 0, // $1.00 to $4.99 \n                2: 0, // $5.00 to $9.99\n                3: 0, // $10.00 to $19.99\n                4: 0, // $20.00 to $49.99\n                5: 0, // $50.00 and above\n            };\n            const rarityCounts = {};\n\n            // Create daily sales totals\n            _.forOwn(groupByDay, (val, key) => {\n                dailySalesTotals[key] = val.reduce((acc, curr) => acc + curr.sale_data.total, 0);\n            });\n\n            // Create average sales totals\n            _.forOwn(groupByDay, (val, key) => {\n                dailyAverageSales[key] = val.reduce((acc, curr) => acc + curr.sale_data.total, 0) / val.length;\n            });\n\n            // Create range buckets for card prices\n            const cards = [];\n            sales_data.forEach(d => cards.push(...d.card_list));\n            cards.forEach(c => {\n                if (c.price >= 0.5 && c.price < 1) rangeBuckets[0] += c.qtyToSell;\n                if (c.price >= 1 && c.price < 5) rangeBuckets[1] += c.qtyToSell;\n                if (c.price >= 5 && c.price < 10) rangeBuckets[2] += c.qtyToSell;\n                if (c.price >= 10 && c.price < 20) rangeBuckets[3] += c.qtyToSell;\n                if (c.price >= 20 && c.price < 50) rangeBuckets[4] += c.qtyToSell;\n                if (c.price >= 50) rangeBuckets[5] += c.qtyToSell;\n            });\n\n            // Create rarity sales counts\n            cards.forEach(c => {\n                if (rarityCounts[c.rarity]) {\n                    rarityCounts[c.rarity] += c.qtyToSell\n                } else {\n                    rarityCounts[c.rarity] = c.qtyToSell;\n                }\n            });\n\n            // Create format legality data\n            const legalityCounts = { standard: 0, nonStandard: 0 };\n\n            format_legalities.forEach(c => {\n                const qtySold = c.qtyToSell;\n\n                if (!c.legalities) return; // Some cards may not link via mongo $lookup\n\n                if (c.legalities.standard === \"legal\") {\n                    legalityCounts.standard += qtySold;\n                } else {\n                    legalityCounts.nonStandard += qtySold;\n                }\n            });\n\n            // Format data for consumption by Highcharts API\n            const formattedDailySalesTotals = Object.entries(dailySalesTotals).map(el => [new Date(el[0]).getTime(), el[1]]);\n\n            const formattedDailyAverageSales = Object.entries(dailyAverageSales).map(el => [new Date(el[0]).getTime(), el[1]]);\n\n            const formattedRangeBuckets = Object.entries(rangeBuckets).map(d => d[1]);\n\n            const formattedRarityCounts = Object.entries(rarityCounts).map(d => ({ name: d[0], y: d[1] }));\n\n            const formattedLegalities = Object.entries(legalityCounts).map(d => ({ name: d[0], y: d[1] }));\n\n            setLoading(false);\n\n            Highcharts.setOptions({\n                lang: {\n                    thousandsSep: ','\n                }\n            });\n\n            Highcharts.chart('daily-sales', {\n                chart: {\n                    zoomType: 'x'\n                },\n                title: {\n                    text: 'Sales Over Time'\n                },\n                subtitle: {\n                    text: 'Click and drag to zoom'\n                },\n                credits: {\n                    enabled: false\n                },\n                xAxis: {\n                    type: 'datetime',\n                    title: {\n                        text: 'Date'\n                    }\n                },\n                yAxis: {\n                    title: {\n                        text: 'USD ($)'\n                    }\n                },\n                legend: {\n                    enabled: true\n                },\n                series: [{\n                    type: 'spline',\n                    data: formattedDailySalesTotals,\n                    name: 'Total Sales',\n                    tooltip: {\n                        valueDecimals: 2\n                    }\n                }, {\n                    type: 'spline',\n                    data: formattedDailyAverageSales,\n                    name: 'Average Sales',\n                    tooltip: {\n                        valueDecimals: 2\n                    }\n                }]\n            });\n\n            Highcharts.chart('price-buckets', {\n                chart: {\n                    type: 'bar'\n                },\n                title: {\n                    text: 'Cards Sold Per Price Range'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                yAxis: {\n                    min: 0,\n                    title: {\n                        text: 'Number sold'\n                    }\n                },\n                xAxis: {\n                    categories: [\n                        '$0.50 - $0.99',\n                        '$1.00 - $4.99',\n                        '$5.00 - $9.99',\n                        '$10.00 - $19.99',\n                        '$20.00 - $49.99',\n                        '$50.00 +'\n                    ]\n                },\n                plotOptions: {\n                    bar: {\n                        dataLabels: {\n                            enabled: true\n                        }\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Total cards\",\n                    data: formattedRangeBuckets\n                }]\n            });\n\n            Highcharts.chart('rarity-sales', {\n                chart: {\n                    plotBackgroundColor: null,\n                    plotBorderWidth: null,\n                    plotShadow: null,\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Cards Sold Per Rarity'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                plotOptions: {\n                    pie: {\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b><br>{point.percentage:.0f} %',\n                            distance: -50,\n                            filter: {\n                                property: 'percentage',\n                                operator: '>',\n                                value: 4\n                            }\n                        },\n                        colors: ['#7bb5ed', '#6798c8', '#4b769f', '#2d567c']\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Cards Sold\",\n                    data: formattedRarityCounts\n                }]\n            })\n\n            Highcharts.chart('format-legalities', {\n                chart: {\n                    plotBackgroundColor: null,\n                    plotBorderWidth: null,\n                    plotShadow: null,\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Standard vs Non-Standard Sales'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                plotOptions: {\n                    pie: {\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b><br>{point.percentage:.0f} %',\n                            distance: -50,\n                            filter: {\n                                property: 'percentage',\n                                operator: '>',\n                                value: 4\n                            }\n                        },\n                        colors: ['#7bb5ed', '#6798c8', '#4b769f', '#2d567c']\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Cards Sold\",\n                    data: formattedLegalities\n                }]\n            })\n        })();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Segment secondary>\n                <Icon name=\"exclamation triangle\" color=\"blue\" />\n                This feature is currently in beta. Metrics may not be entirely accurate. Please contact your development team if you have any feedback!\n            </Segment>\n            <Segment loading={loading}>\n                <div id=\"daily-sales\" style={{ width: \"100%\", height: \"400px\" }} />\n            </Segment>\n            <Grid columns={2} stackable={true}>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"price-buckets\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"rarity-sales\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"format-legalities\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport clubhouse_products from './clubhouse_products.png';\nimport ikoria_splash from './ikoria_splash.jpg';\nimport core_2021_draft_booster from './core_2021_draft_booster.png';\nimport core_2021_collector from './core_2021_collector.jpg';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nconst BaseContent = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: 52px;\n`;\n\nconst ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 1200px;\n\n    @media (max-width: 800px) {\n        width: 100%;\n        padding: 0px 10px 0px 10px;\n    }\n`;\n\nconst Image = styled.div`\n    background: url(${clubhouse_products});\n    background-size: cover;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 500px;\n    width: 100%;\n    z-index: -50;\n`;\n\nconst Image2 = styled.div`\n    background: url(${clubhouse_products});\n    background-size: cover;\n    position: absolute;\n    left: 0px;\n    height: 400px;\n    width: 100%;\n    z-index: -50;\n    opacity: 0.15;\n`;\n\nconst ImageMask = styled.div`\n    background-image: linear-gradient(to bottom, rgba(32, 106, 208, 1), rgba(32, 106, 208, 0.85), rgba(32, 106, 208, 0.66), rgba(255, 255, 255, 1));\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 500px;\n    width: 100%;\n    z-index: -49;\n`;\n\nconst ImageMask2 = styled.div`\n    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(255, 255, 255, 1));\n    position: absolute;\n    left: 0px;\n    height: 400px;\n    width: 100%;\n    z-index: -49;\n`;\n\nconst Divider = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: 500px;\n`;\n\nconst Divider2 = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: 400px;\n`;\n\nconst FlexRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst SpanStyle = styled.span`\n    margin-right: 10px;\n`;\n\nconst FlexColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Slogan = styled.h1`\n    font-size: 83px;\n    color: white;\n\n    @media (max-width: 800px) {\n        font-size: 45px;\n    }\n`;\n\nconst Header = styled.p`\n    font-size: 50px;\n    margin-top: 0px;\n    color: black;\n\n    @media (max-width: 800px) {\n        font-size: 27px;\n    }\n`;\n\nconst Subheader = styled.p`\n    font-size: 23px;\n    margin-top: 0px;\n    color: ${(props) => props.color || 'black'};\n\n    @media (max-width: 800px) {\n        font-size: 15px;\n    }\n`;\n\nconst Button = styled.button`\n    outline: none;\n    width: 200px;\n    height: 45px;\n    background-color: rgb(33, 133, 208);\n    border-radius: 20px 20px 20px 20px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    margin-right: 20px;\n    margin-top: 10px;\n    font-size: 17px;\n    color: white;\n    border: 0px;\n    \n    :hover {\n        background-color: rgb(35, 139, 219);\n        box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.4);\n    }\n`;\n\nconst CardImage = styled.img`\n    width: 100%;\n`;\n\nconst CardContent = styled.div`\n    padding: 2px 16px;\n`;\n\nconst CardContainer = styled.div`\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    border-radius: 5px 5px 5px 5px;\n    width: 380px;\n    height: 700px;\n    margin: 10px 10px 10px 10px;\n    overflow: hidden; // This allows us to edit the borders on the card's border-flush images\n\n    @media (max-width: 800px) {\n        width: 320px;\n    }\n`;\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(380px, max-content));\n    grid-gap: 10px;\n    justify-content: center;\n\n    @media (max-width: 800px) {\n        grid-template-columns: repeat(auto-fit, minmax(320px, max-content));\n    }\n`;\n\nconst IconStyled = styled(Icon)`\n    background-color: rgb(33, 133, 208);\n    color: white;\n`;\n\nconst FooterIcon = styled(Icon)`\n    color: white;\n`;\n\nconst BodyText = styled.p`\n    font-size: 16px;\n    color: ${props => props.color || 'black'};\n    text-align: ${props => props.align === 'center' ? 'center' : 'left'};\n`;\n\nconst Spacer = styled.div`\n    width: 100%;\n    height: ${props => props.height || 0}px;\n`;\n\nconst FooterStyle = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 50px;\n    background-color: darkslategray;\n    width: 100%;\n    bottom: 0;\n    padding: 0px 10px 0px 10px;\n`;\n\nconst SocialMedia = styled.div`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n`;\n\nconst Hide = styled.div`\n    @media (max-width: 800px) {\n        display: none;\n    }\n`;\n\nconst Card = ({ imageSrc, header, date, children }) => {\n    return <CardContainer>\n        <CardImage src={imageSrc} />\n        <CardContent>\n            <h3><b>{header}</b></h3>\n            <p><em>{date}</em></p>\n            <BodyText>{children}</BodyText>\n        </CardContent>\n    </CardContainer>\n}\n\nconst ServiceCard = ({ icon = \"users\", header = \"Header\", content = \"Content\", align }) => {\n    return <div>\n        <FlexColumn>\n            <IconStyled circular name={icon} size=\"huge\" />\n            <Subheader>{header}</Subheader>\n            <BodyText color=\"gray\" align={align}>\n                {content}\n            </BodyText>\n        </FlexColumn>\n    </div>\n}\n\nconst InfoCard = ({ icon = \"users\", header = \"Header\", content = \"Content\", align }) => {\n    return <div>\n        <FlexColumn>\n            <Icon name={icon} size=\"big\" />\n            <Subheader>{header}</Subheader>\n            <BodyText color=\"gray\" align={align}>\n                {content}\n            </BodyText>\n        </FlexColumn>\n    </div>\n}\n\nexport default function LandingPage() {\n    return <Wrapper>\n        <BaseContent>\n            <ContentContainer>\n                <SocialMedia>\n                    <div>\n                        <a href=\"https://discord.gg/Wpej7dQ\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FooterIcon link name=\"discord\" size=\"big\" />\n                        </a>\n                        <a href=\"https://www.facebook.com/RGTClubhouse/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FooterIcon link name=\"facebook\" size=\"big\" />\n                        </a>\n                    </div>\n                </SocialMedia>\n                <Spacer height=\"30\" />\n                <Divider>\n                    <Slogan>The Clubhouse is open <span role=\"img\" aria-label=\"confetti\">🎉</span></Slogan>\n                    <Subheader color=\"white\">It's official! We are now open 7 days a week, from 2pm to 9pm. Play space is limited to 16 mask-wearing players.</Subheader>\n                    <div>\n                        {/* <Link to=\"/calendar\">\n                            <Button><b>Events calendar</b></Button>\n                        </Link> */}\n                        <Link to=\"/public-inventory\">\n                            <Button><b>Browse cards</b></Button>\n                        </Link>\n                    </div>\n                    <ImageMask />\n                    <Image />\n                </Divider>\n\n                <FlexRow>\n                    <Header>Latest News</Header>\n                </FlexRow>\n                <Spacer height=\"30\" />\n                <Grid>\n                    <Card imageSrc={core_2021_collector}\n                        header=\"Collector Booster preorders!\"\n                        date=\"06/02/2020\">\n                        <p>\n                            To compound the excitement, We JUST got numbers on Collector Boosters for Core 2021! We are now taking pre-orders for those as well! $229 per, limit 1 box per customer.\n                        </p>\n                    </Card>\n                    <Card imageSrc={core_2021_draft_booster}\n                        header=\"Core 2021 preorders!\"\n                        date=\"06/02/2020\">\n                        <p>\n                            It's already time. Core 2021 is upon us. We are now taking Booster Box pre-orders! $100 per box, 2 boxes per person limit. Pre-release sign ups will begin on June 19th!\n                        </p>\n                    </Card>\n                    <Card imageSrc={ikoria_splash}\n                        header=\"Big announcement!\"\n                        date=\"05/31/2020\">\n                        <p>\n                            The Clubhouse play space re-opens TOMORROW! We are open 7 days a week from 2pm to 9 pm! There will be a 16 person capacity enforced on seating. MASKS are REQUIRED for play or any customer service.\n                        </p>\n                        <p>\n                            This means EVENTS are returning in a limited capacity. Tuesday and Saturday are FREE PLAY Commander! A pack of Ikoria will be given to the first pod that starts play on each free play day. Wednesday we will have an Ikoria booster draft for $15! First paper Ikoria draft! Then on Friday evening we will be holding a MYSTERY BOOSTER DRAFT for $35! Pack and a half of prize support per participant will be added to the prizes as well as free pizza, and giveaways during our Mystery Booster event!\n                        </p>\n                    </Card>\n                </Grid>\n\n                <Spacer height=\"30\" />\n\n                <Divider2>\n                    <Spacer height=\"30\" />\n                    <FlexRow>\n                        <Header>Our Services</Header>\n                    </FlexRow>\n                    <FlexRow>\n                        <Subheader>We're here for all your CCG needs!</Subheader>\n                    </FlexRow>\n                    <Spacer height=\"30\" />\n                    <Grid>\n                        <ServiceCard\n                            icon=\"box\"\n                            header=\"Large product selection\"\n                            content=\"We stock an extensive selection of singles and CCG supplies just for you! When the deckbuilding itch strikes, turn to us\"\n                            align=\"center\"\n                        />\n                        <ServiceCard\n                            header=\"Inclusive community\"\n                            content=\"We pride ourselves on our friendly atmosphere. Young or seasoned, beginner or advanced, we welcome all players!\"\n                            align=\"center\"\n                        />\n                        <ServiceCard\n                            icon=\"dollar sign\"\n                            header=\"Cash or credit trade-ins\"\n                            content=\"Whether a whole collection or a single card, come on by and have one of our expert managers appraise it using competitive market rates\"\n                            align=\"center\"\n                        />\n                    </Grid>\n                    <ImageMask2 />\n                    <Image2 />\n                </Divider2>\n                <Spacer height=\"30\" />\n                <Grid>\n                    <InfoCard\n                        icon=\"clock\"\n                        header=\"Hours\"\n                        content=\"2PM to 9PM daily\"\n                        align=\"center\"\n                    />\n                    <InfoCard\n                        icon=\"location arrow\"\n                        header=\"Location\"\n                        content=\"13895 SW Farmington Rd, Beaverton, OR 97005\"\n                        align=\"center\"\n                    />\n                    <InfoCard\n                        icon=\"phone\"\n                        header=\"Contact\"\n                        content=\"(503) 268-1449\"\n                    />\n                </Grid>\n                <Spacer height=\"30\" />\n            </ContentContainer>\n        </BaseContent>\n        <FooterStyle>\n            <FlexRow>\n                <SpanStyle>\n                    <Link to=\"/login\" id=\"login-btn\">\n                        <Label as='a' color=\"black\">Staff login</Label>\n                    </Link>\n                </SpanStyle>\n                <SpanStyle><BodyText color=\"white\">© 2020 The Clubhouse, LLC</BodyText></SpanStyle>\n            </FlexRow>\n            <Hide>\n                <a href=\"https://discord.gg/Wpej7dQ\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FooterIcon link name=\"discord\" size=\"big\"></FooterIcon>\n                </a>\n                <a href=\"https://www.facebook.com/RGTClubhouse/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FooterIcon link name=\"facebook\" size=\"big\"></FooterIcon>\n                </a>\n            </Hide>\n        </FooterStyle>\n    </Wrapper>\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './ManageInventory/Home';\nimport Sale from './NewSale/Sale';\nimport BrowseSales from './BrowseSales/BrowseSales';\nimport PublicInventory from './PublicInventory/PublicInventory';\nimport DeckboxClone from './DeckboxClone/DeckboxClone';\nimport Login from './Login/Login';\nimport Logout from './Logout/Logout';\nimport Receiving from './Receiving/Receiving';\nimport Reports from './Reports/Reports'\nimport LandingPage from './LandingPage/LandingPage'\nimport styled from 'styled-components';\n\nconst ContentContainer = styled.div`\n    padding-top: 75px;\n    margin-left: 20px;\n    margin-right: 20px;\n`;\n\nexport default function Main() {\n    return <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <ContentContainer id=\"content-container\">\n            <Route exact path=\"/manage-inventory\" component={Home} />\n            <Route exact path=\"/new-sale\" component={Sale} />\n            <Route exact path=\"/browse-sales\" component={BrowseSales} />\n            <Route exact path=\"/browse-inventory\" component={DeckboxClone} />\n            <Route exact path=\"/public-inventory\" component={PublicInventory} />\n            <Route exact path=\"/receiving\" component={Receiving} />\n            <Route exact path=\"/reports\" component={Reports} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/logout\" component={Logout} />\n        </ContentContainer>\n    </Switch>\n}","import React, { useContext } from 'react';\nimport ballLogo from './logos/magic-ball.png'\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthProvider';\n\nconst style = {\n    background: \"linear-gradient(#2185d0, #206ac6)\",\n    boxShadow: '0 3px 5px 0 rgba(0,0,0,.25)'\n}\n\nfunction Header(props) {\n    const { loggedIn } = useContext(AuthContext);\n    const { pathname } = props.location;\n\n    return <Menu inverted fixed=\"top\" style={style}>\n        <Menu.Item as={Link} replace to=\"/\">\n            <img src={ballLogo} style={{ marginRight: '7px' }} alt=\"logo\" />\n            <span><h3>Clubhouse Collection</h3></span>\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n            <Menu.Item active={pathname === '/public-inventory'} position=\"right\" as={Link} replace to=\"/public-inventory\">\n                Search\n            </Menu.Item>\n            {loggedIn && <Dropdown item icon=\"bars\">\n                <Dropdown.Menu>\n                    <Dropdown.Item active={pathname === '/manage-inventory'} as={Link} replace to=\"/manage-inventory\">\n                        <Icon name=\"plus\" color=\"blue\" />Manage Inventory\n                    </Dropdown.Item>\n                    <Dropdown.Item active={pathname === '/new-sale'} as={Link} replace to=\"/new-sale\" >\n                        <Icon name=\"dollar sign\" color=\"blue\" />New Sale\n                    </Dropdown.Item>\n                    <Dropdown.Item active={pathname === '/receiving'} as={Link} replace to=\"/receiving\" >\n                        <Icon name=\"list alternate outline\" color=\"blue\" />Receiving\n                    </Dropdown.Item>\n\n                    <Dropdown.Divider />\n\n                    <Dropdown.Item active={pathname === '/browse-inventory'} as={Link} replace to=\"/browse-inventory\" >\n                        <Icon name=\"box\" color=\"blue\" />Browse Inventory\n                    </Dropdown.Item>\n                    <Dropdown.Item active={pathname === '/browse-sales'} as={Link} replace to=\"/browse-sales\" >\n                        <Icon name=\"eye\" color=\"blue\" />Browse Sales\n                    </Dropdown.Item>\n                    <Dropdown.Item active={pathname === '/reports'} as={Link} replace to=\"/reports\" >\n                        <Icon name=\"chart bar\" color=\"blue\" />Reporting (Beta)\n                    </Dropdown.Item>\n\n                    <Dropdown.Divider />\n\n                    <Dropdown.Item active={pathname === '/logout'} as={Link} replace to=\"/logout\" >\n                        <Icon name=\"log out\" color=\"blue\" />Log out\n                    </Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>}\n        </Menu.Menu>\n    </Menu >\n}\n\nexport default withRouter(props => <Header {...props} />);\n","import React from 'react';\nimport Main from './Main';\nimport Header from './Header/Header';\nimport AuthProvider from './context/AuthProvider';\nimport { SaleProvider } from './context/SaleContext';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <AuthProvider>\n                <Header />\n                <SaleProvider>\n                    <Main />\n                </SaleProvider>\n            </AuthProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}