{"version":3,"sources":["LandingPage/clubhouse_products.png","Header/logos/magic-ball.png","utils/api_resources.js","LandingPage/core_2021_draft_booster.png","LandingPage/core_2021_collector.jpg","LandingPage/double_masters.png","utils/makeAuthHeader.js","context/AuthProvider.js","Header/Header.js","common/SearchBar.js","common/QohLabels.js","utils/parseQoh.js","common/createToast.js","common/CardImage.js","common/MarketPrice.js","common/Language.js","ManageInventory/ScryfallCardListItem.js","ManageInventory/ScryfallCardList.js","utils/ScryfallCard.js","ManageInventory/Home.js","context/SaleContext.js","utils/sortSaleList.js","NewSale/BrowseCardItem.js","NewSale/BrowseCardList.js","common/Price.js","common/TooltipImage.js","NewSale/SaleLineItem.js","NewSale/SalePriceTotal.js","NewSale/FinishSale.js","NewSale/CustomerSaleList.js","NewSale/PrintList.js","NewSale/SuspendedSale.js","common/TotalCardsLabel.js","NewSale/Sale.js","BrowseSales/SalesListItem.js","BrowseSales/SalesList.js","BrowseSales/BrowseSales.js","PublicInventory/PublicCardItem.js","PublicInventory/PublicCardList.js","PublicInventory/PublicInventory.js","DeckboxClone/DeckboxCloneForm.js","DeckboxClone/DeckboxCloneRow.js","DeckboxClone/DeckboxClone.js","Login/Login.js","Logout/Logout.js","context/ReceivingContext.js","Receiving/ReceivingSearchItem.js","Receiving/ReceivingSearchList.js","Receiving/DefaultPlaceholder.js","Receiving/ReceivingListItem.js","Receiving/CashReport.js","Receiving/ReceivingListModal.js","Receiving/ReceivingListTotals.js","Receiving/printCashReport.js","Receiving/ReceivingList.js","Receiving/Receiving.js","Reports/Reports.js","LandingPage/Card.js","LandingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","env","process","REACT_APP_ENVIRONMENT","endpoints","FINISH_SALE","ADD_CARD_TO_INVENTORY","RECEIVE_CARDS","GET_INVENTORY_QUERY","GET_SALES_BY_TITLE","GET_SCRYFALL_BULK_BY_TITLE","GET_CARDS_BY_FILTER","GET_SET_NAMES","SUSPEND_SALE","LOGIN","GET_ALL_SALES","GET_CARDS_WITH_INFO","SCRYFALL_AUTOCOMPLETE","SCRYFALL_SEARCH","GET_LIVE_PRICE","makeAuthHeader","Authorization","localStorage","getItem","AuthContext","React","createContext","AuthProvider","props","useState","loggedIn","setLoggedIn","handleLogin","username","password","a","axios","post","toLowerCase","headers","data","token","setItem","authed","console","log","handleLogout","removeItem","Provider","value","children","style","background","boxShadow","Header","useContext","pathname","location","Menu","inverted","fixed","Item","as","Link","replace","to","src","ballLogo","marginRight","alt","position","active","Dropdown","item","icon","Icon","name","color","Divider","withRouter","SearchBar","isLoading","setIsLoading","results","setResults","handleResultSelect","e","result","setTimeout","$","select","handleSearchSelect","title","Search","onSearchChange","_","debounce","length","get","formattedResults","map","el","slice","leading","trailing","onResultSelect","loading","placeholder","selectFirstResult","id","onFocus","target","onBlur","QohLabels","inventoryQty","foilQty","nonfoilQty","FOIL_NM","FOIL_LP","FOIL_MP","FOIL_HP","NONFOIL_NM","NONFOIL_LP","NONFOIL_MP","NONFOIL_HP","parseQoh","foilColor","nonfoilColor","Fragment","Label","image","className","Detail","ToastContainer","styled","Message","createToast","header","message","duration","toaster","notify","compact","zIndex","transition","CardImage","state","hovered","mouseOver","setState","mouseOut","this","image_uris","card_faces","hover","Image","size","transform","onMouseOver","onMouseOut","normal","Component","LabelStyle","foil","MarketPrice","finish","round","market","setMarket","median","setMedian","setLoading","isFoil","useEffect","_isMounted","params","scryfallId","marketPrices","medianPrices","Number","num","loader","displayPrice","price","toFixed","Math","ceil","LANG_CODES","en","es","fr","de","it","pt","ja","ko","ru","zhs","zht","he","la","grc","ar","sa","px","Language","languageCode","finishes","key","text","cardConditions","checkCardFinish","nonfoilProp","foilProp","selectedFinish","finishDisabled","ScryfallCardListItem","qoh","nonfoil","set_name","set","rarity","cardImage","lang","quantity","setQuantity","setSelectedFinish","selectedCondition","setSelectedCondition","setFinishDisabled","submitDisable","setSubmitDisable","setInventoryQty","submitLoading","setSubmitLoading","handleInventoryAdd","finishCondition","cardInfo","focus","Segment","Group","divided","Content","fontSize","String","toUpperCase","Description","Form","Field","control","Input","type","label","onChange","val","parseInt","isNaN","Select","options","disabled","Button","primary","onClick","ScryfallCardList","cards","card","InventoryCard","_qoh","qtyToSell","quantities","printed_name","colors","type_line","frame_effects","border_color","display_name","_createDisplayName","_getCardImage","includes","myImage","Home","searchResults","setSearchResults","term","matchInStock","modeledData","c","SaleContext","SaleProvider","saleListCards","setSaleListCards","_id","notes","list","suspendedSale","setSuspendedSale","restoreSale","response","suspendSale","customerName","delete","saleList","resetSaleState","ops","deleteSuspendedSale","finalizeSale","saleID","sale_data","Sale","addToSaleList","newCard","oldState","modeledCard","idx","findIndex","splice","push","sortedCards","ORDER","helpSort","arrayConst","colorsLength","cardFace","sort","b","localeCompare","indexOf","sortSaleList","removeFromSaleList","newState","reject","createConditionOptions","removeZeroedQuantites","pickBy","p","Object","entries","d","conditionFinish","qty","split","join","createInitialSelectedFinish","keysMapped","keys","k","uniq","BrowseCardItem","selectedFinishCondition","setSelectedFinishCondition","selectedFinishConditionQty","setSelectedFinishConditionQty","quantityToSell","setQuantityToSell","setPrice","conditionOptions","setConditionOptions","selection","numVal","step","BrowseCardList","Price","TooltipImage","image_uri","posX","left","width","height","borderRadius","BoldHelp","SaleLineItem","setHovered","mouseInside","setMouseInside","mousePos","setMousePos","Table","Row","Cell","onMouseEnter","rect","getBoundingClientRect","X","clientX","x","onMouseMove","onMouseLeave","singleLine","circular","SalePriceTotal","total","reduce","acc","FinishSale","submit","setSubmit","showModal","setShowModal","handleFinalizeSale","modalTrigger","floated","Modal","basic","open","trigger","Actions","CustomerSaleList","Body","clearing","sub","PrintList","printClicked","print","window","display","float","div","ClearMargin","CharLimit","SuspendedSale","saleListLength","sales","setSales","setSaleID","modalOpen","setModalOpen","setCustomerName","setNotes","setDisabled","suspendBtn","restoreBtn","deleteBtn","loadingBtn","setLoadingBtn","getSales","clearFields","submitSuspendSale","submitRestoreSale","submitDeleteSale","Grid","columns","stackable","relaxed","Column","substring","TextArea","fluid","s","info","TotalCardsLabel","listLength","displayStr","findSaleCardsQty","curr","searchTerm","setSearchTerm","alignItems","SalesListItem","saleData","quantitySold","cardList","pre","moment","createTime","format","SalesList","celled","unstackable","HeaderCell","card_list","BrowseSales","salesList","cardName","Wrapper","InventoryWrapper","InventoryRow","ImageWrapper","PublicCardItem","qohParsed","displayFoil","displayNonfoil","gridStyle","flexWrap","alignContent","PublicCardList","initialState","PublicInventory","Subheader","formatDropdownOptions","priceFilterDropdownOptions","finishDropdownOptions","sortByDropdownOptions","sortByDirectionDropdownOptions","sortByColorDropdownOptions","typeLineOptions","frameOptions","setName","priceNum","priceFilter","sortBy","colorsArray","sortByDirection","typeLine","setNames","frame","DeckboxCloneForm","editionDropdownOptions","handleSearchBlur","handleChange","handleDropdownChange","setNameOptions","concatWithBlankOption","concat","widths","search","multiple","defaultValue","labelPosition","handleSubmit","conditionMap","NM","LP","MP","HP","DeckboxCloneRow","mouseX","mouseY","mouseEnter","offsetLeft","clientY","offsetTop","mouseLeave","mouseMove","inventory","condition","cursor","v","DeckboxClone","count","currentPage","numPages","pageArray","cachedFilters","showPages","searchTouched","fetchData","filters","page","pages","range","handlePage","showLeftPageButtons","showRightPageButtons","Container","Dimmer","marginTop","Loader","secondary","striped","colSpan","Footer","LoginContainer","FormContainer","Login","handleInputChange","login","raised","Logout","TRADE_TYPES","CASH","CREDIT","LineItem","cardProps","cashPrice","marketPrice","creditPrice","uuid_key","uuid","tradeType","ReceivingContext","ReceivingProvider","receivingList","setReceivingList","commitToInventory","cardsToCommit","addToList","times","removeFromList","copiedState","remove","activeTradeType","previousState","find","selectAll","selectType","forEach","arr","selectedPrice","resetSearchResults","ReceivingSearchItem","setCashPrice","setCreditPrice","setMarketPrice","handlePriceChange","handleFocus","validateQty","validateTradeTypes","submitDisabled","ReceivingCardList","DefaultPlaceholder","TRADE_TYPE","ReceivingListItem","whiteSpace","CashReport","countByPriceAndID","closeCashModal","chain","filter","temp_uuid","groupBy","mapValues","mergedWithQty","uniqBy","tradeQty","totalCashOut","sumBy","ReceivingListModal","cashTotal","creditTotal","submitToInventory","closeOnDimmerClick","onClose","FlexRow","FlexCol","StatisticColor","Statistic","ReceivingListTotals","showCashModal","setShowCashModal","Or","divToPrint","document","getElementById","popup","write","innerHTML","close","printCashReport","Value","ReceivingList","Receiving","Reports","sales_data","format_legalities","groupByDay","timeStamp","startOf","dailySalesTotals","dailyAverageSales","rangeBuckets","0","1","2","3","4","5","rarityCounts","forOwn","legalityCounts","standard","nonStandard","qtySold","legalities","formattedDailySalesTotals","Date","getTime","formattedDailyAverageSales","formattedRangeBuckets","formattedRarityCounts","y","formattedLegalities","Highcharts","setOptions","thousandsSep","chart","zoomType","subtitle","credits","enabled","xAxis","yAxis","legend","series","tooltip","valueDecimals","min","categories","plotOptions","bar","dataLabels","plotBackgroundColor","plotBorderWidth","plotShadow","pie","distance","property","operator","Text","img","Card","imageSrc","date","BaseContent","ContentContainer","clubhouse_products","Image2","ImageMask","ImageMask2","FlexRowResponsive","SpanStyle","span","FlexColumn","Slogan","h1","button","IconStyled","FooterIcon","BodyText","align","Spacer","FooterStyle","SocialMedia","ServiceCard","content","InfoCard","LandingPage","href","rel","link","role","aria-label","double_masters","core_2021_collector","core_2021_draft_booster","BackgroundColor","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc59f7c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clubhouse_products.2a94c562.png\";","module.exports = __webpack_public_path__ + \"static/media/magic-ball.c3fcddd6.png\";","// Maps all GCF and Scryfall API endpoints for code re-use\nconst { REACT_APP_ENVIRONMENT } = process.env;\n\n/**\n * Check the environment for dev - if dev, we reach out\n * to all endpoints appended by `_test` instead of production\n */\nconst env = REACT_APP_ENVIRONMENT === 'development' ? '_test' : '';\n\nconst endpoints = {\n    FINISH_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/finishSale${env}`,\n    ADD_CARD_TO_INVENTORY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/addCardToInventory${env}`,\n    RECEIVE_CARDS:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/receiveCards${env}`,\n    GET_INVENTORY_QUERY:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/inventorySearchQuery${env}`,\n    GET_SALES_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getSales${env}`,\n    GET_SCRYFALL_BULK_BY_TITLE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getScryfallBulkCardsByTitle${env}`,\n    GET_CARDS_BY_FILTER:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByFilter${env}`,\n    GET_SET_NAMES:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByFilter${env}/set_names`,\n    SUSPEND_SALE:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/suspendSale${env}`,\n    LOGIN:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getJwt${env}`,\n    GET_ALL_SALES:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getSales${env}/sales`,\n    GET_CARDS_WITH_INFO:\n        `https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsWithInfo${env}`,\n    SCRYFALL_AUTOCOMPLETE: 'https://api.scryfall.com/cards/autocomplete',\n    SCRYFALL_SEARCH: 'https://api.scryfall.com/cards/search',\n    GET_LIVE_PRICE: `https://us-central1-clubhouse-collection.cloudfunctions.net/getPriceFromTcg${env}`\n};\n\nmodule.exports = endpoints;\n","module.exports = __webpack_public_path__ + \"static/media/core_2021_draft_booster.dcb6da2f.png\";","module.exports = __webpack_public_path__ + \"static/media/core_2021_collector.36289244.jpg\";","module.exports = __webpack_public_path__ + \"static/media/double_masters.26445b43.png\";","/**\n * This function is a helper for Axios, it yields an object for Axios params\n */\nexport default function makeAuthHeader() {\n    const header = { Authorization: `Bearer ${localStorage.getItem('clubhouse_JWT')}` };\n    return header;\n}","import React, { useState } from 'react';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { LOGIN } from '../utils/api_resources';\nimport axios from 'axios';\n\nexport const AuthContext = React.createContext();\n\nexport default function AuthProvider(props) {\n    const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('clubhouse_JWT'));\n\n    const handleLogin = async (username, password) => {\n        try {\n            const { data } = await axios.post(LOGIN, {\n                username: username.toLowerCase(),\n                password: password\n            }, { headers: makeAuthHeader() });\n\n            if (data.token) {\n                localStorage.setItem('clubhouse_JWT', data.token);\n                setLoggedIn(!!localStorage.getItem('clubhouse_JWT'))\n\n                return { authed: true };\n            } else {\n                return { authed: false };\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const handleLogout = async () => {\n        try {\n            localStorage.removeItem('clubhouse_JWT');\n            setLoggedIn(!!localStorage.getItem('clubhouse_JWT'));\n\n            return { authed: false };\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return <AuthContext.Provider value={{ loggedIn, handleLogin, handleLogout }}>\n        {props.children}\n    </AuthContext.Provider>\n}\n","import React, { useContext } from 'react';\nimport ballLogo from './logos/magic-ball.png'\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthProvider';\n\nconst style = {\n    background: \"linear-gradient(#2185d0, #206ac6)\",\n    boxShadow: '0 3px 5px 0 rgba(0,0,0,.25)'\n}\n\nfunction Header(props) {\n    const { loggedIn } = useContext(AuthContext);\n    const { pathname } = props.location;\n\n    return <Menu inverted fixed=\"top\" style={style}>\n        <Menu.Item as={Link} replace to=\"/\">\n            <img src={ballLogo} style={{ marginRight: '7px' }} alt=\"logo\" />\n            <span><h3>Clubhouse Collection</h3></span>\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n            <Menu.Item active={pathname === '/public-inventory'} position=\"right\" as={Link} replace to=\"/public-inventory\">\n                Search\n            </Menu.Item>\n            {loggedIn && <Dropdown item icon=\"bars\">\n                <Dropdown.Menu>\n                    <Dropdown.Item active={pathname === '/manage-inventory'} as={Link} replace to=\"/manage-inventory\">\n                        <Icon name=\"plus\" color=\"blue\" />Manage Inventory\n                    </Dropdown.Item>\n                    <Dropdown.Item active={pathname === '/new-sale'} as={Link} replace to=\"/new-sale\" >\n                        <Icon name=\"dollar sign\" color=\"blue\" />New Sale\n                    </Dropdown.Item>\n                    <Dropdown.Item active={pathname === '/receiving'} as={Link} replace to=\"/receiving\" >\n                        <Icon name=\"list alternate outline\" color=\"blue\" />Receiving\n                    </Dropdown.Item>\n\n                    <Dropdown.Divider />\n\n                    <Dropdown.Item active={pathname === '/browse-inventory'} as={Link} replace to=\"/browse-inventory\" >\n                        <Icon name=\"box\" color=\"blue\" />Browse Inventory\n                    </Dropdown.Item>\n                    <Dropdown.Item active={pathname === '/browse-sales'} as={Link} replace to=\"/browse-sales\" >\n                        <Icon name=\"eye\" color=\"blue\" />Browse Sales\n                    </Dropdown.Item>\n                    <Dropdown.Item active={pathname === '/reports'} as={Link} replace to=\"/reports\" >\n                        <Icon name=\"chart bar\" color=\"blue\" />Reporting (Beta)\n                    </Dropdown.Item>\n\n                    <Dropdown.Divider />\n\n                    <Dropdown.Item active={pathname === '/logout'} as={Link} replace to=\"/logout\" >\n                        <Icon name=\"log out\" color=\"blue\" />Log out\n                    </Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>}\n        </Menu.Menu>\n    </Menu >\n}\n\nexport default withRouter(props => <Header {...props} />);\n","import React, { useState } from 'react';\nimport { Search } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { SCRYFALL_AUTOCOMPLETE } from '../utils/api_resources';\nimport $ from 'jquery';\n\nexport default function SearchBar(props) {\n    const [isLoading, setIsLoading] = useState(false);\n    const [results, setResults] = useState([]);\n\n    const handleSearchChange = (e, { value }) => { // `value` is the search input string\n        if (value.length < 1) {\n            setIsLoading(false);\n            setResults([]);\n            return;\n        }\n\n        if (value.length < 3) return; // Don't search if only 2 letters in input\n\n        setIsLoading(true);\n\n        setTimeout(async () => {\n            const { data } = await axios.get(\n                `${SCRYFALL_AUTOCOMPLETE}?q=${value}`,\n                { headers: makeAuthHeader() }\n            );\n\n            const formattedResults = data.data.map(el => ({ title: el })).slice(0, 7);\n\n            setResults(formattedResults);\n            setIsLoading(false);\n        }, 100);\n    };\n\n    const handleResultSelect = async (e, { result }) => {\n        // This line is a hacky way to get around the fact that if we just select(), then\n        // when the user manually clicks the first (or any) result in the resultlist, it does not select,\n        // presumably because there is some collision between selecting the resultList element and focusing the input\n        setTimeout(() => $('#searchBar').select(), 10);\n        try {\n            setIsLoading(true);\n            await props.handleSearchSelect(result.title);\n            setIsLoading(false);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <Search\n            onSearchChange={_.debounce(handleSearchChange, 500, { leading: false, trailing: true })}\n            onResultSelect={handleResultSelect}\n            loading={isLoading}\n            results={results}\n            placeholder=\"Search for a card\"\n            selectFirstResult={true}\n            id=\"searchBar\"\n            onFocus={e => e.target.select()}\n            onBlur={props.onBlur} // Used to clear state in the Browse Inventory feature\n        />\n    );\n}\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\nimport parseQoh from '../utils/parseQoh';\n\n// This component parses the `qoh` object from mongo into something\n// more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function QohLabels({ inventoryQty }) {\n    const [foilQty, nonfoilQty] = parseQoh(inventoryQty);\n\n    const foilColor = {};\n    if (foilQty > 0) { foilColor.color = 'blue'; }\n\n    const nonfoilColor = {};\n    if (nonfoilQty > 0) { nonfoilColor.color = 'blue'; }\n\n    return (\n        <React.Fragment>\n            <Label {...foilColor} image className=\"foil-label\">\n                Foil\n        <Label.Detail className=\"foil-label-qty\">{foilQty}</Label.Detail>\n            </Label>\n            <Label {...nonfoilColor} image className=\"nonfoil-label\">\n                Nonfoil\n        <Label.Detail className=\"nonfoil-label-qty\">{nonfoilQty}</Label.Detail>\n            </Label>\n        </React.Fragment>\n    );\n}\n","// This function parses the `qoh` object from mongo into something more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function parseQoh(inventoryQty) {\n    let foilQty = 0;\n    let nonfoilQty = 0;\n\n    if (inventoryQty) { // Check to see if props exist\n        foilQty =\n            (inventoryQty.FOIL_NM || 0) +\n            (inventoryQty.FOIL_LP || 0) +\n            (inventoryQty.FOIL_MP || 0) +\n            (inventoryQty.FOIL_HP || 0);\n\n        nonfoilQty =\n            (inventoryQty.NONFOIL_NM || 0) +\n            (inventoryQty.NONFOIL_LP || 0) +\n            (inventoryQty.NONFOIL_MP || 0) +\n            (inventoryQty.NONFOIL_HP || 0);\n    }\n\n    return [foilQty, nonfoilQty];\n}","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport toaster from 'toasted-notes';\nimport styled from 'styled-components';\n\nconst ToastContainer = styled(Message)`\n    position: relative;\n    right: 10px;\n    bottom: 10px;\n`;\n\nconst createToast = ({ color, header, message, duration = 2000 }) => {\n    return toaster.notify(\n        () => (\n            <ToastContainer color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </ToastContainer>\n        ),\n        {\n            position: 'bottom-right',\n            duration: duration\n        }\n    );\n}\n\nexport default createToast;","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nconst style = {\n    boxShadow: '2px 2px 5px 0 rgba(0,0,0,.25)',\n    zIndex: '10',\n    transition: 'all .2s ease-in-out'\n}\n\nclass CardImage extends React.Component {\n    state = { hovered: false };\n\n    mouseOver = () => { this.setState({ hovered: true }) };\n\n    mouseOut = () => { this.setState({ hovered: false }) };\n\n    render() {\n        const { image_uris, card_faces, image, hover = true } = this.props // default prop `hover` must be true\n\n        if (image) {\n            return <Image\n                src={image}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        }\n\n        // TODO: This is obsolete logic that should be refactored out once all components ingest the ScryfallCard class,\n        // which manages the correct image URL itself\n        try {\n            // If normal prop `image_uris.normal` doesn't exist, move to catch block for flip card faces\n            return <Image\n                src={image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        } catch (e) {\n            return <Image src={\n                card_faces[0].image_uris.normal}\n                size=\"tiny\"\n                style={{ ...style, transform: `${this.state.hovered ? 'scale(1.75)' : 'scale(1)'}` }}\n                onMouseOver={hover ? this.mouseOver : null}\n                onMouseOut={hover ? this.mouseOut : null}\n            />;\n        }\n    }\n};\n\nexport default CardImage;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GET_LIVE_PRICE } from '../utils/api_resources';\nimport { Label, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst LabelStyle = styled(Label)`\n    background-color: ${(props) =>\n        !!props.foil ? '#ffcfdf' : null} !important;\n    background-image: ${(props) =>\n        !!props.foil\n            ? 'linear-gradient(90deg, #ffcfdf 0%, #b0f3f1 74%)'\n            : null} !important;\n`;\n\n// Rounds the passed number to the nearest fifty cents\nconst roundNearestStep = (num) => Math.ceil(num * 2) / 2;\n\nexport default function MarketPrice({ id, finish, round }) {\n    const [market, setMarket] = useState(null);\n    const [median, setMedian] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const isFoil = finish === 'FOIL';\n\n    useEffect(() => {\n        (async function fetchData() {\n            let _isMounted = true;\n            setLoading(true);\n\n            const { data } = await axios.get(GET_LIVE_PRICE, {\n                params: { scryfallId: id },\n            });\n            const { marketPrices, medianPrices } = data;\n\n            if (_isMounted) {\n                // Checks to see if the component is not mounted to squelch memory leak warnings\n                if (isFoil) {\n                    setMarket(Number(marketPrices.foil));\n                    setMedian(Number(medianPrices.foil));\n                } else {\n                    setMarket(Number(marketPrices.normal));\n                    setMedian(Number(medianPrices.normal));\n                }\n\n                setLoading(false);\n            }\n\n            return () => (_isMounted = false);\n        })();\n    }, [id, finish]);\n\n    const loader = (\n        <span>\n            Loading <Icon loading name=\"spinner\" />\n        </span>\n    );\n    const displayPrice = (price) => {\n        return !!price ? `$${price.toFixed(2)}` : 'N/A';\n    };\n\n    if (round) {\n        return (\n            <React.Fragment>\n                <LabelStyle foil={isFoil}>\n                    {loading ? (\n                        loader\n                    ) : (\n                        <span>\n                            Est. {displayPrice(roundNearestStep(market))}\n                        </span>\n                    )}\n                </LabelStyle>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <LabelStyle foil={isFoil}>\n                {loading ? loader : <span>Mkt. {displayPrice(market)}</span>}\n            </LabelStyle>\n            <LabelStyle foil={isFoil}>\n                {loading ? loader : <span>Mid. {displayPrice(median)}</span>}\n            </LabelStyle>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\n// Language codes from Scryfall. See https://scryfall.com/docs/api/languages for reference.\nconst LANG_CODES = {\n    en: 'English',\n    es: 'Spanish',\n    fr: 'French',\n    de: 'German',\n    it: 'Italian',\n    pt: 'Portuguese',\n    ja: 'Japanese',\n    ko: 'Korean',\n    ru: 'Russian',\n    zhs: 'Simplified Chinese',\n    zht: 'Traditional Chinese',\n    he: 'Hebrew',\n    la: 'Latin',\n    grc: 'Ancient Greek',\n    ar: 'Arabic',\n    sa: 'Sanskrit',\n    px: 'Phyrexian'\n}\n\nexport default function Language({ languageCode }) {\n    return <Label image color=\"grey\">{LANG_CODES[languageCode]}</Label>\n}","import React, { useState } from 'react';\nimport { Segment, Input, Button, Form, Select, Label, Item } from 'semantic-ui-react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport QohLabels from '../common/QohLabels';\nimport createToast from '../common/createToast';\nimport CardImage from '../common/CardImage';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport MarketPrice from '../common/MarketPrice'\nimport { ADD_CARD_TO_INVENTORY } from '../utils/api_resources';\nimport Language from '../common/Language';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil`\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nfunction checkCardFinish(nonfoilProp, foilProp) {\n    if (!nonfoilProp && foilProp) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoilProp && !foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoilProp && foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default function ScryfallCardListItem({ qoh, foil, nonfoil, name, set_name, set, rarity, id, cardImage, lang }) {\n    const [quantity, setQuantity] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(checkCardFinish(nonfoil, foil).selectedFinish);\n    const [selectedCondition, setSelectedCondition] = useState('NM');\n    const [finishDisabled, setFinishDisabled] = useState(checkCardFinish(nonfoil, foil).finishDisabled);\n    const [submitDisable, setSubmitDisable] = useState(false);\n    const [inventoryQty, setInventoryQty] = useState(qoh);\n    const [submitLoading, setSubmitLoading] = useState(false);\n\n    const handleFinishChange = (e, { value }) => setSelectedFinish(value);\n\n    const handleConditionChange = (e, { value }) => setSelectedCondition(value);\n\n    const handleQuantityChange = (e, { value }) => {\n        const val = parseInt(value);\n        const quantity = isNaN(val) ? '' : val; // Check for NaN\n        setQuantity(quantity);\n    };\n\n    // Remove input placeholder when user tries to enter a number (to reduce user error)\n    const handleFocus = () => {\n        if (quantity === 0) setQuantity('');\n    }\n\n    // Restore input placeholder when user blurs field\n    const handleBlur = () => {\n        if (quantity === '') setQuantity(0);\n    }\n\n    const handleInventoryAdd = async (e, { value }) => {\n        // This is the identifier for quantities of different finishes/conditions in the db\n        const finishCondition = `${selectedFinish}_${selectedCondition}`;\n\n        try {\n            setSubmitDisable(true);\n            setSubmitLoading(true);\n\n            const { data } = await axios.post(ADD_CARD_TO_INVENTORY, {\n                quantity: quantity,\n                finishCondition: finishCondition,\n                cardInfo: { id, name, set_name, set },\n            }, { headers: makeAuthHeader() });\n\n            createToast({\n                color: 'green',\n                header: `${quantity}x ${name} ${quantity > 0 ? 'added' : 'removed'}!`,\n                duration: 2000\n            });\n\n            setQuantity(0);\n            setSelectedFinish(checkCardFinish(nonfoil, foil).selectedFinish);\n            setSelectedCondition('NM');\n            setFinishDisabled(checkCardFinish(nonfoil, foil).finishDisabled);\n            setSubmitDisable(false);\n            setSubmitLoading(false);\n            setInventoryQty(data.qoh);\n\n            // Highlight the input after successful card add\n            $('#searchBar').focus().select();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"tiny\">\n                        <CardImage image={cardImage} />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as='h3'>\n                            {name}\n                            {' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                            <QohLabels inventoryQty={inventoryQty} />\n                            {' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                            <Language languageCode={lang} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group>\n                                    <Form.Field\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity\"\n                                        value={quantity}\n                                        onChange={handleQuantityChange}\n                                        onFocus={handleFocus}\n                                        onBlur={handleBlur}\n                                    />\n                                    <Form.Field\n                                        label=\"Finish\"\n                                        control={Select}\n                                        value={selectedFinish}\n                                        options={finishes}\n                                        disabled={finishDisabled}\n                                        onChange={handleFinishChange}\n                                    />\n                                    <Form.Field\n                                        label=\"Condition\"\n                                        control={Select}\n                                        value={selectedCondition}\n                                        options={cardConditions}\n                                        onChange={handleConditionChange}\n                                    />\n                                    <Form.Button\n                                        label=\"Add to Inventory?\"\n                                        control={Button}\n                                        primary\n                                        disabled={\n                                            quantity === 0 ||\n                                            quantity === '' ||\n                                            submitDisable\n                                        }\n                                        onClick={handleInventoryAdd}\n                                        loading={submitLoading}\n                                    >\n                                        Submit\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React from 'react';\nimport ScryfallCardListItem from './ScryfallCardListItem';\n\nexport default function ScryfallCardList(props) {\n    return props.cards.map(card => {\n        return <ScryfallCardListItem\n            key={card.id}\n            {...card}\n            qoh={card.qoh}\n        />\n    });\n}\n","/**\n * This class wraps the Scryfall API request data and models it to something we can control.\n * Also acts as a safeguard for any future updates to Scryfall's API data model and makes\n * the code easier to maintain and debug.\n */\nexport class ScryfallCard {\n    // Computes the proper displayName for a card, depending on its properties\n    _createDisplayName() {\n        const { name, printed_name, frame_effects, border_color, lang } = this;\n\n        if (lang !== 'en') return `${name} (${lang.toUpperCase()})`;\n\n        if ((name !== printed_name) && printed_name) { // Covers cards like Godzilla series\n            return `${name} (IP series)`;\n        } else if (frame_effects.length === 0 && border_color === 'borderless') { // Covers cards like comic-art Vivien, Monsters' Advocate\n            return `${name} (Borderless)`;\n        } else if (frame_effects.includes('showcase')) { // Covers showcase cards like comic-art Illuna, Apex of Wishes\n            return `${name} (Showcase)`;\n        } else if (frame_effects.includes('extendedart')) { // Covers cards with extended left and roght border art\n            return `${name} (Extended art)`;\n        } else {\n            return name;\n        }\n    }\n\n    _getCardImage() {\n        let myImage;\n\n        try {\n            // If normal prop doesn't exist, move to catch block for flip card faces\n            myImage = this.image_uris.normal;\n        } catch (e) {\n            myImage = this.card_faces[0].image_uris.normal;\n        }\n\n        return myImage;\n    }\n\n    constructor(card) {\n        this.id = card.id;\n        this.name = card.name;\n        this.printed_name = card.printed_name || null;\n        this.set = card.set;\n        this.set_name = card.set_name;\n        this.rarity = card.rarity;\n        this.image_uris = card.image_uris || null;\n        this.card_faces = card.card_faces || null;\n        this.nonfoil = card.nonfoil;\n        this.foil = card.foil;\n        this.colors = card.colors;\n        this.type_line = card.type_line;\n        this.frame_effects = card.frame_effects || [];\n        this.lang = card.lang || '';\n        this.border_color = card.border_color;\n        this.display_name = this._createDisplayName();\n        this.cardImage = this._getCardImage();\n    }\n}\n\n/**\n * Extends the Scryfall card object and adds properties we know exist in our database.\n * Models the data and makes writing cards to Mongo a more confident process.\n */\nexport class InventoryCard extends ScryfallCard {\n    constructor(card) {\n        super(card);\n        this._qoh = card.qoh ? card.qoh : {};\n        // `quantity` and `qtyToSell` are redundant transaction props, unify them down the line\n        this.quantity = card.quantity || null;\n        this.qtyToSell = card.qtyToSell || null;\n        this.finishCondition = card.finishCondition || null;\n        this.price = card.price >= 0 ? card.price : null;\n    }\n\n    get qohParsed() {\n        const foilQty =\n            (this._qoh.FOIL_NM || 0) +\n            (this._qoh.FOIL_LP || 0) +\n            (this._qoh.FOIL_MP || 0) +\n            (this._qoh.FOIL_HP || 0);\n\n        const nonfoilQty =\n            (this._qoh.NONFOIL_NM || 0) +\n            (this._qoh.NONFOIL_LP || 0) +\n            (this._qoh.NONFOIL_MP || 0) +\n            (this._qoh.NONFOIL_HP || 0);\n\n        return [foilQty, nonfoilQty];\n    }\n\n    get qoh() {\n        return this._qoh;\n    }\n\n    set qoh(quantities) {\n        this._qoh = quantities ? quantities : {};\n    }\n}\n","import React, { useState } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport ScryfallCardList from './ScryfallCardList';\nimport { Segment, Header, Icon, Divider } from 'semantic-ui-react'\nimport { GET_CARDS_WITH_INFO } from '../utils/api_resources';\nimport { InventoryCard } from '../utils/ScryfallCard';\n\nexport default function Home() {\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(\n                GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: false },\n                headers: makeAuthHeader()\n            });\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            setSearchResults(modeledData);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <SearchBar handleSearchSelect={handleSearchSelect} />\n\n            <Header as=\"h2\">Manage Inventory</Header>\n            <Divider />\n\n            {!searchResults.length &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        <em>\"Searching the future for answers often leads to further questions.\"</em>\n                    </Header>\n                </Segment>}\n\n            <ScryfallCardList cards={searchResults} />\n        </React.Fragment>\n    );\n}\n","import React, { useState, createContext } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash'\nimport { SUSPEND_SALE, FINISH_SALE } from '../utils/api_resources';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport sortSaleList from '../utils/sortSaleList';\nimport createToast from '../common/createToast';\nimport makeAuthHeader from '../utils/makeAuthHeader';\n\nexport const SaleContext = createContext();\n\nexport const SaleProvider = props => {\n    const [saleListCards, setSaleListCards] = useState([]);\n    const [suspendedSale, setSuspendedSale] = useState({\n        _id: '',\n        name: '',\n        notes: '',\n        list: []\n    });\n\n    /**\n     * Adds product to the sale list\n     */\n    const addToSaleList = (card, finishCondition, qtyToSell, price) => {\n        const newCard = { ...card, finishCondition, qtyToSell, price };\n        const oldState = [...saleListCards];\n        const modeledCard = new InventoryCard(newCard);\n\n        // Need to make sure same ID's with differing conditions are separate line-items\n        const idx = oldState.findIndex(el => {\n            return (\n                el.id === newCard.id && el.finishCondition === finishCondition\n            );\n        });\n\n        if (idx !== -1) {\n            oldState.splice(idx, 1, modeledCard);\n        } else {\n            oldState.push(modeledCard);\n        }\n\n        // Sorting the saleList cards here, on add\n        const sortedCards = sortSaleList(oldState);\n\n        setSaleListCards(sortedCards);\n    };\n\n    /**\n     * Removes product from the sale list\n     */\n    const removeFromSaleList = (id, finishCondition) => {\n        const newState = _.reject([...saleListCards], el => {\n            return el.id === id && el.finishCondition === finishCondition;\n        });\n\n        setSaleListCards(newState);\n    };\n\n    /**\n     * Restores a sale (assigns a saleList to state) from a suspended sale from the db\n     */\n    const restoreSale = async id => {\n        try {\n            const { data } = await axios.get(`${SUSPEND_SALE}/${id}`);\n            const modeledData = data.list.map(c => new InventoryCard(c));\n\n            setSaleListCards(modeledData);\n            setSuspendedSale(data);\n\n            createToast({ color: 'green', header: `You are viewing ${data.name}'s sale` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    }\n\n    /**\n     * Suspends a sale (persists it to mongo) via the SuspendedSale component and API\n     */\n    const suspendSale = async ({ customerName, notes }) => {\n        const { _id } = suspendedSale;\n\n        try {\n            if (!!_id) await axios.delete(`${SUSPEND_SALE}/${_id}`); // If we're suspended, delete the previous to replace\n\n            const { data } = await axios.post(SUSPEND_SALE, {\n                customerName: customerName,\n                notes: notes,\n                saleList: saleListCards\n            })\n\n            resetSaleState();\n\n            createToast({ color: 'green', header: `${data.ops[0].name}'s sale was suspended` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error`, message: `${e.response.data}` });\n        }\n    }\n\n    const deleteSuspendedSale = async () => {\n        try {\n            const { _id, name } = suspendedSale;\n            await axios.delete(`${SUSPEND_SALE}/${_id}`);\n\n            resetSaleState();\n\n            createToast({ color: 'green', header: `${name}'s sale was deleted` });\n        } catch (e) {\n            console.log(e.response);\n            createToast({ color: 'red', header: `Error` });\n        }\n    }\n\n    /**\n     * Extracts the saleList state and uses it to complete sale\n     */\n    const finalizeSale = async () => {\n        const { _id } = suspendedSale;\n\n        try {\n            // Must delete currently suspended sale to faithfully restore inventory prior to sale\n            if (!!_id) await axios.delete(`${SUSPEND_SALE}/${_id}`);\n\n            const { data } = await axios.post(FINISH_SALE, { cards: saleListCards }, { headers: makeAuthHeader() });\n\n            const saleID = data.sale_data.Sale.saleID;\n\n            createToast({\n                color: 'green',\n                header: 'Sale created in Lightspeed!',\n                message: `The id number is #${saleID}`,\n            });\n\n            resetSaleState();\n        } catch (e) {\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Sale was not created`,\n            });\n\n            resetSaleState();\n            console.log(e.response);\n        }\n    };\n\n    const resetSaleState = () => {\n        setSaleListCards([]);\n        setSuspendedSale({\n            _id: '',\n            name: '',\n            notes: '',\n            list: []\n        })\n    };\n\n    return <SaleContext.Provider value={{\n        saleListCards,\n        suspendedSale,\n        addToSaleList,\n        removeFromSaleList,\n        restoreSale,\n        suspendSale,\n        deleteSuspendedSale,\n        finalizeSale,\n        resetSaleState\n    }}>\n        {props.children}\n    </SaleContext.Provider>\n}","/**\n * Takes in an unordered group of cards and sorts them according to The Clubhouse's specs:\n * WUBRG, then multicolor, then colorless, then land, alphabetically within each color/category\n */\nexport default function sortSaleList(cards) {\n    const ORDER = ['W', 'U', 'B', 'R', 'G', 'MULTI', 'COLORLESS', 'LAND'];\n\n    /**\n     * Main helper function that manages sort order\n     * @param {Object} card\n     */\n    function helpSort(card) {\n        let arrayConst = null;\n\n        let colorsLength = null;\n        let cardFace = null;\n\n        try {\n            // If colors don't exist, it's a flip card or storybook frame\n            colorsLength = card.colors.length;\n            cardFace = card;\n        } catch (e) {\n            try {\n                // Storybook frames from Eldraine may throw error\n                colorsLength = card.card_faces[0].colors.length;\n                cardFace = card.card_faces[0];\n            } catch (e) {\n                colorsLength = card.colors.length;\n                cardFace = card;\n            }\n        }\n\n        // Apply logic to return correct constant enum\n        if (colorsLength === 0) {\n            arrayConst = 'COLORLESS';\n        } else if (colorsLength === 1) {\n            arrayConst = cardFace.colors[0];\n        } else if (colorsLength > 1) {\n            arrayConst = 'MULTI';\n        }\n\n        // Drill into colorless cards, if they are lands or not\n        if (arrayConst === 'COLORLESS') {\n            if (cardFace.type_line.includes('Land')) {\n                arrayConst = 'LAND';\n            }\n        }\n\n        // Final check to guard against a null arrayConst\n        if (!arrayConst) { arrayConst = 'LAND' }\n\n        return arrayConst;\n    }\n\n    const alphaSort = cards.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n    });\n\n    const sorted = alphaSort.sort((a, b) => {\n        return ORDER.indexOf(helpSort(a)) - ORDER.indexOf(helpSort(b));\n    });\n\n    return sorted;\n}","import React, { useState, useContext } from 'react';\nimport { Segment, Label, Form, Input, Dropdown, Button, Item } from 'semantic-ui-react';\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport CardImage from '../common/CardImage';\nimport MarketPrice from '../common/MarketPrice';\nimport QohLabels from '../common/QohLabels';\nimport Language from '../common/Language';\nimport { SaleContext } from '../context/SaleContext';\n\n/**\n * Creates a list of conditions for the dropdown menu from the `qoh`\n * Note: Is this not needed if we default select initially?\n * @param {Object} qoh\n * @param {String} id\n */\nfunction createConditionOptions(qoh, id) {\n    const removeZeroedQuantites = _.pickBy(qoh, p => p > 0); // Quantites of zero not included\n\n    return Object.entries(removeZeroedQuantites).map(d => {\n        const [conditionFinish, qty] = d;\n\n        return {\n            text: `${conditionFinish.split('_').join(' | ')} | Qty: ${qty}`,\n            value: conditionFinish,\n            key: `${id}${conditionFinish}`\n        };\n    });\n}\n\n/**\n * Creates initial selectedFinish value, used for the MarketPrice component\n * Returns FOIL or NONFOIL depending on what's in current inventory (qoh)\n * @param {Object} qoh\n */\nfunction createInitialSelectedFinish(qoh) {\n    const removeZeroedQuantites = _.pickBy(qoh, p => p > 0);\n    // Isolate only the FOIL or NONFOIL values with mapping\n    const keysMapped = _.keys(removeZeroedQuantites).map(k => k.split('_')[0]);\n    const uniqueValues = _.uniq(keysMapped);\n    return uniqueValues.indexOf('NONFOIL') > -1 ? 'NONFOIL' : 'FOIL';\n}\n\nexport default function BrowseCardItem(props) {\n    const [selectedFinishCondition, setSelectedFinishCondition] = useState('');\n    const [selectedFinishConditionQty, setSelectedFinishConditionQty] = useState(0);\n    const [quantityToSell, setQuantityToSell] = useState(0);\n    const [price, setPrice] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(createInitialSelectedFinish(props.qoh));\n    const [conditionOptions, setConditionOptions] = useState(createConditionOptions(props.qoh, props.id));\n    const { addToSaleList } = useContext(SaleContext);\n\n    const handleQuantityChange = (e, { value }) => {\n        if (value === '') {\n            setQuantityToSell('');\n            return;\n        }\n\n        let numVal = parseInt(value);\n\n        if (numVal > selectedFinishConditionQty) numVal = selectedFinishConditionQty;\n\n        if (isNaN((numVal)) || numVal < 0) numVal = 0;\n\n        setQuantityToSell(numVal);\n    };\n\n    const handleSelectedFinishCondition = (e, { value }) => {\n        setSelectedFinish(value.split('_')[0]);\n        setSelectedFinishCondition(value);\n        setSelectedFinishConditionQty(props.qoh[value]);\n        setQuantityToSell(0);\n    };\n\n    const handlePriceChange = (e, { value }) => {\n        if (value === '') {\n            setPrice('');\n            return;\n        }\n\n        let numVal = Number(value);\n\n        if (isNaN((numVal)) || numVal < 0) { numVal = 0; }\n\n        setPrice(numVal);\n    };\n\n    const handleAddToSale = () => {\n        const { qoh, id } = props;\n\n        addToSaleList(\n            { ...props },\n            selectedFinishCondition,\n            quantityToSell,\n            price\n        );\n\n        // Reset state\n        setSelectedFinishCondition('')\n        setSelectedFinishConditionQty(0)\n        setQuantityToSell(0)\n        setPrice(0)\n        setConditionOptions(createConditionOptions(qoh, id))\n        setSelectedFinish(createInitialSelectedFinish(qoh))\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    return <Segment>\n        <Item.Group divided>\n            <Item>\n                <Item.Image size=\"tiny\">\n                    <CardImage\n                        image_uris={props.image_uris}\n                        card_faces={props.card_faces}\n                    />\n                </Item.Image>\n                <Item.Content>\n                    <Item.Header as=\"h3\">\n                        {props.name}{' '}\n                        <i\n                            className={`ss ss-fw ss-${props.set} ss-${props.rarity}`}\n                            style={{ fontSize: '30px' }}\n                        />\n                        <Label color=\"grey\">\n                            {props.set_name} ({String(props.set).toUpperCase()})\n                                </Label>\n                        <QohLabels inventoryQty={props.qoh} />\n                        {' '}\n                        <MarketPrice id={props.id} finish={selectedFinish} />\n                        <Language languageCode={props.lang} />\n                    </Item.Header>\n                    <Item.Description>\n                        <Form>\n                            <Form.Group>\n                                <Form.Field\n                                    className=\"finish-condition\"\n                                    control={Dropdown}\n                                    selection\n                                    placeholder=\"Select inventory\"\n                                    options={conditionOptions}\n                                    value={selectedFinishCondition}\n                                    label=\"Select finish/condition\"\n                                    onChange={handleSelectedFinishCondition}\n                                />\n                                <Form.Field\n                                    className=\"sale-qty\"\n                                    control={Input}\n                                    type=\"number\"\n                                    label=\"Quantity to sell\"\n                                    value={quantityToSell}\n                                    onChange={handleQuantityChange}\n                                    disabled={!selectedFinishConditionQty}\n                                    onFocus={e => e.target.select()}\n                                />\n                                <Form.Field\n                                    className=\"sale-price\"\n                                    control={Input}\n                                    type=\"number\"\n                                    label=\"Price\"\n                                    value={price}\n                                    onChange={handlePriceChange}\n                                    disabled={!selectedFinishConditionQty}\n                                    onFocus={e => e.target.select()}\n                                    step={0.5}\n                                />\n                                <Form.Button\n                                    className=\"add-to-sale\"\n                                    label=\"Add to sale?\"\n                                    control={Button}\n                                    primary\n                                    onClick={handleAddToSale}\n                                    disabled={!quantityToSell}\n                                >\n                                    Sell\n                                    </Form.Button>\n                            </Form.Group>\n                        </Form>\n                    </Item.Description>\n                </Item.Content>\n            </Item>\n        </Item.Group>\n    </Segment>\n}\n","import React from 'react';\nimport BrowseCardItem from './BrowseCardItem';\nimport { Segment, Header, Icon } from 'semantic-ui-react';\n\nexport default function BrowseCardList({ term, cards }) {\n    // Creates text to notify the user of zero-result searches\n    const searchNotification = () => {\n        if (term && !cards.length) { // Check to make sure the user has searched and no results\n            return <p>Zero results for <em>{term}</em></p>\n        }\n        return <p>Search for inventory to sell</p>\n    }\n\n    if (cards.length === 0) {\n        return <Segment placeholder>\n            <Header icon>\n                <Icon name=\"search\" />\n                <span>{searchNotification()}</span>\n            </Header>\n        </Segment>\n    }\n\n    return cards.map(card => {\n        return <BrowseCardItem\n            key={card.id}\n            {...card}\n            qoh={card.qoh}\n        />\n    });\n}\n","import React from 'react';\n\nconst Price = ({ num }) => {\n    const price = Number(num).toFixed(2);\n    if (isNaN(price)) return <span>$0.00</span>;\n    return <span>${price}</span>;\n};\n\nexport default Price;\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nexport default function TooltipImage({ image_uri, posX = 0 }) {\n    return (\n        <div style={{ // We use the style prop over styled-components because it renders much faster!\n            position: 'absolute',\n            left: `${posX}px`,\n            width: '150px', // Width of the image when size=\"small\"\n            height: '209px', // Height of the image when size=\"small\"\n            borderRadius: '7px 7px 7px 7px',\n            boxShadow: '2px 2px 5px 0 rgba(0, 0, 0, 0.25)',\n            background: 'repeating-linear-gradient(45deg, #bfbfbf, #bfbfbf 10px, #b0b0b0 10px, #b0b0b0 20px)',\n            zIndex: '5000'\n        }}>\n            <Image\n                style={{ borderRadius: '7px 7px 7px 7px' }}\n                size=\"small\"\n                src={image_uri}\n            />\n        </div>\n    )\n}","import React, { useState, useContext } from 'react';\nimport { Button, Label, Table } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { SaleContext } from '../context/SaleContext';\nimport Price from '../common/Price';\nimport TooltipImage from '../common/TooltipImage';\n\nconst BoldHelp = styled.b`\n    cursor: help;\n`;\n\nexport default function SaleLineItem({ display_name, set, finishCondition, qtyToSell, price, rarity, id, cardImage }) {\n    const [hovered, setHovered] = useState(false);\n    const [mouseInside, setMouseInside] = useState(false);\n    const [mousePos, setMousePos] = useState({});\n    const { removeFromSaleList } = useContext(SaleContext);\n\n    const mouseEnter = e => {\n        const rect = e.target.getBoundingClientRect();\n        const X = Math.round(e.clientX - rect.x) + 30;\n        setMouseInside(true);\n        setMousePos({ X });\n    }\n\n    const mouseMove = e => {\n        const rect = e.target.getBoundingClientRect();\n        const X = Math.round(e.clientX - rect.x) + 30;\n        setMousePos({ X });\n    }\n\n    const mouseLeave = e => setMouseInside(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell><h4 className=\"line-item-title\">\n                <BoldHelp\n                    onMouseEnter={mouseEnter}\n                    onMouseMove={mouseMove}\n                    onMouseLeave={mouseLeave}\n                >\n                    {display_name}\n                    {mouseInside && <TooltipImage image_uri={cardImage} posX={mousePos.X} />}\n                </BoldHelp>\n            </h4></Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                <div className=\"line-item-price\">\n                    {qtyToSell}x @ <Price num={price} /> | {finishCondition}\n                </div>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => removeFromSaleList(id, finishCondition)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}\n","import React from 'react';\nimport Price from '../common/Price';\n\nconst SalePriceTotal = ({ saleList }) => {\n    const total = saleList.length\n        ? saleList.reduce(\n            (acc, val) => acc + parseInt(val.qtyToSell) * Number(val.price),\n            0\n        )\n        : 0;\n\n    return <div id=\"sale-price-total\"><Price num={total} /></div>\n};\n\nexport default SalePriceTotal;\n","import React, { useState, useContext } from 'react';\nimport { Modal, Button, Header, Icon } from 'semantic-ui-react';\nimport { SaleContext } from '../context/SaleContext';\n\nexport default function FinishSale() {\n    const [submit, setSubmit] = useState({ loading: false, disabled: false });\n    const [showModal, setShowModal] = useState(false);\n    const { finalizeSale } = useContext(SaleContext);\n\n    const handleFinalizeSale = async () => {\n        setSubmit({ loading: true, disabled: true });\n        await finalizeSale();\n    }\n\n    const modalTrigger = <Button floated=\"right\" primary\n        onClick={() => setShowModal(true)}>\n        Finalize sale\n        </Button>\n\n    return <Modal\n        basic\n        open={showModal}\n        trigger={modalTrigger}>\n        <Modal.Content>\n            <Header inverted as=\"h2\">\n                Finalize this sale?\n             </Header>\n            <p>\n                Click 'Yes' to create a sale\n                in Lightspeed. Ensure that\n                you have all cards pulled and double-checked\n                the customer list. Undoing this action will require manual data entry!\n             </p>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button\n                basic\n                color=\"red\"\n                inverted\n                onClick={() => setShowModal(false)}>\n                <Icon name=\"remove\" /> No\n             </Button>\n            <Button\n                color=\"green\"\n                inverted\n                onClick={handleFinalizeSale}\n                loading={submit.loading}\n                disabled={submit.disabled}>\n                <Icon name=\"checkmark\" /> Yes\n            </Button>\n        </Modal.Actions>\n    </Modal>\n}","import React from 'react';\nimport SaleLineItem from './SaleLineItem';\nimport { Table, Segment, Header, Icon } from 'semantic-ui-react';\nimport SalePriceTotal from './SalePriceTotal';\nimport FinishSale from './FinishSale';\n\nexport default function CustomerSaleList({ saleList }) {\n    if (saleList.length === 0) {\n        return <Segment placeholder>\n            <Header icon>\n                <Icon name=\"plus\" />\n                    View and manage customer sale list here\n            </Header>\n        </Segment>\n    }\n\n    return <React.Fragment>\n        <Table>\n            <Table.Body>\n                {saleList.map(card => {\n                    return <SaleLineItem\n                        {...card}\n                        key={`${card.id}${card.finishCondition}${card.qtyToSell}`}\n                    />\n                })}\n            </Table.Body>\n        </Table>\n\n        <Segment clearing>\n            <Header floated=\"left\">\n                <Header sub>Subtotal</Header>\n                <SalePriceTotal saleList={saleList} />\n            </Header>\n            <FinishSale />\n        </Segment>\n    </React.Fragment>\n};","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport Price from '../common/Price';\nimport './PrintList.css';\nimport SalePriceTotal from './SalePriceTotal';\n\nconst Row = ({ id, display_name, qtyToSell, finishCondition, set_name, price }) => {\n    return <li key={id}>\n        <b>{display_name} | x{qtyToSell} | {finishCondition} | {set_name} | <Price num={price} /></b>\n    </li>\n}\n\nexport default class PrintList extends React.Component {\n    state = { printClicked: false }\n\n    print = () => {\n        this.setState({ printClicked: true }, () => {\n            window.print();\n            this.setState({ printClicked: false })\n        });\n    }\n\n    render() {\n        const { saleListCards } = this.props;\n        const { printClicked } = this.state;\n\n        if (saleListCards.length > 0) { // Ensure print is hidden if no cards in list\n            return (\n                <React.Fragment>\n                    <Button style={{ display: 'inline-block', float: 'right' }} onClick={this.print} icon>\n                        <Icon name=\"print\" />\n                    </Button>\n\n                    <div id=\"printme\" style={{ display: printClicked ? 'inline-block' : 'none' }}>\n                        <ul>{saleListCards.map(c => Row(c))}</ul>\n                        <span><b>Subtotal: <SalePriceTotal saleList={saleListCards} /></b></span>\n                    </div>\n                </React.Fragment >\n            )\n        } else {\n            return null;\n        }\n    }\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SUSPEND_SALE } from '../utils/api_resources';\nimport { Modal, Button, Grid, Form, Message } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst Divider = styled.div`\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n    height: 100%;\n`;\n\nconst ClearMargin = styled.div`\n    margin-top: 0px;\n    margin-bottom: 0px;\n`;\n\nconst CharLimit = styled.p`\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.2);\n    float: right;\n`;\n\nexport default function SuspendedSale({ restoreSale, deleteSuspendedSale, saleListLength, suspendSale, id }) {\n    const [sales, setSales] = useState([]);\n    const [saleID, setSaleID] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [customerName, setCustomerName] = useState('');\n    const [notes, setNotes] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const [loadingBtn, setLoadingBtn] = useState({\n        suspendBtn: false,\n        restoreBtn: false,\n        deleteBtn: false\n    });\n\n    const getSales = async () => {\n        const { data } = await axios.get(SUSPEND_SALE);\n        setSales(data);\n    }\n\n    const clearFields = () => {\n        setCustomerName('');\n        setNotes('')\n        setSaleID('');\n    }\n\n    // Get the previously suspended sales on mount and parent state (_id) change\n    useEffect(() => { getSales(); }, [id]); // If the parent-level suspended-sale _id changes, we fetch again\n\n    const modalTrigger = <Button\n        id=\"suspend-sale-btn\"\n        style={{ display: 'inline-block', float: 'right' }}\n        onClick={() => setModalOpen(true)}\n        icon=\"ellipsis horizontal\" />\n\n    const submitSuspendSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ suspendBtn: true });\n        await suspendSale({ customerName, notes });\n        setModalOpen(false); // Close the modal to avoid \"flicker\" when state re-renders\n        await getSales(); // Parent _id does not change, re-fetch sales\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ suspendBtn: false });\n    }\n\n    const submitRestoreSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ restoreBtn: true });\n        await restoreSale(saleID);\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ restoreBtn: false });\n    }\n\n    const submitDeleteSale = async () => {\n        setDisabled(true);\n        setLoadingBtn({ deleteBtn: true });\n        await deleteSuspendedSale();\n        setModalOpen(false);\n        clearFields();\n        setDisabled(false);\n        setLoadingBtn({ deleteBtn: false });\n    }\n\n    return <React.Fragment>\n        <Modal trigger={modalTrigger} open={modalOpen}>\n            <Modal.Header>Sales menu</Modal.Header>\n            <Modal.Content>\n                <Grid columns={2} stackable relaxed=\"very\">\n                    {saleListLength > 0 && <React.Fragment>\n                        <Grid.Column width=\"7\">\n                            <h3>Suspend Sale</h3>\n                            <Form>\n                                <ClearMargin>\n                                    <Form.Input\n                                        id=\"suspend-sale-name\"\n                                        label=\"Customer Name\"\n                                        placeholder=\"Jace, the Mind Sculptor\"\n                                        value={customerName}\n                                        onChange={(e, { value }) => setCustomerName(value.substring(0, 50))} />\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <CharLimit>{customerName.length}/50</CharLimit>\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <Form.TextArea\n                                        label=\"Notes\"\n                                        placeholder=\"Sometimes, I forget things...\"\n                                        value={notes}\n                                        onChange={(e, { value }) => setNotes(value.substring(0, 150))} />\n                                </ClearMargin>\n                                <ClearMargin>\n                                    <CharLimit>{notes.length}/150</CharLimit>\n                                </ClearMargin>\n                                <Form.Button\n                                    id=\"suspend-sale-submit\"\n                                    primary disabled={disabled || !customerName}\n                                    loading={loadingBtn.suspendBtn}\n                                    onClick={submitSuspendSale}>\n                                    Suspend Sale\n                                </Form.Button>\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column width=\"1\"><Divider /></Grid.Column>\n                    </React.Fragment>}\n                    <Grid.Column width=\"7\">\n                        <h3>Restore Sale</h3>\n                        {sales.length > 0 && <React.Fragment>\n                            <Form>\n                                <Form.Select\n                                    fluid\n                                    label=\"Previously suspended sales\"\n                                    options={sales.map(s => {\n                                        return {\n                                            key: s._id,\n                                            text: s.name,\n                                            value: s._id\n                                        }\n                                    })}\n                                    placeholder=\"Select a sale\"\n                                    onChange={(e, { value }) => setSaleID(value)}\n                                />\n                                <Form.Button primary disabled={disabled || !saleID} loading={loadingBtn.restoreBtn} onClick={submitRestoreSale}>Restore Sale</Form.Button>\n                            </Form>\n                        </React.Fragment>}\n                        {sales.length === 0 && <Message info>\n                            <Message.Header>No sales</Message.Header>\n                            Suspend a sale first\n                        </Message>}\n                    </Grid.Column>\n                </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n                {!!id && <Button color=\"red\" disabled={disabled} loading={loadingBtn.deleteBtn} onClick={submitDeleteSale}>Delete current Sale</Button>}\n                <Button primary disabled={disabled} onClick={() => setModalOpen(false)}>Cancel</Button>\n            </Modal.Actions>\n        </Modal>\n    </React.Fragment >\n}","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\nexport default function TotalCardsLabel({ listLength }) {\n    const displayStr = listLength > 1 ? 'cards' : 'card';\n\n    if (listLength > 0) {\n        return <Label color='grey'>{listLength} {displayStr}</Label>\n    }\n\n    return null;\n}\n\n/**\n * Cards in the Sale List need to be looped and counted\n * Receiving's list is one per line, so it's more straightforward there\n *\n * @param {Array} saleListCards - The Sale List cards\n */\nexport function findSaleCardsQty(saleListCards) {\n    return saleListCards.reduce((acc, curr) => acc + curr.qtyToSell, 0);\n}","import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { Grid, Header, Divider } from 'semantic-ui-react';\nimport { GET_CARDS_WITH_INFO } from '../utils/api_resources';\nimport SearchBar from '../common/SearchBar';\nimport BrowseCardList from './BrowseCardList';\nimport CustomerSaleList from './CustomerSaleList';\nimport PrintList from './PrintList';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport SuspendedSale from './SuspendedSale';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport { SaleContext } from '../context/SaleContext';\nimport TotalCardsLabel, { findSaleCardsQty } from '../common/TotalCardsLabel';\n\nexport default function Sale() {\n    const {\n        saleListCards,\n        suspendedSale,\n        restoreSale,\n        deleteSuspendedSale,\n        suspendSale,\n        resetSaleState\n    } = useContext(SaleContext);\n\n    const [searchResults, setSearchResults] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const resetState = () => {\n        setSearchResults([]);\n        setSearchTerm('');\n        resetSaleState();\n    };\n\n    const handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: true },\n                headers: makeAuthHeader()\n            });\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            setSearchResults(modeledData);\n            setSearchTerm(term);\n\n            if (data.length === 0) { $('#searchBar').focus().select() }\n        } catch (e) {\n            console.log(e.response);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                <SearchBar handleSearchSelect={handleResultSelect} />\n            </Grid.Row>\n            <br />\n            <Grid stackable={true}>\n                <Grid.Row>\n                    <Grid.Column width=\"11\">\n                        <Header as=\"h2\" style={{ display: \"inline-block\" }}>Inventory</Header>\n\n                        <Divider />\n\n                        <BrowseCardList term={searchTerm} cards={searchResults} />\n\n                    </Grid.Column>\n                    <Grid.Column width=\"5\">\n                        <Header as=\"h2\" style={{ display: 'inline-block' }} id=\"sale-header\">\n                            {suspendedSale.name === '' ? 'Sale Items' : `${suspendedSale.name}'s Items`}\n                            <TotalCardsLabel listLength={findSaleCardsQty(saleListCards)} />\n                        </Header>\n\n                        <SuspendedSale\n                            restoreSale={restoreSale}\n                            suspendSale={suspendSale}\n                            saleListLength={saleListCards.length}\n                            deleteSuspendedSale={deleteSuspendedSale}\n                            id={suspendedSale._id}\n                        />\n\n                        <PrintList saleListCards={saleListCards} />\n\n                        <Divider />\n\n                        <CustomerSaleList saleList={saleListCards} />\n                    </Grid.Column>\n                </Grid.Row >\n            </Grid >\n        </React.Fragment >\n    );\n}\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst SalesListItem = ({ saleData, cardList }) => {\n    const quantitySold = cardList.reduce(\n        (pre, curr) => pre + curr.qtyToSell,\n        0\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>{saleData.saleID}</Table.Cell>\n            <Table.Cell>\n                {moment(saleData.createTime).format('MM/DD/YYYY - h:mm A')}\n            </Table.Cell>\n            <Table.Cell>{quantitySold}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default SalesListItem;\n","import React from 'react';\nimport SalesListItem from './SalesListItem';\nimport { Table } from 'semantic-ui-react';\n\nconst SalesList = ({ list }) => {\n    return (\n        <Table celled unstackable compact>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Sale ID</Table.HeaderCell>\n                    <Table.HeaderCell>Date of Sale</Table.HeaderCell>\n                    <Table.HeaderCell>Quantity Sold</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {list.map(({ sale_data, card_list, _id }) => (\n                    <SalesListItem\n                        saleData={sale_data}\n                        cardList={card_list}\n                        key={_id}\n                    />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default SalesList;\n","import React, { Component } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport SalesList from './SalesList';\nimport axios from 'axios';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { GET_SALES_BY_TITLE } from '../utils/api_resources';\nimport { Header, Divider } from 'semantic-ui-react';\n\nclass BrowseSales extends Component {\n    state = { salesList: [], cardName: '' };\n\n    handleSearchSelect = async cardName => {\n        const { data } = await axios.get(GET_SALES_BY_TITLE, {\n            params: { cardName: cardName },\n            headers: makeAuthHeader()\n        });\n\n        this.setState({ salesList: data, cardName: cardName });\n    };\n\n    render() {\n        const { salesList, cardName } = this.state;\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n\n                <Header as=\"h2\">Browse Sales</Header>\n                <Divider />\n\n                <span>\n                    <em>\n                        {cardName !== '' && (\n                            <h4>\n                                {salesList.length} results for {cardName}\n                            </h4>\n                        )}\n                    </em>\n                </span>\n                <SalesList list={salesList} />\n            </div>\n        );\n    }\n}\n\nexport default BrowseSales;\n","import React from 'react';\nimport { Image, Label } from 'semantic-ui-react';\nimport MarketPrice from '../common/MarketPrice';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: inline-block;\n    margin: 10px 10px 10px 10px;\n`;\n\nconst InventoryWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5px;\n    background-color: rgba(0, 0, 0, 0.9);\n    border-radius: 10px 10px 10px 10px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n`;\n\nconst InventoryRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 5px;\n`;\n\nconst ImageWrapper = styled.div`\n    width: 300px;\n    height: 418.3px;\n    box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.25);\n    background: repeating-linear-gradient(\n        45deg,\n        #bfbfbf,\n        #bfbfbf 10px,\n        #b0b0b0 10px,\n        #b0b0b0 20px\n    );\n    border-radius: 15px;\n`;\n\nexport default function PublicCardItem({ card }) {\n    const { id, cardImage } = card;\n    const [foilQty, nonfoilQty] = card.qohParsed;\n\n    const displayFoil = (\n        <InventoryRow>\n            <Label color=\"blue\" image>\n                Foil<Label.Detail>{foilQty}</Label.Detail>\n            </Label>\n            <MarketPrice id={id} finish=\"FOIL\" round />\n        </InventoryRow>\n    );\n\n    const displayNonfoil = (\n        <InventoryRow>\n            <Label color=\"blue\" image>\n                Nonfoil<Label.Detail>{nonfoilQty}</Label.Detail>\n            </Label>\n            <MarketPrice id={id} round />\n        </InventoryRow>\n    );\n\n    return (\n        <React.Fragment>\n            <Wrapper>\n                <ImageWrapper>\n                    <Image\n                        src={cardImage}\n                        size=\"medium\"\n                        style={{ borderRadius: '15px' }}\n                    />\n                </ImageWrapper>\n                <InventoryWrapper>\n                    {foilQty > 0 ? displayFoil : null}\n                    {nonfoilQty > 0 ? displayNonfoil : null}\n                </InventoryWrapper>\n            </Wrapper>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport PublicCardItem from './PublicCardItem';\nimport { Grid } from 'semantic-ui-react';\n\nconst gridStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'space-evenly',\n    height: '100%'\n};\n\nexport default function PublicCardList({ cards }) {\n    return <Grid style={gridStyle} >\n        {cards.map(c =>\n            <PublicCardItem\n                key={c.id}\n                card={c}\n            />\n        )}\n    </ Grid>\n}\n","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Icon,\n    Divider,\n} from 'semantic-ui-react';\nimport SearchBar from '../common/SearchBar';\nimport PublicCardList from './PublicCardList';\nimport { GET_CARDS_WITH_INFO } from '../utils/api_resources';\nimport { InventoryCard } from '../utils/ScryfallCard';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    searchTerm: ''\n};\n\nexport default class PublicInventory extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: true }\n            });\n\n            const modeledData = data.map(c => new InventoryCard(c));\n\n            this.setState({ searchResults: modeledData, searchTerm: term });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            searchResults,\n            searchTerm\n        } = this.state;\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p><em>{searchTerm}</em> is out of stock</p>\n            }\n            return <p>Search for a card</p>; // Default text before search\n        }\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Column>\n                        <Header as=\"h2\">\n                            Inventory Search\n                            <Header.Subheader>\n                                <em>Card prices subject to change. Consult a Clubhouse employee for final estimates</em>\n                            </Header.Subheader>\n                        </Header>\n\n                        <Divider />\n\n                        {!searchResults.length &&\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"search\" />\n                                    <span>{searchNotification()}</span>\n                                </Header>\n                            </Segment>}\n\n                        <PublicCardList cards={searchResults} />\n                    </Grid.Column>\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport SearchBar from '../common/SearchBar';\nimport { GET_SET_NAMES } from '../utils/api_resources';\nimport axios from 'axios';\nimport { Form, Input, Select, Dropdown, Segment } from 'semantic-ui-react';\n\nconst formatDropdownOptions = [\n    { key: 'qw', value: \"\", text: \"None\" },\n    { key: 'we', value: \"standard\", text: \"Standard\" },\n    { key: 'er', value: \"future\", text: \"Future\" },\n    { key: 'rt', value: \"historic\", text: \"Historic\" },\n    { key: 'ty', value: \"pioneer\", text: \"Pioneer\" },\n    { key: 'yu', value: \"modern\", text: \"Modern\" },\n    { key: 'ui', value: \"legacy\", text: \"Legacy\" },\n    { key: 'io', value: \"pauper\", text: \"Pauper\" },\n    { key: 'op', value: \"vintage\", text: \"Vintage\" },\n    { key: 'as', value: \"penny\", text: \"Penny\" },\n    { key: 'sd', value: \"commander\", text: \"Commander\" },\n    { key: 'df', value: \"brawl\", text: \"Brawl\" },\n    { key: 'fg', value: \"duel\", text: \"Duel\" },\n    { key: 'gh', value: \"oldschool\", text: \"Oldschool\" }\n];\n\nconst priceFilterDropdownOptions = [\n    { key: 'gte', value: 'gte', text: '>=' },\n    { key: 'lte', value: 'lte', text: '<=' },\n    { key: 'gtx', value: 'gt', text: '>' },\n    { key: 'ltx', value: 'lt', text: '<' }\n];\n\nconst finishDropdownOptions = [\n    { key: 'nonfoil_foil', value: '', text: 'None' },\n    { key: 'nonfoil', value: 'NONFOIL', text: 'Nonfoil' },\n    { key: 'foil', value: 'FOIL', text: 'Foil' }\n];\n\nconst sortByDropdownOptions = [\n    { key: 'pricesort', value: 'price', text: 'Price' },\n    { key: 'alphasort', value: 'name', text: 'Card Name' }\n];\n\nconst sortByDirectionDropdownOptions = [\n    { key: 'descdirsort', value: 1, text: 'Ascending' },\n    { key: 'ascdirsort', value: -1, text: 'Descending' }\n];\n\nconst sortByColorDropdownOptions = [\n    { key: 'w', value: 'W', text: 'White' },\n    { key: 'u', value: 'U', text: 'Blue' },\n    { key: 'b', value: 'B', text: 'Black' },\n    { key: 'r', value: 'R', text: 'Red' },\n    { key: 'g', value: 'G', text: 'Green' }\n];\n\nconst typeLineOptions = [\n    { key: 'na', value: '', text: 'None' },\n    { key: 'artifact', value: 'Artifact', text: 'Artifact' },\n    { key: 'creature', value: 'Creature', text: 'Creature' },\n    { key: 'enchantment', value: 'Enchantment', text: 'Enchantment' },\n    { key: 'instant', value: 'Instant', text: 'Instant' },\n    { key: 'land', value: 'Land', text: 'Land' },\n    { key: 'planeswalker', value: 'Planeswalker', text: 'Planeswalker' },\n    { key: 'sorcery', value: 'Sorcery', text: 'Sorcery' },\n    { key: 'tribal', value: 'Tribal', text: 'Tribal' }\n];\n\nconst frameOptions = [\n    { key: 'na', value: '', text: 'None' },\n    { key: 'borderless', value: 'borderless', text: 'Borderless' },\n    { key: 'extendedArt', value: 'extendedArt', text: 'Extended Art' },\n    { key: 'extendedArt', value: 'showcase', text: 'Showcase' }\n];\n\nconst initialState = {\n    title: '',\n    setName: '',\n    format: '',\n    priceNum: '',\n    priceFilter: 'gte',\n    finish: '',\n    sortBy: 'price',\n    colorsArray: [],\n    sortByDirection: -1,\n    typeLine: '',\n    setNames: [],\n    frame: ''\n}\n\nexport default class DeckboxCloneForm extends React.Component {\n    state = { editionDropdownOptions: [], ...initialState };\n\n    handleSearchSelect = name => this.setState({ title: name });\n\n    // When the user blurs the search field, we need to re-set state. Otherwise it won't clear from handleSearchSelect()\n    handleSearchBlur = (e, d) => this.setState({ title: e.target.value });\n\n    handleChange = (e, { value }) => this.setState({ [e.target.name]: value });\n\n    handleDropdownChange = (e, data) => this.setState({ [data.name]: data.value });\n\n    async componentDidMount() {\n        const { data } = await axios.get(GET_SET_NAMES);\n        const setNameOptions = data.map((d, idx) => {\n            return { key: `set${idx}`, value: d, text: d };\n        })\n        const concatWithBlankOption = [{ key: 'snull', value: \"\", text: \"None\" }].concat(setNameOptions);\n        this.setState({ editionDropdownOptions: concatWithBlankOption });\n    }\n\n    render() {\n        const {\n            title,\n            setName,\n            format,\n            priceNum,\n            priceFilter,\n            finish,\n            sortBy,\n            sortByDirection,\n            colorsArray,\n            typeLine,\n            frame\n        } = this.state;\n\n        // Sort the colors here and concat prior to sending to the backend\n        const colors = colorsArray.sort().join('');\n\n        return (\n            <Segment>\n                <h3>Filters</h3>\n                <Form>\n                    <Form.Group widths=\"4\">\n                        <Form.Field>\n                            <label>Card Name</label>\n                            <SearchBar\n                                handleSearchSelect={this.handleSearchSelect}\n                                value={this.state.title}\n                                name=\"title\"\n                                onBlur={this.handleSearchBlur}\n                            />\n                        </Form.Field>\n                        <Form.Field\n                            control={Select}\n                            label=\"Format\"\n                            placeholder=\"Format\"\n                            options={formatDropdownOptions}\n                            name=\"format\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Edition\"\n                            placeholder=\"Edition\"\n                            search\n                            options={this.state.editionDropdownOptions}\n                            name=\"setName\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Finish\"\n                            placeholder=\"Finish\"\n                            options={finishDropdownOptions}\n                            name=\"finish\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n                    <Form.Group widths=\"4\">\n\n                        <Form.Field\n                            control={Select}\n                            multiple\n                            label=\"Colors\"\n                            placeholder=\"Colors\"\n                            options={sortByColorDropdownOptions}\n                            name=\"colorsArray\"\n                            onChange={this.handleDropdownChange}\n                        />\n\n                        <Form.Field\n                            control={Select}\n                            label=\"Type Line\"\n                            placeholder=\"Type Line\"\n                            options={typeLineOptions}\n                            name=\"typeLine\"\n                            onChange={this.handleDropdownChange} />\n\n                        <Form.Field\n                            control={Select}\n                            label=\"Frame Effects\"\n                            placeholder=\"Effect\"\n                            options={frameOptions}\n                            name=\"frame\"\n                            onChange={this.handleDropdownChange} />\n\n                        <Form.Field>\n                            <label>Price Filter</label>\n                            <Input\n                                label={<Dropdown\n                                    options={priceFilterDropdownOptions}\n                                    name=\"priceFilter\"\n                                    defaultValue=\"gte\"\n                                    onChange={this.handleDropdownChange}\n                                />}\n                                placeholder=\"Enter a price\"\n                                labelPosition=\"left\"\n                                name=\"priceNum\"\n                                type=\"number\"\n                                onChange={this.handleDropdownChange}\n                            />\n                        </Form.Field>\n                    </Form.Group>\n\n                    <h3>{\"Sort & Order\"}</h3>\n\n                    <Form.Group>\n                        <Form.Field\n                            control={Select}\n                            label=\"Sort By\"\n                            placeholder=\"\"\n                            options={sortByDropdownOptions}\n                            defaultValue='price'\n                            name=\"sortBy\"\n                            onChange={this.handleDropdownChange}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label=\"Order\"\n                            options={sortByDirectionDropdownOptions}\n                            defaultValue={-1}\n                            name=\"sortByDirection\"\n                            onChange={this.handleDropdownChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Button primary onClick={() => this.props.handleSubmit({\n                            title,\n                            setName,\n                            format,\n                            priceNum,\n                            priceFilter,\n                            finish,\n                            sortBy,\n                            sortByDirection,\n                            colors,\n                            type: typeLine,\n                            frame\n                        })}>Submit</Form.Button>\n                    </Form.Group>\n                </Form>\n            </Segment>\n        )\n    }\n}","import React from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\nimport Price from '../common/Price';\nimport TooltipImage from '../common/TooltipImage';\n\nconst conditionMap = {\n    NM: 'Near Mint',\n    LP: 'Light Play',\n    MP: 'Moderate Play',\n    HP: 'Heavy Play',\n};\n\nexport default class DeckboxCloneRow extends React.Component {\n    state = { mouseInside: false, mouseX: 0, mouseY: 0 };\n\n    mouseEnter = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseInside: true, mouseX, mouseY });\n    }\n\n    mouseLeave = (e) => this.setState({ mouseInside: false });\n\n    mouseMove = (e) => {\n        const mouseX = e.clientX - e.target.offsetLeft\n        const mouseY = e.clientY - e.target.offsetTop;\n        this.setState({ mouseX, mouseY });\n    };\n\n    render() {\n        const { inventory, name, set_name, price, set, rarity, image_uri } = this.props;\n        const { mouseInside, mouseX } = this.state;\n        const finish = inventory.k.split('_')[0];\n        const condition = inventory.k.split('_')[1];\n\n        return <Table.Row>\n            <Table.Cell>\n                <span\n                    onMouseEnter={this.mouseEnter}\n                    onMouseLeave={this.mouseLeave}\n                    onMouseMove={this.mouseMove}\n                    style={{ cursor: 'help' }}\n                >\n                    {name}{' '}\n                </span>\n                {finish === 'FOIL' && <Icon name=\"star\" color=\"blue\" />}\n                {mouseInside && <TooltipImage image_uri={image_uri} posX={mouseX} />}\n            </Table.Cell>\n            <Table.Cell><i className={`ss ss-fw ss-${set} ss-${rarity}`} style={{ fontSize: '20px' }} />{\" \"}{set_name}</Table.Cell>\n            <Table.Cell>{conditionMap[condition]}</Table.Cell>\n            <Table.Cell>{inventory.v}</Table.Cell>\n            <Table.Cell><Price num={price} /></Table.Cell>\n        </Table.Row>\n    }\n}","import React from 'react'\nimport { GET_CARDS_BY_FILTER } from '../utils/api_resources';\nimport DeckboxCloneForm from './DeckboxCloneForm';\nimport DeckboxCloneRow from './DeckboxCloneRow';\nimport axios from 'axios';\nimport { Table, Menu, Icon, Dimmer, Loader, Segment, Header, Container } from 'semantic-ui-react';\nimport _ from 'lodash';\nconst LIMIT = 100 // Matching the backend for now\n\nexport default class DeckboxClone extends React.Component {\n    state = {\n        data: [],\n        count: 0,\n        currentPage: 0,\n        numPages: 0,\n        pageArray: [],\n        isLoading: false,\n        cachedFilters: {},\n        showPages: [],\n        searchTouched: false // Tracks whether the user has initially searched for the 'no results' message\n    }\n\n    fetchData = async (filters, page) => {\n        try {\n            this.setState({ isLoading: true });\n\n            const { data } = await axios.get(GET_CARDS_BY_FILTER, {\n                params: { ...filters, page }\n            });\n\n            const numPages = Math.ceil(data.total / LIMIT);\n            const pages = _.range(1, numPages + 1);\n            let showPages;\n\n            // Logic that controls the visibility of page number links \n            // Default max number pages to display is 5\n            if (page <= 3) {\n                showPages = pages.slice(0, 5);\n            } else if (page >= numPages - 2) {\n                showPages = pages.slice(numPages - 5, numPages);\n            } else {\n                showPages = pages.slice(page - 2, page + 3);\n            }\n\n            this.setState({\n                data: data.cards,\n                count: data.total,\n                isLoading: false,\n                numPages: numPages,\n                currentPage: page,\n                showPages: showPages,\n                searchTouched: true\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    handleSubmit = async (filters) => {\n        this.setState({ cachedFilters: filters }); // Set the filters for pagination requests later\n        await this.fetchData(filters, 1); // On submit, starting page mut always be 1\n    }\n\n    handlePage = async (page) => {\n        await this.fetchData(this.state.cachedFilters, page)\n        this.setState({ currentPage: page });\n    };\n\n    render() {\n        const { data, isLoading, currentPage, numPages, count } = this.state;\n        const showLeftPageButtons = !(currentPage === 1);\n        const showRightPageButtons = !(currentPage === numPages);\n\n        return <Container>\n            <Dimmer active={isLoading} inverted page style={{ marginTop: '52.63px' }}>\n                <Loader size=\"large\">Loading</Loader>\n            </Dimmer>\n            <Segment secondary>\n                <Icon name=\"exclamation triangle\" color=\"blue\" />\n                Prices from this table are updated weekly and are subject to fluctuations. Consult 'New Sale' or 'Manage Inventory' for up-to-date values\n            </Segment>\n            <DeckboxCloneForm handleSubmit={this.handleSubmit} />\n\n            {!!data.length && <Table celled striped compact>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='5'>\n                            <Menu floated=\"left\">\n                                <Menu.Item>Viewing page {currentPage} of {numPages}</Menu.Item>\n                            </Menu>\n                            <Menu floated=\"right\">\n                                {showLeftPageButtons && <Menu.Item as=\"a\" icon onClick={() => this.handlePage(currentPage - 1)} >\n                                    <Icon name='chevron left' />\n                                </Menu.Item>}\n\n                                <React.Fragment>\n                                    {this.state.showPages.map(p => {\n                                        return (\n                                            <Menu.Item\n                                                key={`page-${p}`}\n                                                onClick={() => this.handlePage(p)}\n                                                active={currentPage === p}\n                                                disabled={currentPage === p}\n                                                as=\"a\">\n                                                {p}\n                                            </Menu.Item>\n                                        )\n                                    })}\n                                </React.Fragment>\n\n                                {showRightPageButtons && <Menu.Item as=\"a\" icon onClick={() => this.handlePage(currentPage + 1)}>\n                                    <Icon name='chevron right' />\n                                </Menu.Item>}\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Edition</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Qty</Table.HeaderCell>\n                        <Table.HeaderCell>Price</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {data.map(d => <DeckboxCloneRow {...d} key={`${d._id}${d.inventory.k}`} />)}\n                </Table.Body>\n\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan='5'>\n                            <Menu floated=\"left\">\n                                <Menu.Item>Total results: {count}</Menu.Item>\n                            </Menu>\n                            <Menu floated=\"right\">\n                                {showLeftPageButtons && <Menu.Item\n                                    as=\"a\"\n                                    icon\n                                    onClick={() => this.handlePage(currentPage - 1)}\n                                >\n                                    <Icon name='chevron left' />\n                                </Menu.Item>}\n\n                                <React.Fragment>\n                                    {this.state.showPages.map(p => {\n                                        return (\n                                            <Menu.Item\n                                                key={`page-${p}`}\n                                                onClick={() => this.handlePage(p)}\n                                                active={currentPage === p}\n                                                disabled={currentPage === p}\n                                                as=\"a\">\n                                                {p}\n                                            </Menu.Item>\n                                        )\n                                    })}\n                                </React.Fragment>\n\n                                {showRightPageButtons && <Menu.Item\n                                    as=\"a\"\n                                    icon\n                                    onClick={() => this.handlePage(currentPage + 1)}\n                                >\n                                    <Icon name='chevron right' />\n                                </Menu.Item>}\n                            </Menu>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>\n            </Table>}\n\n            {!data.length &&\n                <Segment placeholder>\n                    <Header icon>\n                        <Icon name=\"search\" />\n                        {this.state.searchTouched ?\n                            'No results found' :\n                            'Use the filters to browse inventory'\n                        }\n                    </Header>\n                </Segment>}\n        </Container>\n    }\n}","import React, { useState, useContext } from 'react';\nimport createToast from '../common/createToast';\nimport { Form, Button, Segment } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthProvider';\nimport styled from 'styled-components';\n\nconst LoginContainer = styled.div`\n    margin-top: 15px;\n    display: flex;\n    justify-content: center;\n`;\n\nconst FormContainer = styled(Segment)`\n    width: 400px;\n    padding: 25px 25px 25px 25px !important;\n`;\n\nconst initialState = { username: '', password: '', loading: false };\n\nexport default function Login() {\n    const [state, setState] = useState(initialState);\n    const { loggedIn, handleLogin } = useContext(AuthContext);\n\n    const handleInputChange = (e, { value }) => setState({ ...state, [e.target.name]: value });\n\n    const login = async () => {\n        setState({ loading: true });\n\n        const { authed } = await handleLogin(state.username, state.password);\n\n        if (authed) {\n            // Do not set state here to mitigate React setState warning after component unmounted due to redirect\n            createToast({\n                color: 'green',\n                header: 'Success',\n                message: `Enjoy your time here!`,\n            });\n        } else {\n            setState(initialState);\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Username or password was incorrect`,\n            });\n        }\n    };\n\n    if (loggedIn) return <Redirect to=\"/manage-inventory\" />\n\n    return <LoginContainer>\n        <FormContainer raised loading={state.loading}>\n            <Form>\n                <Form.Field>\n                    <Form.Input\n                        className=\"username-input\"\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        label=\"Username\"\n                        value={state.username || ''}\n                        onChange={handleInputChange}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <Form.Input\n                        className=\"password-input\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        value={state.password || ''}\n                        onChange={handleInputChange}\n                    />\n                </Form.Field>\n                <Button\n                    primary\n                    fluid\n                    floated=\"right\"\n                    type=\"submit\"\n                    onClick={login}\n                    className=\"login-btn\"\n                    disabled={!state.username || !state.password}>\n                    Submit\n            </Button>\n            </Form>\n        </FormContainer>\n    </LoginContainer>\n}\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthProvider';\n\nfunction Logout() {\n    const { handleLogout } = useContext(AuthContext);\n\n    handleLogout();\n\n    return <Redirect to=\"/login\" />\n};\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport uuid from 'uuid';\nimport axios from 'axios';\nimport createToast from '../common/createToast';\nimport makeAuthHeader from '../utils/makeAuthHeader';\nimport { InventoryCard } from '../utils/ScryfallCard';\nimport { GET_CARDS_WITH_INFO, RECEIVE_CARDS } from '../utils/api_resources';\n\nconst TRADE_TYPES = { CASH: 'CASH', CREDIT: 'CREDIT' }; // Customers can only receive cash or credit for their assets\n\n// Models the line item in the Receiving List and sets a unique UUID key on each\nclass LineItem extends InventoryCard {\n    constructor(cardProps) {\n        super(cardProps);\n\n        const { cashPrice, marketPrice, creditPrice } = cardProps;\n\n        this.cashPrice = cashPrice;\n        this.marketPrice = marketPrice;\n        this.creditPrice = creditPrice;\n        this.uuid_key = uuid();\n\n        if (creditPrice === 0) this.tradeType = TRADE_TYPES.CASH; // Set to cash if customer doesn't want credit\n        else this.tradeType = TRADE_TYPES.CREDIT; // Otherwise, default to credit\n    }\n}\n\nexport const ReceivingContext = React.createContext();\n\nexport function ReceivingProvider(props) {\n    const [searchResults, setSearchResults] = useState([]);\n    const [receivingList, setReceivingList] = useState([]);\n\n    /**\n     * Fetches cards from the DB by title when a user selects a title after querying.\n     * This function merges the data (inventory quantity and card objects) from two endpoints into one array.\n     * \n     * @param {String} term - the search term\n     */\n    const handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_WITH_INFO, {\n                params: { title: term, matchInStock: false },\n                headers: makeAuthHeader()\n            });\n\n            setSearchResults(data.map(d => new InventoryCard(d)));\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    /**\n     * Adds a card to the receiving list, with a unique uuid\n     */\n    const addToList = (quantity, cardProps) => {\n        const previousState = [...receivingList];\n\n        // Each line-item represents one card. Use _.times() to repeat\n        const newState = previousState.concat(_.times(quantity, () => new LineItem(cardProps)));\n\n        setReceivingList(_.sortBy(newState, 'name'));\n    }\n\n    /**\n     * Removes a card from the receiving list using the uuid\n     */\n    const removeFromList = uuid_key => {\n        const copiedState = [...receivingList];\n        _.remove(copiedState, e => e.uuid_key === uuid_key); // Mutates array\n        setReceivingList(copiedState);\n    }\n\n    /**\n     * Determines whether line-items use cash or credit. Changes the tradeType by reference in the receivingList array\n     * which changes the active prop in ReceivingListItem\n     */\n    const activeTradeType = (uuid_key, tradeType) => {\n        const previousState = [...receivingList];\n        const card = previousState.find(e => e.uuid_key === uuid_key);\n        card.tradeType = TRADE_TYPES[tradeType];\n        setReceivingList(previousState);\n    }\n\n    /**\n    * Sets all items to a tradeType, if possible\n    * \n    * @param {String} selectType - `CASH` or `CREDIT`\n    */\n    const selectAll = selectType => {\n        const oldState = [...receivingList];\n        const { CASH, CREDIT } = TRADE_TYPES;\n\n        oldState.forEach((card, idx, arr) => {\n            let selectedPrice = 0;\n\n            if (selectType === CASH) selectedPrice = card.cashPrice;\n            else if (selectType === CREDIT) selectedPrice = card.creditPrice;\n\n            if (selectedPrice > 0) arr[idx].tradeType = selectType;\n        })\n\n        setReceivingList(oldState);\n    }\n\n    /**\n     * Persists all passed cards to inventory\n     */\n    const commitToInventory = async () => {\n        try {\n            const cardsToCommit = receivingList.map(card => {\n                const { finishCondition, id, name, set_name, set } = card;\n                return { quantity: 1, finishCondition, id, name, set_name, set }; // Only committing one per line-item\n            })\n\n            await axios.post(RECEIVE_CARDS, { cards: cardsToCommit }, { headers: makeAuthHeader() });\n\n            setSearchResults([]);\n            setReceivingList([]);\n\n            createToast({\n                color: 'green',\n                header: `${receivingList.length} cards were added to inventory!`,\n                duration: 2000\n            });\n        } catch (e) {\n            console.log(e);\n            createToast({\n                color: 'red',\n                header: `Something went wrong...`,\n                duration: 2000\n            });\n        }\n    }\n\n    const resetSearchResults = () => setSearchResults([]);\n\n    return <ReceivingContext.Provider\n        value={{\n            searchResults,\n            receivingList,\n            handleSearchSelect,\n            addToList,\n            removeFromList,\n            activeTradeType,\n            selectAll,\n            commitToInventory,\n            resetSearchResults\n        }}>\n        {props.children}\n    </ReceivingContext.Provider>\n}","import React, { useState, useContext } from 'react';\nimport $ from 'jquery';\nimport { Segment, Input, Button, Form, Select, Label, Item } from 'semantic-ui-react';\nimport QohLabels from '../common/QohLabels';\nimport CardImage from '../common/CardImage';\nimport MarketPrice from '../common/MarketPrice'\nimport createToast from '../common/createToast';\nimport { ReceivingContext } from '../context/ReceivingContext';\nimport Language from '../common/Language';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n/**\n * Seeds state from props. Used to determine if cards have only foil, nonfoil, or both printings\n * from their `foil` and `nonfoil`\n * @param {Boolean} nonfoilProp\n * @param {Boolean} foilProp\n */\nfunction checkCardFinish(nonfoil, foil) {\n    if (!nonfoil && foil) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoil && !foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoil && foil) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default function ReceivingSearchItem(props) {\n    const [quantity, setQuantity] = useState(1);\n    const [cashPrice, setCashPrice] = useState(0);\n    const [creditPrice, setCreditPrice] = useState(0);\n    const [selectedCondition, setSelectedCondition] = useState('NM');\n    const [marketPrice, setMarketPrice] = useState(0);\n    const [selectedFinish, setSelectedFinish] = useState(\n        checkCardFinish(props.nonfoil, props.foil).selectedFinish // seed state from props\n    );\n\n    // Determines whether the select finish dropdown is permanently disabled, seeded from props\n    const finishDisabled = checkCardFinish(props.nonfoil, props.foil).finishDisabled;\n\n    const { addToList } = useContext(ReceivingContext);\n\n    const handleFinishChange = (e, { value }) => setSelectedFinish(value);\n\n    const handleConditionChange = (e, { value }) => setSelectedCondition(value);\n\n    // Validates/sanitizes user inputs by tracking the `name` attribute of the input element\n    const handlePriceChange = (e, { value }) => {\n        let val = Number(value) || 0;\n        if (val < 0) val = 0;\n\n        switch (e.target.name) {\n            case \"cashInput\":\n                setCashPrice(val);\n                break;\n            case \"marketPriceInput\":\n                setMarketPrice(val);\n                break;\n            case \"creditInput\":\n                setCreditPrice(val);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const handleQuantityChange = (e, { value }) => {\n        let val = parseInt(value, 10) || 0;\n        if (val < 0) val = 0; // cannot receive less than 0\n        if (val > 50) val = 50 // set max to 50 cards per single transaction\n        setQuantity(val);\n    };\n\n    const handleFocus = e => e.target.select();\n\n    const handleInventoryAdd = () => {\n        addToList(quantity, {\n            ...props,\n            cashPrice,\n            marketPrice,\n            creditPrice,\n            finishCondition: `${selectedFinish}_${selectedCondition}`, // ex. NONFOIL_NM\n        })\n\n        setQuantity(1);\n        setCashPrice(0);\n        setMarketPrice(0);\n        setCreditPrice(0);\n        setSelectedCondition('NM');\n        setSelectedFinish(checkCardFinish(props.nonfoil, props.foil).selectedFinish);\n\n        createToast({\n            color: 'green',\n            header: `${quantity}x ${props.name} added to buylist!`,\n            duration: 2000\n        });\n\n        // Highlight the input after successful card add\n        $('#searchBar').focus().select();\n    };\n\n    /**\n     * Determines whether the `Add` button should be disabled\n     */\n    const submitDisabled = () => {\n        const validateQty = quantity === 0 || quantity === '';\n        const validateTradeTypes = !cashPrice && !creditPrice;\n        const validateMarketPrice = marketPrice === 0 || marketPrice === '';\n\n        if (cashPrice > 0) {\n            return validateQty || validateTradeTypes || validateMarketPrice;\n        }\n\n        return validateQty || validateTradeTypes;\n    }\n\n    const {\n        image_uris,\n        name,\n        set_name,\n        set,\n        rarity,\n        card_faces,\n        id,\n        lang\n    } = props;\n\n    return (\n        <Segment>\n            <Item.Group divided>\n                <Item>\n                    <Item.Image size=\"small\">\n                        <CardImage\n                            image_uris={image_uris}\n                            card_faces={card_faces}\n                            hover={false}\n                        />\n                    </Item.Image>\n                    <Item.Content>\n                        <Item.Header as='h3'>\n                            {name}\n                            {' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                            <QohLabels inventoryQty={props.qoh} />\n                            {' '}\n                            <MarketPrice id={id} finish={selectedFinish} />\n                            <Language languageCode={lang} />\n                        </Item.Header>\n                        <Item.Description>\n                            <Form>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        control={Input}\n                                        type=\"number\"\n                                        label=\"Quantity\"\n                                        value={quantity}\n                                        onChange={handleQuantityChange}\n                                        onFocus={e => e.target.select()}\n                                        className=\"receiving-quantity\"\n                                    />\n                                    <Form.Field\n                                        label=\"Credit Price\"\n                                        name=\"creditInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={creditPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        step=\"0.25\"\n                                        className=\"receiving-credit\"\n                                    />\n                                    <Form.Field\n                                        label=\"Cash Price\"\n                                        name=\"cashInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={cashPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        step=\"0.25\"\n                                        className=\"receiving-cash\"\n                                    />\n                                    <Form.Field\n                                        label=\"Market Price\"\n                                        name=\"marketPriceInput\"\n                                        control={Input}\n                                        type=\"number\"\n                                        value={marketPrice}\n                                        onChange={handlePriceChange}\n                                        onFocus={handleFocus}\n                                        step=\"0.25\"\n                                        disabled={cashPrice === 0 || cashPrice === ''}\n                                        className=\"receiving-market\"\n                                    />\n                                </Form.Group>\n                                <Form.Group widths=\"12\">\n                                    <Form.Field\n                                        label=\"Finish\"\n                                        control={Select}\n                                        value={selectedFinish}\n                                        options={finishes}\n                                        disabled={finishDisabled}\n                                        onChange={handleFinishChange}\n                                    />\n                                    <Form.Field\n                                        label=\"Condition\"\n                                        control={Select}\n                                        value={selectedCondition}\n                                        options={cardConditions}\n                                        onChange={handleConditionChange}\n                                    />\n                                    <Form.Button\n                                        label=\"Add to List?\"\n                                        control={Button}\n                                        primary\n                                        disabled={submitDisabled()}\n                                        onClick={handleInventoryAdd}\n                                    >\n                                        Add\n                                    </Form.Button>\n                                </Form.Group>\n                            </Form>\n                        </Item.Description>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}","import React, { useContext } from 'react';\nimport ReceivingSearchItem from './ReceivingSearchItem';\nimport { ReceivingContext } from '../context/ReceivingContext';\n\nexport default function ReceivingCardList() {\n    const { searchResults } = useContext(ReceivingContext);\n\n    return searchResults.map(c => {\n        return <ReceivingSearchItem\n            key={c.id}\n            {...c}\n            qoh={c.qoh}\n        />\n    });\n}\n","import React from 'react';\nimport { Segment, Header, Icon } from 'semantic-ui-react';\n\nexport default function DefaultPlaceholder({ active, children }) {\n    return <React.Fragment>\n        {active &&\n            <Segment placeholder>\n                <Header icon>\n                    <Icon name=\"search\" />\n                    <em>{children}</em>\n                </Header>\n            </Segment>}\n    </React.Fragment>\n}","import React, { useState, useContext } from 'react';\nimport { Table, Button, Label, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport Price from '../common/Price';\nimport { ReceivingContext } from '../context/ReceivingContext';\nimport TooltipImage from '../common/TooltipImage';\n\nconst BoldHelp = styled.b`\n    cursor: help;\n`;\n\n// Defines whether it uses cash or credit for trade types\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListItem({ display_name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, tradeType, cardImage }) {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [hovered, setHovered] = useState(false);\n    const [mouseInside, setMouseInside] = useState(false);\n    const [mousePos, setMousePos] = useState({});\n    const { removeFromList, activeTradeType } = useContext(ReceivingContext);\n\n    const mouseEnter = e => {\n        const rect = e.target.getBoundingClientRect();\n        const X = Math.round(e.clientX - rect.x) + 30;\n        setMouseInside(true);\n        setMousePos({ X });\n    }\n\n    const mouseMove = e => {\n        const rect = e.target.getBoundingClientRect();\n        const X = Math.round(e.clientX - rect.x) + 30;\n        setMousePos({ X });\n    }\n\n    const mouseLeave = e => setMouseInside(false);\n\n    return (\n        <Table.Row>\n            <Table.Cell>\n                <BoldHelp\n                    onMouseEnter={mouseEnter}\n                    onMouseMove={mouseMove}\n                    onMouseLeave={mouseLeave}\n                >\n                    {display_name}\n                    {mouseInside && <TooltipImage image_uri={cardImage} posX={mousePos.X} />}\n                </BoldHelp>\n            </Table.Cell>\n            <Table.Cell singleLine>\n                <i\n                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                    style={{ fontSize: '20px' }}\n                />\n                <Label color=\"grey\">{set.toUpperCase()}</Label>\n            </Table.Cell>\n            <Table.Cell>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Cash <b><Price num={cashPrice} /></b>\n                </div>\n                <div style={{ whiteSpace: 'noWrap' }}>\n                    Credit <b><Price num={creditPrice} /></b>\n                </div>\n                <p>{finishCondition.split('_')[0]} | {finishCondition.split('_')[1]}</p>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CASH}\n                    color={tradeType === CASH ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CASH)}\n                    disabled={cashPrice === 0}\n                    icon\n                >\n                    <Icon name=\"dollar sign\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    active={tradeType === CREDIT}\n                    color={tradeType === CREDIT ? 'blue' : null}\n                    onClick={() => activeTradeType(uuid_key, CREDIT)}\n                    disabled={creditPrice === 0}\n                    icon\n                >\n                    <Icon name=\"credit card outline\"></Icon>\n                </Button>\n            </Table.Cell>\n            <Table.Cell>\n                <Button\n                    icon=\"cancel\"\n                    circular\n                    onClick={() => removeFromList(uuid_key)}\n                    onMouseOver={() => setHovered(true)}\n                    onMouseOut={() => setHovered(false)}\n                    color={hovered ? 'red' : null}\n                >\n                </Button>\n            </Table.Cell>\n        </Table.Row>\n    );\n}","import React from 'react';\nimport _ from 'lodash';\nimport Price from '../common/Price';\nimport { Table } from 'semantic-ui-react';\n\n// Am I crazy or is this logic really convoluted?\n// Perhaps look at this down the line for improvement...\nexport default function CashReport({ receivingList, closeCashModal }) {\n    // If id, cashPrice and marketPrice are the same, goes in one bucket\n    const countByPriceAndID = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            // Note: We're creating a unique uuid-esque comparator string based on:\n            // `id`, `cashPrice`, `marketPrice`, and `finishCondition`\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .groupBy(\"temp_uuid\")\n        .mapValues(val => val.length)\n        .value();\n\n    const uniqLineItems = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .map(c => {\n            return { ...c, temp_uuid: `${c.id}-${c.cashPrice}-${c.marketPrice}-${c.finishCondition}` }\n        })\n        .uniqBy('temp_uuid')\n        .value();\n\n    const mergedWithQty = uniqLineItems.map(c => {\n        return { ...c, tradeQty: countByPriceAndID[c.temp_uuid] } // Add a trade quantity referencing the previous count\n    });\n\n    const totalCashOut = _.chain(receivingList)\n        .filter(c => c.tradeType === 'CASH')\n        .sumBy(c => c.cashPrice)\n        .value();\n\n    return <React.Fragment>\n        <div id=\"cash-report\">\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan={6}>Employee Name:</Table.HeaderCell>\n                    </Table.Row>\n                    <Table.Row>\n                        <Table.HeaderCell>Card Name</Table.HeaderCell>\n                        <Table.HeaderCell>Market Value</Table.HeaderCell>\n                        <Table.HeaderCell>Condition</Table.HeaderCell>\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Offer</Table.HeaderCell>\n                        <Table.HeaderCell>Cash Out</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {mergedWithQty.map(c => {\n                        return <Table.Row key={c.temp_uuid}>\n                            <Table.Cell>{c.name}</Table.Cell>\n                            <Table.Cell><Price num={c.marketPrice} /></Table.Cell>\n                            <Table.Cell>{c.finishCondition}</Table.Cell>\n                            <Table.Cell>{c.tradeQty}</Table.Cell>\n                            <Table.Cell><Price num={c.cashPrice} /></Table.Cell>\n                            <Table.Cell><Price num={c.tradeQty * c.cashPrice} /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n                <Table.Footer>\n                    <Table.HeaderCell colSpan={6}>Total: <Price num={totalCashOut} /></Table.HeaderCell>\n                </Table.Footer>\n            </Table>\n        </div>\n    </React.Fragment>\n}","import React, { useState, useContext } from 'react';\nimport { Modal, Header, Button } from 'semantic-ui-react';\nimport { ReceivingContext } from '../context/ReceivingContext';\nimport Price from '../common/Price';\n\nexport default function ReceivingListModal({ cashTotal, creditTotal }) {\n    const [loading, setLoading] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n\n    const { receivingList, commitToInventory } = useContext(ReceivingContext);\n\n    const submitToInventory = async () => {\n        setLoading(true);\n        await commitToInventory();\n        setLoading(false);\n    }\n\n    return <Modal\n        closeOnDimmerClick={false}\n        trigger={\n            <Button\n                id=\"commit-to-inv\"\n                color=\"blue\"\n                disabled={receivingList.length === 0}\n                onClick={() => setShowModal(true)}>\n                Commit to inventory\n             </Button>\n        }\n        open={showModal}\n        onClose={() => setShowModal(false)}\n        basic style={{ marginTop: '50px' }} >\n        <Header>Confirm receipt of new inventory?</Header>\n        <Modal.Content>\n            <p><b>Pressing 'Submit' will commit the following items to inventory:</b></p>\n            <ul>\n                {receivingList.map(c => {\n                    return <li key={c.uuid_key}>{c.name} | {c.set_name}({c.set.toUpperCase()})</li>\n                })}\n            </ul>\n            <div>\n                <p><b>The customer is owed: </b></p>\n                <ul>\n                    {cashTotal > 0 ? <li><Price num={cashTotal} /> in cold, hard cash</li> : null}\n                    {creditTotal > 0 ? <li><Price num={creditTotal} /> in store credit</li> : null}\n                </ul>\n            </div>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button basic color=\"red\" inverted onClick={() => setShowModal(false)}>Cancel</Button>\n            <Button\n                id=\"submit-to-inv\"\n                color=\"green\"\n                inverted\n                loading={loading}\n                disabled={loading}\n                onClick={submitToInventory}\n            >Submit</Button>\n        </Modal.Actions>\n    </Modal>\n}","import React, { useState, useContext } from 'react';\nimport { Segment, Statistic, Button, Modal } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport Price from '../common/Price';\nimport CashReport from './CashReport';\nimport printCashReport from './printCashReport';\nimport ReceivingListModal from './ReceivingListModal';\nimport { ReceivingContext } from '../context/ReceivingContext';\n\nconst FlexRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst FlexCol = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 100px;\n`;\n\nconst StatisticColor = styled(Statistic.Label)`\n    color: gray !important;\n`;\n\nconst TRADE_TYPE = { CASH: 'CASH', CREDIT: 'CREDIT' };\n\nexport default function ReceivingListTotals() {\n    const { CASH, CREDIT } = TRADE_TYPE;\n    const [showCashModal, setShowCashModal] = useState(false);\n    const { receivingList, selectAll } = useContext(ReceivingContext);\n\n    const openCashModal = () => setShowCashModal(true);\n    const closeCashModal = () => setShowCashModal(false);\n\n    const handlePrintCashReport = () => {\n        setShowCashModal(false); // Close the modal so users don't have to after printing in new tab\n        printCashReport();\n    }\n\n    const cashTotal = receivingList.reduce((acc, curr) => {\n        let cashVal = curr.tradeType === CASH ? curr.cashPrice : 0;\n        return acc + cashVal;\n    }, 0);\n\n    const creditTotal = receivingList.reduce((acc, curr) => {\n        let creditVal = curr.tradeType === CREDIT ? curr.creditPrice : 0;\n        return acc + creditVal;\n    }, 0);\n\n    return <Segment>\n        <FlexRow>\n            <FlexCol>\n                <Button.Group>\n                    <Button id=\"select-all-cash\" onClick={() => selectAll(TRADE_TYPE.CASH)}>Select all cash</Button>\n                    <Button.Or />\n                    <Button id=\"select-all-credit\" onClick={() => selectAll(TRADE_TYPE.CREDIT)}>Select all credit</Button>\n                </Button.Group>\n                <Modal\n                    open={showCashModal}\n                    trigger={\n                        <Button\n                            color={cashTotal > 0 ? 'green' : null}\n                            disabled={cashTotal === 0}\n                            onClick={openCashModal}>\n                            Generate cash report\n                    </Button>\n                    }>\n                    <Modal.Content>\n                        <CashReport\n                            receivingList={receivingList}\n                            closeCashModal={closeCashModal} />\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button onClick={handlePrintCashReport} color=\"blue\">Print Report</Button>\n                        <Button onClick={closeCashModal}>Cancel</Button>\n                    </Modal.Actions>\n                </Modal>\n            </FlexCol>\n            <FlexCol>\n                <Segment>\n                    <div>\n                        <Statistic size=\"mini\">\n                            <StatisticColor>Cash Due</StatisticColor>\n                            <Statistic.Value id=\"cash-total\"><Price num={cashTotal} /></Statistic.Value>\n                        </Statistic>\n                        <Statistic size=\"mini\">\n                            <StatisticColor>Credit Due</StatisticColor>\n                            <Statistic.Value id=\"credit-total\"><Price num={creditTotal} /></Statistic.Value>\n                        </Statistic>\n                    </div>\n                    <ReceivingListModal\n                        cashTotal={cashTotal}\n                        creditTotal={creditTotal}\n                    />\n                </Segment>\n            </FlexCol>\n        </FlexRow>\n\n    </Segment>\n}","const printStyle = `\n    body {\n        font-family: 'helvetica neue', helvetica, arial, sans-serif;\n    }\n\n    table {\n        table-layout: fixed;\n        width: 100%;\n        border-collapse: collapse;\n        border: 1px solid gray;\n        text-align: left;\n    }\n\n    thead th:nth-child(1) {\n        width: 30%;\n    }\n\n    thead th:nth-child(2) {\n        width: 20%;\n    }\n\n    thead th:nth-child(3) {\n        width: 15%;\n    }\n\n    thead th:nth-child(4) {\n        width: 35%;\n    }\n\n    th, td {\n        border: 1px solid #ddd;\n        padding: 10px;\n    }\n\n    tfoot {\n        text-align: right !important;\n    }\n`;\n\n/**\n     * We're creating a new tab here for the modal table and writing CSS to it - not the most elegant solution from a UX and\n     * code standpoint, but time was of the essence for this release. Refactor down the road.\n     * \n     * The id cash-report is found on the cash report table\n     */\nexport default function printCashReport() {\n    const divToPrint = document.getElementById('cash-report');\n    const popup = window.open('', '_blank');\n    popup.document.open();\n    popup.document.write(`<html>`);\n    popup.document.write(`<head>`);\n    popup.document.write(`<title>Cash Report</title>`)\n    popup.document.write(`<style>${printStyle}</style>`);\n    popup.document.write(`</head>`);\n    popup.document.write(`<body onload=\"window.print()\">`);\n    popup.document.write(`${divToPrint.innerHTML}`);\n    popup.document.write(`</body>`);\n    popup.document.write(`</html>`);\n    popup.document.close();\n}","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport ReceivingListItem from './ReceivingListItem';\nimport ReceivingListTotals from './ReceivingListTotals';\n\nexport default function ReceivingList({ cards }) {\n    return <React.Fragment>\n        {cards.length > 0 && <Table compact size=\"small\">\n            <Table.Body className='receiving-list-table'>\n                {cards.map(card => {\n                    const { name, display_name, set, rarity, cashPrice, creditPrice, finishCondition, uuid_key, tradeType, qoh, cardImage } = card;\n                    return <ReceivingListItem\n                        name={name}\n                        display_name={display_name}\n                        set={set}\n                        rarity={rarity}\n                        cashPrice={cashPrice}\n                        creditPrice={creditPrice}\n                        finishCondition={finishCondition}\n                        uuid_key={uuid_key}\n                        tradeType={tradeType}\n                        qoh={qoh}\n                        key={uuid_key}\n                        cardImage={cardImage}\n                    />\n                })}\n            </Table.Body>\n        </Table>}\n\n        {cards.length > 0 && <ReceivingListTotals />}\n    </React.Fragment>\n}","import React, { useContext, useEffect } from 'react';\nimport SearchBar from '../common/SearchBar';\nimport ReceivingSearchList from './ReceivingSearchList';\nimport { Header, Grid, Divider } from 'semantic-ui-react'\nimport { ReceivingContext } from '../context/ReceivingContext';\nimport DefaultPlaceholder from './DefaultPlaceholder';\nimport ReceivingList from './ReceivingList';\nimport TotalCardsLabel from '../common/TotalCardsLabel';\n\nexport default function Receiving() {\n    const {\n        searchResults,\n        receivingList,\n        handleSearchSelect,\n        resetSearchResults\n    } = useContext(ReceivingContext);\n\n    // Reset the search results on componentDidUnmount to clear store\n    useEffect(() => {\n        return () => resetSearchResults()\n    }, [])\n\n    return <React.Fragment>\n        <SearchBar handleSearchSelect={handleSearchSelect} />\n        <br />\n        <Grid stackable={true}>\n            <Grid.Row>\n                <Grid.Column width=\"10\">\n                    <Header as=\"h2\" style={{ display: \"inline-block\" }}>Card Search</Header>\n\n                    <Divider />\n\n                    <DefaultPlaceholder active={!searchResults.length}>\n                        \"So many cards, so little time.\"\n                    </DefaultPlaceholder>\n\n                    <ReceivingSearchList />\n                </Grid.Column>\n                <Grid.Column width=\"6\">\n                    <Header as=\"h2\" style={{ display: \"inline-block\" }}>\n                        Buylist\n                        <TotalCardsLabel listLength={receivingList.length} />\n                    </Header>\n\n                    <Divider />\n\n                    <DefaultPlaceholder active={!receivingList.length}>\n                        \"If you receive it, they will come.\"\n                     </DefaultPlaceholder>\n\n                    <ReceivingList cards={receivingList} />\n\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    </React.Fragment>\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { GET_ALL_SALES } from '../utils/api_resources';\nimport { Segment, Icon, Grid } from 'semantic-ui-react';\nimport Highcharts from 'highcharts';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nexport default function Reports() {\n    // const [salesData, setSalesData] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n\n            const { data } = await axios.get(GET_ALL_SALES);\n            const { sales_data, format_legalities } = data;\n\n            const groupByDay = _.groupBy(sales_data, d => moment(d.sale_data.timeStamp).startOf('day').format());\n\n            const dailySalesTotals = {};\n            const dailyAverageSales = {};\n            const rangeBuckets = {\n                0: 0, // $0.50 to $0.99\n                1: 0, // $1.00 to $4.99 \n                2: 0, // $5.00 to $9.99\n                3: 0, // $10.00 to $19.99\n                4: 0, // $20.00 to $49.99\n                5: 0, // $50.00 and above\n            };\n            const rarityCounts = {};\n\n            // Create daily sales totals\n            _.forOwn(groupByDay, (val, key) => {\n                dailySalesTotals[key] = val.reduce((acc, curr) => acc + curr.sale_data.total, 0);\n            });\n\n            // Create average sales totals\n            _.forOwn(groupByDay, (val, key) => {\n                dailyAverageSales[key] = val.reduce((acc, curr) => acc + curr.sale_data.total, 0) / val.length;\n            });\n\n            // Create range buckets for card prices\n            const cards = [];\n            sales_data.forEach(d => cards.push(...d.card_list));\n            cards.forEach(c => {\n                if (c.price >= 0.5 && c.price < 1) rangeBuckets[0] += c.qtyToSell;\n                if (c.price >= 1 && c.price < 5) rangeBuckets[1] += c.qtyToSell;\n                if (c.price >= 5 && c.price < 10) rangeBuckets[2] += c.qtyToSell;\n                if (c.price >= 10 && c.price < 20) rangeBuckets[3] += c.qtyToSell;\n                if (c.price >= 20 && c.price < 50) rangeBuckets[4] += c.qtyToSell;\n                if (c.price >= 50) rangeBuckets[5] += c.qtyToSell;\n            });\n\n            // Create rarity sales counts\n            cards.forEach(c => {\n                if (rarityCounts[c.rarity]) {\n                    rarityCounts[c.rarity] += c.qtyToSell\n                } else {\n                    rarityCounts[c.rarity] = c.qtyToSell;\n                }\n            });\n\n            // Create format legality data\n            const legalityCounts = { standard: 0, nonStandard: 0 };\n\n            format_legalities.forEach(c => {\n                const qtySold = c.qtyToSell;\n\n                if (!c.legalities) return; // Some cards may not link via mongo $lookup\n\n                if (c.legalities.standard === \"legal\") {\n                    legalityCounts.standard += qtySold;\n                } else {\n                    legalityCounts.nonStandard += qtySold;\n                }\n            });\n\n            // Format data for consumption by Highcharts API\n            const formattedDailySalesTotals = Object.entries(dailySalesTotals).map(el => [new Date(el[0]).getTime(), el[1]]);\n\n            const formattedDailyAverageSales = Object.entries(dailyAverageSales).map(el => [new Date(el[0]).getTime(), el[1]]);\n\n            const formattedRangeBuckets = Object.entries(rangeBuckets).map(d => d[1]);\n\n            const formattedRarityCounts = Object.entries(rarityCounts).map(d => ({ name: d[0], y: d[1] }));\n\n            const formattedLegalities = Object.entries(legalityCounts).map(d => ({ name: d[0], y: d[1] }));\n\n            setLoading(false);\n\n            Highcharts.setOptions({\n                lang: {\n                    thousandsSep: ','\n                }\n            });\n\n            Highcharts.chart('daily-sales', {\n                chart: {\n                    zoomType: 'x'\n                },\n                title: {\n                    text: 'Sales Over Time'\n                },\n                subtitle: {\n                    text: 'Click and drag to zoom'\n                },\n                credits: {\n                    enabled: false\n                },\n                xAxis: {\n                    type: 'datetime',\n                    title: {\n                        text: 'Date'\n                    }\n                },\n                yAxis: {\n                    title: {\n                        text: 'USD ($)'\n                    }\n                },\n                legend: {\n                    enabled: true\n                },\n                series: [{\n                    type: 'spline',\n                    data: formattedDailySalesTotals,\n                    name: 'Total Sales',\n                    tooltip: {\n                        valueDecimals: 2\n                    }\n                }, {\n                    type: 'spline',\n                    data: formattedDailyAverageSales,\n                    name: 'Average Sales',\n                    tooltip: {\n                        valueDecimals: 2\n                    }\n                }]\n            });\n\n            Highcharts.chart('price-buckets', {\n                chart: {\n                    type: 'bar'\n                },\n                title: {\n                    text: 'Cards Sold Per Price Range'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                yAxis: {\n                    min: 0,\n                    title: {\n                        text: 'Number sold'\n                    }\n                },\n                xAxis: {\n                    categories: [\n                        '$0.50 - $0.99',\n                        '$1.00 - $4.99',\n                        '$5.00 - $9.99',\n                        '$10.00 - $19.99',\n                        '$20.00 - $49.99',\n                        '$50.00 +'\n                    ]\n                },\n                plotOptions: {\n                    bar: {\n                        dataLabels: {\n                            enabled: true\n                        }\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Total cards\",\n                    data: formattedRangeBuckets\n                }]\n            });\n\n            Highcharts.chart('rarity-sales', {\n                chart: {\n                    plotBackgroundColor: null,\n                    plotBorderWidth: null,\n                    plotShadow: null,\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Cards Sold Per Rarity'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                plotOptions: {\n                    pie: {\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b><br>{point.percentage:.0f} %',\n                            distance: -50,\n                            filter: {\n                                property: 'percentage',\n                                operator: '>',\n                                value: 4\n                            }\n                        },\n                        colors: ['#7bb5ed', '#6798c8', '#4b769f', '#2d567c']\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Cards Sold\",\n                    data: formattedRarityCounts\n                }]\n            })\n\n            Highcharts.chart('format-legalities', {\n                chart: {\n                    plotBackgroundColor: null,\n                    plotBorderWidth: null,\n                    plotShadow: null,\n                    type: 'pie'\n                },\n                title: {\n                    text: 'Standard vs Non-Standard Sales'\n                },\n                subtitle: {\n                    text: 'All-time'\n                },\n                plotOptions: {\n                    pie: {\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b><br>{point.percentage:.0f} %',\n                            distance: -50,\n                            filter: {\n                                property: 'percentage',\n                                operator: '>',\n                                value: 4\n                            }\n                        },\n                        colors: ['#7bb5ed', '#6798c8', '#4b769f', '#2d567c']\n                    }\n                },\n                legend: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    name: \"Cards Sold\",\n                    data: formattedLegalities\n                }]\n            })\n        })();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Segment secondary>\n                <Icon name=\"exclamation triangle\" color=\"blue\" />\n                This feature is currently in beta. Metrics may not be entirely accurate. Please contact your development team if you have any feedback!\n            </Segment>\n            <Segment loading={loading}>\n                <div id=\"daily-sales\" style={{ width: \"100%\", height: \"400px\" }} />\n            </Segment>\n            <Grid columns={2} stackable={true}>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"price-buckets\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"rarity-sales\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column>\n                    <Segment loading={loading}>\n                        <div id=\"format-legalities\" style={{ width: \"100%\", height: \"400px\" }} />\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Text = styled.p`\n    font-size: 16px;\n    color: black;\n    text-align: left;\n`;\n\nconst Image = styled.img`\n    width: 100%;\n`;\n\nconst Content = styled.div`\n    padding: 2px 16px;\n`;\n\nconst Container = styled.div`\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    border-radius: 5px 5px 5px 5px;\n    width: 380px;\n    height: 700px;\n    margin: 10px 10px 10px 10px;\n    overflow: hidden; // This allows us to edit the borders on the card's border-flush images\n\n    @media (max-width: 800px) {\n        width: 320px;\n    }\n`;\n\nexport default function Card({ imageSrc, header, date, children }) {\n    return <Container>\n        <Image src={imageSrc} />\n        <Content>\n            <h3><b>{header}</b></h3>\n            <p><em>{date}</em></p>\n            <Text>{children}</Text>\n        </Content>\n    </Container>\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport clubhouse_products from './clubhouse_products.png';\nimport core_2021_draft_booster from './core_2021_draft_booster.png';\nimport core_2021_collector from './core_2021_collector.jpg';\nimport double_masters from './double_masters.png';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nconst BaseContent = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: 52px;\n`;\n\nconst ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 1200px;\n\n    @media (max-width: 800px) {\n        width: 100%;\n        padding: 0px 10px 0px 10px;\n    }\n`;\n\nconst Image = styled.div`\n    background: url(${clubhouse_products});\n    background-size: cover;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 500px;\n    width: 100%;\n    z-index: -50;\n`;\n\nconst Image2 = styled.div`\n    background: url(${clubhouse_products});\n    background-size: cover;\n    position: absolute;\n    left: 0px;\n    height: 400px;\n    width: 100%;\n    z-index: -50;\n    opacity: 0.15;\n`;\n\nconst ImageMask = styled.div`\n    background-image: linear-gradient(\n        to bottom,\n        rgba(32, 106, 208, 1),\n        rgba(32, 106, 208, 0.85),\n        rgba(32, 106, 208, 0.66),\n        rgba(255, 255, 255, 1)\n    );\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 500px;\n    width: 100%;\n    z-index: -49;\n`;\n\nconst ImageMask2 = styled.div`\n    background-image: linear-gradient(\n        to bottom,\n        rgba(0, 0, 0, 0),\n        rgba(255, 255, 255, 1)\n    );\n    position: absolute;\n    left: 0px;\n    height: 400px;\n    width: 100%;\n    z-index: -49;\n`;\n\nconst Divider = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: 400px;\n`;\n\nconst FlexRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst FlexRowResponsive = styled(FlexRow)`\n    justify-content: flex-start;\n\n    @media (max-width: 800px) {\n        justify-content: center;\n        flex-wrap: wrap;\n    }\n`;\n\nconst SpanStyle = styled.span`\n    margin-right: 10px;\n`;\n\nconst FlexColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst Slogan = styled.h1`\n    font-size: 83px;\n    color: white;\n\n    @media (max-width: 800px) {\n        font-size: 45px;\n        text-align: center;\n    }\n`;\n\nconst Header = styled.p`\n    font-size: 50px;\n    margin-top: 0px;\n    color: black;\n\n    @media (max-width: 800px) {\n        font-size: 27px;\n    }\n`;\n\nconst Subheader = styled.p`\n    font-size: 23px;\n    margin-top: 0px;\n    color: ${(props) => props.color || 'black'};\n\n    @media (max-width: 800px) {\n        font-size: 18px;\n        text-align: center;\n    }\n`;\n\nconst Button = styled.button`\n    outline: none;\n    width: 200px;\n    height: 45px;\n    background-color: rgb(33, 133, 208);\n    border-radius: 20px 20px 20px 20px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n    margin-right: 20px;\n    margin-top: 10px;\n    font-size: 17px;\n    color: white;\n    border: 0px;\n\n    :hover {\n        background-color: rgb(35, 139, 219);\n        box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.4);\n    }\n`;\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(380px, max-content));\n    grid-gap: 10px;\n    justify-content: center;\n\n    @media (max-width: 800px) {\n        grid-template-columns: repeat(auto-fit, minmax(320px, max-content));\n    }\n`;\n\nconst IconStyled = styled(Icon)`\n    background-color: rgb(33, 133, 208);\n    color: white;\n`;\n\nconst FooterIcon = styled(Icon)`\n    color: white;\n`;\n\nconst BodyText = styled.p`\n    font-size: ${(props) => props.size || '16px'};\n    color: ${(props) => props.color || 'black'};\n    text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\n`;\n\nconst Spacer = styled.div`\n    width: 100%;\n    height: ${(props) => props.height || 0}px;\n`;\n\nconst FooterStyle = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 50px;\n    background-color: darkslategray;\n    width: 100%;\n    bottom: 0;\n    padding: 0px 10px 0px 10px;\n`;\n\nconst SocialMedia = styled.div`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n`;\n\nconst ServiceCard = ({\n    icon = 'users',\n    header = 'Header',\n    content = 'Content',\n    align,\n}) => {\n    return (\n        <FlexColumn>\n            <IconStyled circular name={icon} size=\"huge\" />\n            <Subheader>{header}</Subheader>\n            <BodyText color=\"gray\" align={align}>\n                {content}\n            </BodyText>\n        </FlexColumn>\n    );\n};\n\nconst InfoCard = ({\n    icon = 'users',\n    header = 'Header',\n    content = 'Content',\n    align,\n}) => {\n    return (\n        <FlexColumn>\n            <Icon name={icon} size=\"big\" />\n            <Subheader>{header}</Subheader>\n            <BodyText color=\"gray\" align={align}>\n                {content}\n            </BodyText>\n        </FlexColumn>\n    );\n};\n\nexport default function LandingPage() {\n    return (\n        <Wrapper>\n            <BaseContent>\n                <ContentContainer>\n                    <SocialMedia>\n                        <div>\n                            <a\n                                href=\"https://discord.gg/Wpej7dQ\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <FooterIcon link name=\"discord\" size=\"big\" />\n                            </a>\n                            <a\n                                href=\"https://www.facebook.com/RGTClubhouse/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <FooterIcon link name=\"facebook\" size=\"big\" />\n                            </a>\n                        </div>\n                    </SocialMedia>\n                    <Spacer height=\"30\" />\n                    <Divider>\n                        <Slogan>\n                            The Clubhouse is open{' '}\n                            <span role=\"img\" aria-label=\"confetti\">\n                                🎉\n                            </span>\n                        </Slogan>\n                        <Subheader color=\"white\">\n                            We are open Tuesday through Sunday for all your CCG\n                            needs!{' '}\n                            <em>\n                                (Play space use and events are cancelled until\n                                further notice due to WPN's in-store play\n                                suspension)\n                            </em>\n                        </Subheader>\n                        <FlexRowResponsive>\n                            {/* <Link to=\"/calendar\">\n                            <Button><b>Events calendar</b></Button>\n                        </Link> */}\n                            <Link to=\"/public-inventory\">\n                                <Button>\n                                    <b>Browse cards</b>\n                                </Button>\n                            </Link>\n                        </FlexRowResponsive>\n                        <ImageMask />\n                        <Image />\n                    </Divider>\n\n                    <FlexRow>\n                        <Header>Latest News</Header>\n                    </FlexRow>\n                    <Spacer height=\"30\" />\n                    <Grid>\n                        <Card\n                            imageSrc={double_masters}\n                            header=\"New product preorders!\"\n                            date=\"06/08/2020\"\n                        >\n                            <p>\n                                <em>\n                                    Note: Preorders for Double Masters are now\n                                    closed.\n                                </em>\n                            </p>\n                            <p>\n                                The time has come! We have had loads of\n                                questions about all the upcoming products, and\n                                we are excited to start taking PRE ORDERS on a\n                                range of upcoming items:\n                            </p>\n                            <ul>\n                                <li>Jump Start $90 per box, Limit 2</li>\n                                <li>Double Masters $249 per box, Limit 2</li>\n                                <li>\n                                    Double Masters VIP $369 per box, No Limit\n                                </li>\n                                <li>Double Master VIP $95 per pack, Limit 1</li>\n                            </ul>\n                        </Card>\n                        <Card\n                            imageSrc={core_2021_collector}\n                            header=\"Collector Booster preorders!\"\n                            date=\"06/02/2020\"\n                        >\n                            <p>\n                                To compound the excitement, We JUST got numbers\n                                on Collector Boosters for Core 2021! We are now\n                                taking pre-orders for those as well! $229 per,\n                                limit 1 box per customer.\n                            </p>\n                        </Card>\n                        <Card\n                            imageSrc={core_2021_draft_booster}\n                            header=\"Core 2021 preorders!\"\n                            date=\"06/02/2020\"\n                        >\n                            <p>\n                                It's already time. Core 2021 is upon us. We are\n                                now taking Booster Box pre-orders! $100 per box,\n                                2 boxes per person limit. Pre-release sign ups\n                                will begin on June 19th!\n                            </p>\n                            <p>\n                                Note: Preorders for draft booster boxes have now\n                                ended. We currently have them for sale at $110\n                                each. Collector Booster preorders will end on\n                                June 3rd.\n                            </p>\n                        </Card>\n                    </Grid>\n\n                    <Spacer height=\"30\" />\n\n                    <Divider>\n                        <Spacer height=\"30\" />\n                        <FlexRow>\n                            <Header>Our Services</Header>\n                        </FlexRow>\n                        <FlexRow>\n                            {/* <Subheader>\n                                We're here for all your CCG needs!\n                            </Subheader> */}\n                        </FlexRow>\n                        <Spacer height=\"30\" />\n                        <Grid>\n                            <ServiceCard\n                                icon=\"box\"\n                                header=\"Large product selection\"\n                                content=\"We stock an extensive selection of singles and CCG supplies just for you! When the deckbuilding itch strikes, turn to us\"\n                                align=\"center\"\n                            />\n                            <ServiceCard\n                                header=\"Inclusive community\"\n                                content=\"We pride ourselves on our friendly atmosphere. Young or seasoned, beginner or advanced, we welcome all players!\"\n                                align=\"center\"\n                            />\n                            <ServiceCard\n                                icon=\"dollar sign\"\n                                header=\"Cash or credit trade-ins\"\n                                content=\"Whether a whole collection or a single card, come on by and have one of our expert managers appraise it using competitive market rates\"\n                                align=\"center\"\n                            />\n                        </Grid>\n                        <ImageMask2 />\n                        <Image2 />\n                    </Divider>\n                    <Spacer height=\"30\" />\n                    <Grid>\n                        <InfoCard\n                            icon=\"clock\"\n                            header=\"Hours\"\n                            content=\"Tues - Fri 2pm to 7pm, Sat - Sun 12pm to 7pm\"\n                            align=\"center\"\n                        />\n                        <InfoCard\n                            icon=\"location arrow\"\n                            header=\"Location\"\n                            content=\"13895 SW Farmington Rd, Beaverton, OR 97005\"\n                            align=\"center\"\n                        />\n                        <InfoCard\n                            icon=\"phone\"\n                            header=\"Contact\"\n                            content=\"(503) 268-1449\"\n                        />\n                    </Grid>\n                    <Spacer height=\"30\" />\n                </ContentContainer>\n            </BaseContent>\n            <FooterStyle>\n                <SpanStyle>\n                    <Link to=\"/login\" id=\"login-btn\">\n                        <Label as=\"a\" color=\"black\">\n                            Staff login\n                        </Label>\n                    </Link>\n                </SpanStyle>\n                <SpanStyle>\n                    <BodyText size=\"12px\" color=\"white\">\n                        © 2020 The Clubhouse\n                    </BodyText>\n                </SpanStyle>\n                <SpanStyle>\n                    <BodyText size=\"12px\" color=\"gray\">\n                        Powered by Scryfall\n                    </BodyText>\n                </SpanStyle>\n            </FooterStyle>\n        </Wrapper>\n    );\n}\n","import React from 'react';\nimport Header from './Header/Header';\nimport AuthProvider from './context/AuthProvider';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './ManageInventory/Home';\nimport Sale from './NewSale/Sale';\nimport BrowseSales from './BrowseSales/BrowseSales';\nimport PublicInventory from './PublicInventory/PublicInventory';\nimport DeckboxClone from './DeckboxClone/DeckboxClone';\nimport Login from './Login/Login';\nimport Logout from './Logout/Logout';\nimport Receiving from './Receiving/Receiving';\nimport Reports from './Reports/Reports';\nimport LandingPage from './LandingPage/LandingPage';\nimport styled from 'styled-components';\nimport { SaleProvider } from './context/SaleContext';\nimport { ReceivingProvider } from './context/ReceivingContext';\n\nconst ContentContainer = styled.div`\n    padding-top: 75px;\n    margin-left: 20px;\n    margin-right: 20px;\n`;\n\nconst BackgroundColor = styled.div`\n    background-color: #f9fafb;\n    min-height: 100vh;\n`;\n\nclass App extends React.Component {\n    render() {\n        return (\n            <AuthProvider>\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <BackgroundColor>\n                        <ContentContainer id=\"content-container\">\n                            <Route\n                                exact\n                                path=\"/manage-inventory\"\n                                component={Home}\n                            />\n                            <SaleProvider>\n                                <Route\n                                    exact\n                                    path=\"/new-sale\"\n                                    component={Sale}\n                                />\n                            </SaleProvider>\n                            <Route\n                                exact\n                                path=\"/browse-sales\"\n                                component={BrowseSales}\n                            />\n                            <Route\n                                exact\n                                path=\"/browse-inventory\"\n                                component={DeckboxClone}\n                            />\n                            <Route\n                                exact\n                                path=\"/public-inventory\"\n                                component={PublicInventory}\n                            />\n                            <ReceivingProvider>\n                                <Route\n                                    exact\n                                    path=\"/receiving\"\n                                    component={Receiving}\n                                />\n                            </ReceivingProvider>\n                            <Route exact path=\"/reports\" component={Reports} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/logout\" component={Logout} />\n                        </ContentContainer>\n                    </BackgroundColor>\n                </Switch>\n            </AuthProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}