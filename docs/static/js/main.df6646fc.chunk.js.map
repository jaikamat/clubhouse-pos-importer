{"version":3,"sources":["logos/magic-ball.png","api_resources.js","makeAuthHeader.js","SearchBar.js","QohParser.js","createToast.js","CardImage.js","Price.js","MarketPrice.js","ScryfallCardListItem.js","ScryfallCardList.js","Home.js","BrowseCardItem.js","BrowseCardList.js","SaleLineItem.js","SalePriceTotal.js","Sale.js","SalesListItem.js","SalesList.js","BrowseSales.js","PublicCardItem.js","PublicCardList.js","PublicInventory.js","Login.js","Logout.js","Main.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_CARDS_BY_TITLE","GET_CARD_QTY_FROM_INVENTORY","FINISH_SALE","ADD_CARD_TO_INVENTORY","GET_INVENTORY_QUERY","GET_SALES_BY_TITLE","GET_SCRYFALL_BULK_BY_TITLE","LOGIN","SCRYFALL_AUTOCOMPLETE","SCRYFALL_SEARCH","SCRYFALL_ID_SEARCH","makeAuthHeader","Authorization","localStorage","getItem","SearchBar","state","isLoading","term","autocomplete","results","defaultSearchValue","handleSearchChange","e","value","setState","length","setTimeout","a","async","axios","get","headers","data","formattedResults","map","el","title","handleResultSelect","result","props","handleSearchSelect","this","Search","onSearchChange","_","debounce","trailing","onResultSelect","loading","placeholder","selectFirstResult","React","Component","QohParser","inventoryQty","foilQty","nonfoilQty","FOIL_NM","FOIL_LP","FOIL_MP","FOIL_HP","NONFOIL_NM","NONFOIL_LP","NONFOIL_MP","NONFOIL_HP","foilColor","color","nonfoilColor","Fragment","Label","image","Detail","createToast","header","message","duration","toaster","notify","Message","compact","Header","position","style","boxShadow","CardImage","image_uris","card_faces","Image","src","normal","size","Price","num","price","Number","toFixed","MarketPrice","id","prices","usd","finishes","key","text","cardConditions","checkCardFinish","nonfoilProp","foilProp","selectedFinish","finishDisabled","ScryfallCardListItem","quantity","nonfoil","foil","selectedCondition","submitDisable","submitLoading","handleFinishChange","console","log","handleConditionChange","handleQuantityChange","val","parseInt","isNaN","handleInventoryAdd","name","type","post","cardInfo","qoh","set_name","set","rarity","Segment","Item","Group","divided","Content","as","className","fontSize","String","toUpperCase","tag","Description","Form","Field","control","Input","label","onChange","Select","options","disabled","Button","primary","onClick","ScryfallCardList","cards","card","showImage","showImages","quantities","Home","searchResults","inventoryQuantities","params","ids","scryfallIds","inventoryRes","handleImageToggle","icon","Icon","createConditionOptions","Object","entries","d","str","conditionFinish","qty","split","join","BrowseCardItem","selectedFinishCondition","selectedFinishConditionQty","quantityToSell","conditionOptions","handleSelectedFinishCondition","handlePriceChange","handleAddToSale","addToSaleList","Dropdown","selection","BrowseCardList","SaleLineItem","finishCondition","qtyToSell","deleteLineItem","Meta","floated","SalePriceTotal","saleList","total","reduce","acc","initialState","saleListCards","showModal","searchTerm","Sale","newCard","oldState","idx","findIndex","splice","push","removeFromSaleList","newState","reject","finalizeSale","saleID","sale_data","closeModal","list","Grid","Row","display","alignItems","stackable","Column","width","Divider","clearing","sub","Modal","basic","open","trigger","inverted","Actions","SalesListItem","saleData","quantitySold","cardList","pre","curr","Table","Cell","moment","createTime","format","SalesList","celled","unstackable","HeaderCell","Body","card_list","_id","BrowseSales","salesList","cardName","wrapperStyle","overlayStyle","backgroundColor","padding","zIndex","bottom","left","borderRadius","roundedStyle","PublicCardItem","gridStyle","flexWrap","alignContent","height","PublicCardList","PublicInventory","username","password","btnLoading","Login","handleInputChange","target","login","handleLogin","authed","loggedIn","to","Logout","Container","fluid","Main","paddingTop","marginLeft","marginRight","exact","path","component","render","background","Menu","fixed","ballLogo","alt","Link","item","App","toLowerCase","token","setItem","clear","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df6646fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magic-ball.c3fcddd6.png\";","// Maps all GCF and Scryfall API endpoints for code re-use\n\nmodule.exports = {\n    GET_CARDS_BY_TITLE:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsByTitle',\n    GET_CARD_QTY_FROM_INVENTORY:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/getCardsFromInventory',\n    FINISH_SALE:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/finishSale',\n    ADD_CARD_TO_INVENTORY:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/addCardToInventory',\n    GET_INVENTORY_QUERY:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/inventorySearchQuery',\n    GET_SALES_BY_TITLE:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/getSales',\n    GET_SCRYFALL_BULK_BY_TITLE:\n        'https://us-central1-clubhouse-collection.cloudfunctions.net/getScryfallBulkCardsByTitle',\n    LOGIN: 'https://us-central1-clubhouse-collection.cloudfunctions.net/getJwt',\n    SCRYFALL_AUTOCOMPLETE: 'https://api.scryfall.com/cards/autocomplete',\n    SCRYFALL_SEARCH: 'https://api.scryfall.com/cards/search',\n    SCRYFALL_ID_SEARCH: 'https://api.scryfall.com/cards/'\n};\n","/**\n * This function is a helper for Axios, it yields an object for Axios params\n */\nexport default function makeAuthHeader() {\n    const header = { Authorization: `Bearer ${localStorage.getItem('clubhouse_JWT')}` };\n    return header;\n}","import React from 'react';\nimport { Search } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_AUTOCOMPLETE } from './api_resources';\n\nclass SearchBar extends React.Component {\n    state = {\n        isLoading: false,\n        term: '',\n        autocomplete: [],\n        results: [],\n        defaultSearchValue: 'Search for a card'\n    };\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, term: value });\n\n        if (this.state.term.length < 1)\n            return this.setState({\n                isLoading: false,\n                term: '',\n                results: [],\n                autocomplete: [],\n                defaultSearchValue: 'Search for a card'\n            });\n\n        setTimeout(async () => {\n            const { data } = await axios.get(\n                `${SCRYFALL_AUTOCOMPLETE}?q=${this.state.term}`,\n                { headers: makeAuthHeader() }\n            );\n\n            const formattedResults = data.data.map(el => {\n                return { title: el };\n            });\n\n            this.setState({\n                results: formattedResults,\n                isLoading: false\n            });\n        }, 300);\n    };\n\n    handleResultSelect = (e, { result }) => {\n        this.props.handleSearchSelect(result.title);\n    };\n\n    render() {\n        const { results, isLoading, defaultSearchValue } = this.state;\n\n        return (\n            <Search\n                onSearchChange={_.debounce(this.handleSearchChange, 300, {\n                    trailing: true\n                })}\n                onResultSelect={this.handleResultSelect}\n                loading={isLoading}\n                results={results}\n                placeholder={defaultSearchValue}\n                selectFirstResult={true}\n            />\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\n// This component parses the `qoh` object from mongo into something\n// more presentable\n\n// available entries:\n// {\n//     FOIL_NM: 0,\n//     FOIL_LP: 0,\n//     FOIL_MP: 0,\n//     FOIL_HP: 0,\n//     NONFOIL_NM: 0,\n//     NONFOIL_LP: 0,\n//     NONFOIL_MP: 0,\n//     NONFOIL_HP: 0\n// };\n\nexport default function QohParser({ inventoryQty }) {\n    let foilQty = 0;\n    let nonfoilQty = 0;\n\n    if (inventoryQty) { // Check to see if props exist\n        foilQty =\n            (inventoryQty.FOIL_NM || 0) +\n            (inventoryQty.FOIL_LP || 0) +\n            (inventoryQty.FOIL_MP || 0) +\n            (inventoryQty.FOIL_HP || 0);\n\n        nonfoilQty =\n            (inventoryQty.NONFOIL_NM || 0) +\n            (inventoryQty.NONFOIL_LP || 0) +\n            (inventoryQty.NONFOIL_MP || 0) +\n            (inventoryQty.NONFOIL_HP || 0);\n    }\n\n    const foilColor = {};\n    if (foilQty > 0) { foilColor.color = 'blue'; }\n\n    const nonfoilColor = {};\n    if (nonfoilQty > 0) { nonfoilColor.color = 'blue'; }\n\n    return (\n        <React.Fragment>\n            <Label {...foilColor} image>\n                Foil\n        <Label.Detail>{foilQty}</Label.Detail>\n            </Label>\n            <Label {...nonfoilColor} image>\n                Nonfoil\n        <Label.Detail>{nonfoilQty}</Label.Detail>\n            </Label>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport toaster from 'toasted-notes';\n\nconst createToast = ({ color, header, message, duration = 2000 }) => {\n    return toaster.notify(\n        () => (\n            <Message color={color} compact>\n                <Message.Header>{header}</Message.Header>\n                {message}\n            </Message>\n        ),\n        {\n            position: 'bottom-right',\n            duration: duration\n        }\n    );\n}\n\nexport default createToast;","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nconst style = {\n    boxShadow: '2px 2px 5px 0 rgba(0,0,0,.25)'\n}\n\nconst CardImage = ({ image_uris, card_faces }) => {\n    try {\n        // If normal prop doesn't exist, move to catch block for flip card faces\n        return <Image src={image_uris.normal} size=\"tiny\" style={style} />;\n    } catch (e) {\n        return <Image src={card_faces[0].image_uris.normal} size=\"tiny\" style={style} />;\n\n        /**\n         * Uncomment this if they want all card faces displayed, not just the front\n         */\n        // return card_faces.map(face => {\n        //     return <Image src={face.image_uris.normal} size=\"tiny\" />;\n        // });\n    }\n};\n\nexport default CardImage;\n","import React from 'react';\n\nconst Price = ({ num }) => {\n    const price = Number(num).toFixed(2);\n    return <span>${price}</span>;\n};\n\nexport default Price;\n","import React from 'react';\nimport axios from 'axios';\nimport Price from './Price';\nimport makeAuthHeader from './makeAuthHeader';\nimport { SCRYFALL_ID_SEARCH } from './api_resources';\n\nclass MarketPrice extends React.Component {\n    state = { price: null };\n\n    async componentDidMount() {\n        const { id } = this.props;\n        const { data } = await axios.get(`${SCRYFALL_ID_SEARCH}${id}`, { headers: makeAuthHeader() });\n\n        this.setState({ price: Number(data.prices.usd) });\n    }\n\n    render() {\n        const { price } = this.state;\n        return (\n            <span>\n                Est. {price ? <Price num={price} /> : 'not found'}\n            </span>\n        );\n    }\n}\n\nexport default MarketPrice;\n","import React, { Component } from 'react';\nimport {\n    Segment,\n    Input,\n    Button,\n    Form,\n    Select,\n    Label,\n    Item\n} from 'semantic-ui-react';\nimport axios from 'axios';\nimport QohParser from './QohParser';\nimport createToast from './createToast';\nimport CardImage from './CardImage';\nimport makeAuthHeader from './makeAuthHeader';\nimport MarketPrice from './MarketPrice'\nimport { ADD_CARD_TO_INVENTORY } from './api_resources';\n\nconst finishes = [\n    { key: 'NONFOIL', text: 'Nonfoil', value: 'NONFOIL' },\n    { key: 'FOIL', text: 'Foil', value: 'FOIL' }\n];\n\nconst cardConditions = [\n    { key: 'NM', text: 'Near Mint', value: 'NM' },\n    { key: 'LP', text: 'Light Play', value: 'LP' },\n    { key: 'MP', text: 'Moderate Play', value: 'MP' },\n    { key: 'HP', text: 'Heavy Play', value: 'HP' }\n];\n\n// Use this function to seed state from props\nfunction checkCardFinish(nonfoilProp, foilProp) {\n    if (!nonfoilProp && foilProp) {\n        return { selectedFinish: 'FOIL', finishDisabled: true };\n    } else if (nonfoilProp && !foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: true };\n    } else if (nonfoilProp && foilProp) {\n        return { selectedFinish: 'NONFOIL', finishDisabled: false };\n    }\n}\n\nexport default class ScryfallCardListItem extends Component {\n    state = {\n        quantity: 0,\n        selectedFinish: checkCardFinish(this.props.nonfoil, this.props.foil)\n            .selectedFinish,\n        selectedCondition: 'NM',\n        finishDisabled: checkCardFinish(this.props.nonfoil, this.props.foil)\n            .finishDisabled,\n        submitDisable: false,\n        inventoryQty: this.props.inventoryQty,\n        submitLoading: false\n    };\n\n    handleFinishChange = (e, { value }) => {\n        this.setState({ selectedFinish: value }, () => {\n            console.log(this.state);\n        });\n    };\n\n    handleConditionChange = (e, { value }) => {\n        this.setState({ selectedCondition: value }, () => {\n            console.log(this.state);\n        });\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const val = parseInt(value);\n        const quantity = isNaN(val) ? '' : val; // Check for NaN\n        this.setState({ quantity: quantity });\n    };\n\n    handleInventoryAdd = async (e, { value }) => {\n        const { quantity, selectedFinish, selectedCondition } = this.state;\n        const { name } = this.props;\n        // This is the identifier for quantities of different finishes/conditions in the db\n        const type = `${selectedFinish}_${selectedCondition}`;\n\n        try {\n            this.setState({ submitDisable: true, submitLoading: true });\n\n            const { data } = await axios.post(ADD_CARD_TO_INVENTORY, {\n                quantity: quantity,\n                type: type,\n                cardInfo: { ...this.props },\n            }, { headers: makeAuthHeader() });\n\n            createToast({\n                color: 'green',\n                header: `${quantity}x ${name} ${quantity > 0 ? 'added' : 'removed'}!`,\n                duration: 2000\n            });\n\n            this.setState({\n                quantity: 0,\n                selectedFinish: checkCardFinish(\n                    this.props.nonfoil,\n                    this.props.foil\n                ).selectedFinish,\n                selectedCondition: 'NM',\n                finishDisabled: checkCardFinish(\n                    this.props.nonfoil,\n                    this.props.foil\n                ).finishDisabled,\n                submitDisable: false,\n                inventoryQty: data.qoh,\n                submitLoading: false\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            selectedFinish,\n            selectedCondition,\n            finishDisabled,\n            quantity,\n            submitDisable,\n            inventoryQty,\n            submitLoading\n        } = this.state;\n        const {\n            image_uris,\n            name,\n            set_name,\n            set,\n            rarity,\n            card_faces,\n            id\n        } = this.props;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as='h3'>\n                                {name}\n                                {' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohParser inventoryQty={inventoryQty} />\n                                {' '}\n                                <Label tag>\n                                    <MarketPrice id={id} />\n                                </Label>\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity\"\n                                            value={quantity}\n                                            onChange={this.handleQuantityChange}\n                                        />\n                                        <Form.Field\n                                            label=\"Finish\"\n                                            control={Select}\n                                            value={selectedFinish}\n                                            options={finishes}\n                                            disabled={finishDisabled}\n                                            onChange={this.handleFinishChange}\n                                        />\n                                        <Form.Field\n                                            label=\"Condition\"\n                                            control={Select}\n                                            value={selectedCondition}\n                                            options={cardConditions}\n                                            onChange={this.handleConditionChange}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to Inventory?\"\n                                            control={Button}\n                                            primary\n                                            disabled={\n                                                quantity === 0 ||\n                                                quantity === '' ||\n                                                submitDisable\n                                            }\n                                            onClick={this.handleInventoryAdd}\n                                            loading={submitLoading}\n                                        >\n                                            Submit\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport ScryfallCardListItem from './ScryfallCardListItem';\n\nfunction ScryfallCardList(props) {\n    // Tie the QOH to the fetched card, if it exists!\n    const cardList = props.cards.map(card => {\n        return (\n            <ScryfallCardListItem\n                showImage={props.showImages}\n                key={card.id}\n                {...card}\n                inventoryQty={props.quantities[card.id]}\n            />\n        );\n    });\n\n    return cardList\n}\n\nexport default ScryfallCardList;\n","import React from 'react';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport ScryfallCardList from './ScryfallCardList';\nimport { Segment, Header, Icon } from 'semantic-ui-react'\nimport { GET_CARD_QTY_FROM_INVENTORY, GET_SCRYFALL_BULK_BY_TITLE } from './api_resources';\n\nclass Home extends React.Component {\n    state = { searchResults: [], inventoryQuantities: [], showImages: true };\n\n    handleSearchSelect = async term => {\n        try {\n            const { data } = await axios.get(\n                GET_SCRYFALL_BULK_BY_TITLE,\n                {\n                    params: { title: term },\n                    headers: makeAuthHeader()\n                }\n            );\n\n            const ids = data.map(el => el.id);\n\n            // Fetches only the in-stock qty of a card tied to an `id`\n            const inventoryRes = await axios.post(\n                GET_CARD_QTY_FROM_INVENTORY,\n                { scryfallIds: ids },\n                { headers: makeAuthHeader() }\n            );\n\n            this.setState({\n                searchResults: data,\n                inventoryQuantities: inventoryRes.data\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    handleImageToggle = () => {\n        this.setState({ showImages: !this.state.showImages });\n    };\n\n    render() {\n        const { searchResults } = this.state;\n\n        return (\n            <React.Fragment>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n\n                {!searchResults.length &&\n                    <Segment placeholder>\n                        <Header icon>\n                            <Icon name=\"search\" />\n                            <em>\"Searching the future for answers often leads to further questions.\"</em>\n                        </Header>\n                    </Segment>}\n\n                <ScryfallCardList\n                    showImages={this.state.showImages}\n                    cards={this.state.searchResults}\n                    quantities={this.state.inventoryQuantities}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n    Segment,\n    Label,\n    Form,\n    Input,\n    Dropdown,\n    Button,\n    Item\n} from 'semantic-ui-react';\nimport CardImage from './CardImage';\nimport MarketPrice from './MarketPrice';\nimport QohParser from './QohParser';\n\nfunction createConditionOptions(qoh, id) {\n    return Object.entries(qoh).map(d => {\n        const [conditionFinish, qty] = d;\n\n        return {\n            text: `${removeHyphen(conditionFinish)} | Qty: ${qty}`,\n            value: conditionFinish,\n            key: `${id}${conditionFinish}`\n        };\n    });\n}\n\nfunction removeHyphen(str) {\n    return str.split('_').join(' | ');\n}\n\nexport default class BrowseCardItem extends React.Component {\n    state = {\n        selectedFinishCondition: '',\n        selectedFinishConditionQty: 0,\n        quantityToSell: 0,\n        price: 0,\n        conditionOptions: createConditionOptions(this.props.qoh, this.props.id)\n    };\n\n    handleQuantityChange = (e, { value }) => {\n        const { selectedFinishConditionQty } = this.state;\n        if (value > selectedFinishConditionQty) {\n            value = selectedFinishConditionQty;\n        }\n        if (value < 0) value = 0;\n        this.setState({ quantityToSell: parseInt(value) });\n    };\n\n    handleSelectedFinishCondition = (e, { value }) => {\n        this.setState({\n            selectedFinishCondition: value,\n            selectedFinishConditionQty: this.props.qoh[value]\n        });\n    };\n\n    handlePriceChange = (e, { value }) => {\n        this.setState({\n            price: value\n        });\n    };\n\n    handleAddToSale = () => {\n        const { selectedFinishCondition, quantityToSell, price } = this.state;\n\n        this.props.addToSaleList(\n            { ...this.props },\n            selectedFinishCondition,\n            quantityToSell,\n            price\n        );\n\n        // Reset state\n        this.setState({\n            selectedFinishCondition: '',\n            selectedFinishConditionQty: 0,\n            quantityToSell: 0,\n            price: 0,\n            conditionOptions: createConditionOptions(\n                this.props.qoh,\n                this.props.id\n            )\n        });\n    };\n\n    render() {\n        const {\n            name,\n            image_uris,\n            set,\n            set_name,\n            rarity,\n            qoh,\n            id,\n            card_faces\n        } = this.props;\n        const {\n            selectedFinishCondition,\n            selectedFinishConditionQty,\n            conditionOptions,\n            quantityToSell,\n            price\n        } = this.state;\n\n        return (\n            <Segment>\n                <Item.Group divided>\n                    <Item>\n                        <Item.Image size=\"tiny\">\n                            <CardImage\n                                image_uris={image_uris}\n                                card_faces={card_faces}\n                            />\n                        </Item.Image>\n                        <Item.Content>\n                            <Item.Header as=\"h3\">\n                                {name}{' '}\n                                <i\n                                    className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                    style={{ fontSize: '30px' }}\n                                />\n                                <Label color=\"grey\">\n                                    {set_name} ({String(set).toUpperCase()})\n                                </Label>\n                                <QohParser inventoryQty={qoh} />\n                                {' '}\n                                <Label tag>\n                                    <MarketPrice id={id} />\n                                </Label>\n                            </Item.Header>\n                            <Item.Description>\n                                <Form>\n                                    <Form.Group>\n                                        <Form.Field\n                                            control={Dropdown}\n                                            selection\n                                            placeholder=\"Select inventory\"\n                                            options={conditionOptions}\n                                            value={selectedFinishCondition}\n                                            label=\"Select finish/condition\"\n                                            onChange={\n                                                this.handleSelectedFinishCondition\n                                            }\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Quantity to sell\"\n                                            value={quantityToSell}\n                                            onChange={this.handleQuantityChange}\n                                            disabled={!selectedFinishConditionQty}\n                                        />\n                                        <Form.Field\n                                            control={Input}\n                                            type=\"number\"\n                                            label=\"Price\"\n                                            value={price}\n                                            onChange={this.handlePriceChange}\n                                            disabled={!selectedFinishConditionQty}\n                                        />\n                                        <Form.Button\n                                            label=\"Add to sale?\"\n                                            control={Button}\n                                            primary\n                                            onClick={this.handleAddToSale}\n                                            disabled={!quantityToSell}\n                                        >\n                                            Sell\n                                    </Form.Button>\n                                    </Form.Group>\n                                </Form>\n                            </Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n        );\n    }\n}\n","import React from 'react';\nimport BrowseCardItem from './BrowseCardItem';\n\nexport default function BrowseCardList(props) {\n    const cardList = props.cards.map(card => {\n        return (\n            <BrowseCardItem\n                key={card.id}\n                {...card}\n                addToSaleList={props.addToSaleList}\n            />\n        );\n    });\n\n    return cardList;\n}\n","import React from 'react';\nimport { Button, Icon, Label, Item, Segment } from 'semantic-ui-react';\nimport Price from './Price';\n\nexport default function SaleLineItem(props) {\n    const {\n        name,\n        set,\n        // set_name,\n        finishCondition,\n        qtyToSell,\n        price,\n        rarity,\n        deleteLineItem,\n        id\n    } = props;\n\n    return (\n        <Segment>\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Item.Header as=\"h4\">\n                            {name}{' '}\n                            <i\n                                className={`ss ss-fw ss-${set} ss-${rarity}`}\n                                style={{ fontSize: '30px' }}\n                            />\n                            <Label color=\"grey\">\n                                {set.toUpperCase()}\n                            </Label>\n                        </Item.Header>\n                        <Item.Meta>\n                            <span>\n                                {qtyToSell}x @ <Price num={price} /> | {finishCondition}\n                            </span>\n                            <Button\n                                floated=\"right\"\n                                icon\n                                onClick={() => deleteLineItem(id, finishCondition)}\n                            >\n                                <Icon name=\"cancel\"></Icon>\n                            </Button>\n                        </Item.Meta>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Segment>\n    );\n}\n","import React from 'react';\nimport Price from './Price';\n\nconst SalePriceTotal = ({ saleList }) => {\n    const total = saleList.length\n        ? saleList.reduce(\n              (acc, val) => acc + parseInt(val.qtyToSell) * Number(val.price),\n              0\n          )\n        : 0;\n\n    return <Price num={total} />;\n};\n\nexport default SalePriceTotal;\n","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Button,\n    Modal,\n    Icon,\n    Divider,\n} from 'semantic-ui-react';\nimport SearchBar from './SearchBar';\nimport BrowseCardList from './BrowseCardList';\nimport SaleLineItem from './SaleLineItem';\nimport SalePriceTotal from './SalePriceTotal';\nimport _ from 'lodash';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_CARDS_BY_TITLE, FINISH_SALE } from './api_resources';\nimport createToast from './createToast';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    showModal: false,\n    submitLoading: false,\n    searchTerm: ''\n};\n\nexport default class Sale extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term },\n                headers: makeAuthHeader()\n            });\n\n            this.setState({ searchResults: data, searchTerm: term });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    addToSaleList = (card, finishCondition, qtyToSell, price) => {\n        const newCard = { ...card, finishCondition, qtyToSell, price };\n        const oldState = [...this.state.saleListCards];\n\n        // Need to make sure same ID's with differing conditions are separate line-items\n        const idx = oldState.findIndex(el => {\n            return (\n                el.id === newCard.id && el.finishCondition === finishCondition\n            );\n        });\n\n        if (idx !== -1) {\n            oldState.splice(idx, 1, newCard);\n        } else {\n            oldState.push(newCard);\n        }\n\n        this.setState({ saleListCards: oldState });\n    };\n\n    removeFromSaleList = (id, finishCondition) => {\n        const newState = _.reject([...this.state.saleListCards], el => {\n            return el.id === id && el.finishCondition === finishCondition;\n        });\n\n        this.setState({ saleListCards: newState });\n    };\n\n    finalizeSale = async () => {\n        try {\n            this.setState({ submitLoading: true });\n\n            const { data } = await axios.post(FINISH_SALE, {\n                cards: this.state.saleListCards\n            }, { headers: makeAuthHeader() });\n\n            const saleID = data.sale_data.Sale.saleID;\n\n            createToast({\n                color: 'green',\n                header: 'Sale created in Lightspeed!',\n                message: `The id number is #${saleID}`,\n            });\n\n            this.setState(initialState);\n        } catch (e) {\n            createToast({\n                color: 'red',\n                header: 'Error!',\n                message: `Sale was not created`,\n            });\n\n            this.setState(initialState);\n            console.log(e);\n        }\n    };\n\n    closeModal = () => {\n        this.setState({ showModal: false });\n    };\n\n    render() {\n        const {\n            searchResults,\n            saleListCards,\n            showModal,\n            submitLoading,\n            searchTerm\n        } = this.state;\n\n        const list = saleListCards.map(card => {\n            return (\n                <SaleLineItem\n                    {...card}\n                    key={`${card.id}${card.finishCondition}${card.qtyToSell}`}\n                    deleteLineItem={this.removeFromSaleList}\n                />\n            );\n        });\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p>Zero results for <em>{searchTerm}</em></p>\n            }\n            return <p>Search for inventory to sell</p>; // Default text before search\n        }\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Row>\n                        <Grid.Column width=\"11\">\n                            <Header as=\"h2\">Inventory</Header>\n                            <Divider />\n\n                            {!searchResults.length &&\n                                <Segment placeholder>\n                                    <Header icon>\n                                        <Icon name=\"search\" />\n                                        <span>{searchNotification()}</span>\n                                    </Header>\n                                </Segment>}\n\n                            <BrowseCardList\n                                cards={searchResults}\n                                addToSaleList={this.addToSaleList}\n                            />\n                        </Grid.Column>\n                        <Grid.Column width=\"5\">\n                            <Header as=\"h2\">Sale Items</Header>\n                            <Divider />\n\n                            {!saleListCards.length &&\n                                <Segment placeholder>\n                                    <Header icon>\n                                        <Icon name=\"plus\" />\n                                        View and manage customer sale list here\n                                </Header>\n                                </Segment>}\n\n                            <React.Fragment>\n                                {list}\n                            </React.Fragment>\n\n                            {saleListCards.length > 0 && (\n                                <Segment clearing>\n                                    <Header floated=\"left\">\n                                        <Header sub>Subtotal</Header>\n                                        <SalePriceTotal\n                                            saleList={saleListCards}\n                                        />\n                                    </Header>\n                                    <Modal\n                                        basic\n                                        open={showModal}\n                                        trigger={\n                                            <Button\n                                                floated=\"right\"\n                                                primary\n                                                onClick={() => {\n                                                    this.setState({\n                                                        showModal: true\n                                                    });\n                                                }}\n                                            >\n                                                Finalize sale\n                                            </Button>\n                                        }\n                                    >\n                                        <Modal.Content>\n                                            <Header inverted as=\"h2\">\n                                                Finalize this sale?\n                                            </Header>\n                                            <p>\n                                                Click 'Yes' to create a sale\n                                                in Lightspeed. Please ensure that\n                                                you have all cards in hand and double-checked\n                                                the pull list. Undoing this action will require manual data entry!\n                                            </p>\n                                        </Modal.Content>\n                                        <Modal.Actions>\n                                            <Button\n                                                basic\n                                                color=\"red\"\n                                                inverted\n                                                onClick={this.closeModal}\n                                            >\n                                                <Icon name=\"remove\" /> No\n                                            </Button>\n                                            <Button\n                                                color=\"green\"\n                                                inverted\n                                                onClick={this.finalizeSale}\n                                                loading={submitLoading}\n                                            >\n                                                <Icon name=\"checkmark\" /> Yes\n                                            </Button>\n                                        </Modal.Actions>\n                                    </Modal>\n                                </Segment>\n                            )}\n                        </Grid.Column>\n                    </Grid.Row >\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst SalesListItem = ({ saleData, cardList }) => {\n    const quantitySold = cardList.reduce(\n        (pre, curr) => pre + curr.qtyToSell,\n        0\n    );\n\n    return (\n        <Table.Row>\n            <Table.Cell>{saleData.saleID}</Table.Cell>\n            <Table.Cell>\n                {moment(saleData.createTime).format('MM/DD/YYYY - h:mm A')}\n            </Table.Cell>\n            <Table.Cell>{quantitySold}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default SalesListItem;\n","import React from 'react';\nimport SalesListItem from './SalesListItem';\nimport { Table } from 'semantic-ui-react';\n\nconst SalesList = ({ list }) => {\n    return (\n        <Table celled unstackable compact>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Sale ID</Table.HeaderCell>\n                    <Table.HeaderCell>Date of Sale</Table.HeaderCell>\n                    <Table.HeaderCell>Quantity Sold</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n                {list.map(({ sale_data, card_list, _id }) => (\n                    <SalesListItem\n                        saleData={sale_data}\n                        cardList={card_list}\n                        key={_id}\n                    />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default SalesList;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport SalesList from './SalesList';\nimport axios from 'axios';\nimport makeAuthHeader from './makeAuthHeader';\nimport { GET_SALES_BY_TITLE } from './api_resources';\n\nclass BrowseSales extends Component {\n    state = { salesList: [], cardName: '' };\n\n    handleSearchSelect = async cardName => {\n        const { data } = await axios.get(GET_SALES_BY_TITLE, {\n            params: { cardName: cardName },\n            headers: makeAuthHeader()\n        });\n\n        this.setState({ salesList: data, cardName: cardName });\n    };\n\n    render() {\n        const { salesList, cardName } = this.state;\n\n        return (\n            <div>\n                <SearchBar handleSearchSelect={this.handleSearchSelect} />\n                <br />\n                <span>\n                    <em>\n                        {cardName !== '' && (\n                            <h4>\n                                {salesList.length} results for {cardName}\n                            </h4>\n                        )}\n                    </em>\n                </span>\n                <SalesList list={salesList} />\n            </div>\n        );\n    }\n}\n\nexport default BrowseSales;\n","import React from 'react';\nimport QohParser from './QohParser';\nimport { Image } from 'semantic-ui-react'\n\nconst wrapperStyle = {\n    position: 'relative',\n    display: 'inline-block',\n};\n\nconst overlayStyle = {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    padding: '9px 9px 9px 9px',\n    position: 'absolute',\n    zIndex: '1',\n    bottom: '0px',\n    left: '14px',\n    borderRadius: '7px'\n};\n\nconst roundedStyle = {\n    borderRadius: '15px'\n}\n\nconst image = (image_uris, card_faces) => {\n    try {\n        // If normal prop doesn't exist, move to catch block for flip card faces\n        return <Image src={image_uris.normal} size=\"medium\" style={roundedStyle} />;\n    } catch (e) {\n        return <Image src={card_faces[0].image_uris.normal} size=\"medium\" style={roundedStyle} />;\n    }\n};\n\nexport default function PublicCardItem({ image_uris, card_faces, qoh }) {\n    return (\n        <React.Fragment>\n            <div style={wrapperStyle}>\n                {image(image_uris, card_faces)}\n                <div style={overlayStyle}>\n                    <QohParser inventoryQty={qoh} />\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport PublicCardItem from './PublicCardItem';\nimport { Grid } from 'semantic-ui-react';\n\nconst gridStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'space-evenly',\n    height: '100%'\n};\n\nexport default function PublicCardList(props) {\n    const cardList = props.cards.map(card => {\n        return (\n            <PublicCardItem\n                key={card.id}\n                {...card}\n                addToSaleList={props.addToSaleList}\n            />\n        );\n    });\n\n    return (\n        <Grid style={gridStyle} >\n            {cardList}\n        </ Grid>\n    );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport {\n    Grid,\n    Segment,\n    Header,\n    Icon,\n    Divider,\n} from 'semantic-ui-react';\nimport SearchBar from './SearchBar';\nimport PublicCardList from './PublicCardList';\nimport { GET_CARDS_BY_TITLE } from './api_resources';\n\nconst initialState = {\n    searchResults: [],\n    saleListCards: [],\n    searchTerm: ''\n};\n\nexport default class PublicInventory extends React.Component {\n    state = initialState;\n\n    handleResultSelect = async term => {\n        try {\n            const { data } = await axios.get(GET_CARDS_BY_TITLE, {\n                params: { title: term }\n            });\n\n            this.setState({ searchResults: data, searchTerm: term });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        const {\n            searchResults,\n            searchTerm\n        } = this.state;\n\n        // Creates text to notify the user of zero-result searches\n        const searchNotification = () => {\n            if (searchTerm && !searchResults.length) { // Check to make sure the user has searched and no results\n                return <p>Zero results for <em>{searchTerm}</em></p>\n            }\n            return <p>Search for a card</p>; // Default text before search\n        }\n\n        return (\n            <React.Fragment>\n                <Grid.Row style={{ display: 'flex', alignItems: 'center' }}>\n                    <SearchBar handleSearchSelect={this.handleResultSelect} />\n                </Grid.Row>\n                <br />\n                <Grid stackable={true}>\n                    <Grid.Column>\n                        <Header as=\"h2\">Inventory Search</Header>\n                        <Divider />\n\n                        {!searchResults.length &&\n                            <Segment placeholder>\n                                <Header icon>\n                                    <Icon name=\"search\" />\n                                    <span>{searchNotification()}</span>\n                                </Header>\n                            </Segment>}\n\n                        <PublicCardList\n                            cards={searchResults}\n                            addToSaleList={this.addToSaleList}\n                        />\n                    </Grid.Column>\n                </Grid >\n            </React.Fragment >\n        );\n    }\n}\n","import React from 'react';\nimport createToast from './createToast';\nimport { Form, Button } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\n\nconst initialState = { username: '', password: '', btnLoading: false };\n\nclass Login extends React.Component {\n    state = initialState;\n\n    handleInputChange = (e, { value }) => {\n        this.setState({ [e.target.name]: value });\n    };\n\n    login = async () => {\n        const { username, password } = this.state;\n\n        this.setState({ btnLoading: true });\n\n        const { authed } = await this.props.handleLogin(username, password);\n\n        if (authed) {\n            // Do not set state here to mitigate React setState warning after component unmounted due to redirect\n            createToast({\n                color: 'green',\n                header: 'Success',\n                message: `Enjoy your time here!`,\n            });\n        } else {\n            this.setState(initialState);\n            createToast({\n                color: 'red',\n                header: 'Error',\n                message: `Username or password was incorrect`,\n            });\n        }\n    };\n\n    render() {\n        const { username, password, btnLoading } = this.state;\n        const { loggedIn } = this.props;\n\n        if (loggedIn) {\n            return <Redirect to=\"/manage-inventory\" />;\n        }\n\n        return (\n            <Form>\n                <Form.Field>\n                    <Form.Input\n                        name=\"username\"\n                        placeholder=\"Username\"\n                        label=\"Username\"\n                        value={username}\n                        onChange={this.handleInputChange}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <Form.Input\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        value={password}\n                        onChange={this.handleInputChange}\n                    />\n                </Form.Field>\n                <Button\n                    type=\"submit\"\n                    onClick={this.login}\n                    disabled={!username || !password}\n                    loading={btnLoading}\n                >\n                    Submit\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Header, Container } from 'semantic-ui-react';\n\nconst Logout = props => {\n    if (!props.loggedIn) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <React.Fragment>\n            <Container fluid>\n                <Header as=\"h3\" color=\"grey\"><i>Until we meet again, friend...</i></Header>\n                <Button onClick={() => props.handleLogin('', '')}>Logout</Button>\n            </Container>\n        </React.Fragment>\n    );\n};\n\nexport default Logout;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Sale from './Sale';\nimport BrowseSales from './BrowseSales';\nimport PublicInventory from './PublicInventory';\nimport Login from './Login';\nimport Logout from './Logout';\n\nfunction Main({ handleLogin, loggedIn }) {\n    // Use the render syntax in the Login component to bind passed props\n    return (\n        <div style={{ paddingTop: '52.63px', marginLeft: '20px', marginRight: '20px' }}>\n            <br />\n            <Switch>\n                <Route exact path=\"/manage-inventory\" component={Home} />\n                <Route exact path=\"/new-sale\" component={Sale} />\n                <Route exact path=\"/browse-sales\" component={BrowseSales} />\n                <Route exact path=\"/public-inventory\" component={PublicInventory} />\n                <Route\n                    exact\n                    path=\"/login\"\n                    render={() => (\n                        <Login handleLogin={handleLogin} loggedIn={loggedIn} />\n                    )}\n                />\n                <Route\n                    exact\n                    path=\"/logout\"\n                    render={() => (\n                        <Logout handleLogin={handleLogin} loggedIn={loggedIn} />\n                    )}\n                />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport ballLogo from './logos/magic-ball.png'\nimport { Menu, Icon, Dropdown } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst style = {\n    background: \"linear-gradient(#2185d0, #206ac6)\",\n    boxShadow: '0 3px 5px 0 rgba(0,0,0,.25)'\n}\n\nclass Header extends React.Component {\n    render() {\n        const { loggedIn } = this.props;\n        return (\n            <Menu inverted fixed=\"top\" style={style}>\n                <Menu.Item>\n                    <img src={ballLogo} style={{ marginRight: '7px' }} alt=\"logo\" />\n                    <span><h3>Clubhouse Collection</h3></span>\n                </Menu.Item>\n                <Menu.Menu position=\"right\">\n                    <Menu.Item position=\"right\" as={Link} to=\"/public-inventory\">Search</Menu.Item>\n                    {loggedIn && <Dropdown item icon=\"bars\">\n                        <Dropdown.Menu>\n                            <React.Fragment>\n                                <Dropdown.Item as={Link} to=\"/manage-inventory\"><Icon name=\"plus\" color=\"blue\" />Manage Inventory</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/new-sale\" ><Icon name=\"dollar sign\" color=\"blue\" />New Sale</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/browse-sales\" ><Icon name=\"eye\" color=\"blue\" />Browse Sales</Dropdown.Item>\n                                <Dropdown.Item as={Link} to=\"/logout\" ><Icon name=\"log out\" color=\"blue\" />Logout</Dropdown.Item>\n                            </React.Fragment>\n                        </Dropdown.Menu>\n                    </Dropdown>}\n                    {!loggedIn && <Menu.Item position=\"right\" as={Link} to=\"/login\">Log in</Menu.Item>}\n                </Menu.Menu>\n            </Menu >\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport Main from './Main';\nimport Header from './Header';\nimport makeAuthHeader from './makeAuthHeader';\nimport { LOGIN } from './api_resources';\nimport axios from 'axios';\n\nclass App extends React.Component {\n    state = { loggedIn: !!localStorage.getItem('clubhouse_JWT') };\n\n    // This is passed to the Login component as props to trigger a re-render of the root navbar\n    handleLogin = async (username, password) => {\n        try {\n            const { data } = await axios.post(LOGIN, {\n                username: username.toLowerCase(),\n                password: password\n            }, { headers: makeAuthHeader() });\n\n            if (data.token) {\n                localStorage.setItem('clubhouse_JWT', data.token);\n\n                this.setState({\n                    loggedIn: !!localStorage.getItem('clubhouse_JWT')\n                });\n\n                return { authed: true };\n            } else {\n                localStorage.clear();\n\n                this.setState({\n                    loggedIn: !!localStorage.getItem('clubhouse_JWT')\n                });\n\n                return { authed: false };\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <Header loggedIn={this.state.loggedIn} />\n                <Main\n                    handleLogin={this.handleLogin}\n                    loggedIn={this.state.loggedIn}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}